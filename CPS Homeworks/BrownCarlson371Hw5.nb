(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    262168,       5970]
NotebookOptionsPosition[    253631,       5685]
NotebookOutlinePosition[    254175,       5707]
CellTagsIndexPosition[    254132,       5704]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Homework 5\n",
 StyleBox["Andrew Brown and Brian Carlson 3-7-14", "Subtitle"]
}], "Title",
 CellChangeTimes->{{3.603165698740989*^9, 3.603165715460989*^9}, {
  3.6031769278241625`*^9, 3.603176932020903*^9}}],

Cell[CellGroupData[{

Cell["\<\
Problem 1. Police Robber Simulation\
\>", "Section",
 CellChangeTimes->{{3.603163994688989*^9, 3.6031639978299894`*^9}, {
  3.6031703283457527`*^9, 3.6031703374047527`*^9}}],

Cell[CellGroupData[{

Cell["Task", "Subsection",
 CellChangeTimes->{{3.603162806771556*^9, 3.603162809679847*^9}}],

Cell[TextData[{
 "(i) Write a function ",
 StyleBox["checkinside [police1, police2, police3,robber] ",
  FontWeight->"Bold"],
 "that given four points (by coordinates) returns true of the robber is \
inside the triangle formed by the police officers and false otherwise. (If \
the robber is on the boundary of the triangle, the function should return \
false.) \n\n(ii) Create a function ",
 StyleBox["easyRunaway [police1, police2, police3,robber, length , \
numberSteps]. ",
  FontWeight->"Bold"],
 " Here the first four entries tell you the position of the robber and the \
police officers. ",
 StyleBox["length",
  FontSlant->"Italic"],
 " is the length of an individual step and ",
 StyleBox["numberSteps",
  FontSlant->"Italic"],
 " is the number of steps. Furthermore assume that the function ",
 StyleBox["checkinside [police1, police2, police3, robber]",
  FontWeight->"Bold"],
 " returns False, that is the function ",
 StyleBox["easyRunaway",
  FontWeight->"Bold"],
 " is only called if the robber is not inside the triangle formed by the \
police officers. \n\n(iii) Create a function ",
 StyleBox["cleverRunaway[police1, police2, police3,robber, length , \
numberSteps]. ",
  FontWeight->"Bold"],
 " As before the first four entries tell you the position of the robber and \
the police officers. ",
 StyleBox["length",
  FontSlant->"Italic"],
 " is the length of an individual step and ",
 StyleBox["numberSteps",
  FontSlant->"Italic"],
 " is the number of steps. Furthermore assume that the function ",
 StyleBox["checkinside[police1, police2, police3,robber]",
  FontWeight->"Bold"],
 " returns True, that is the function ",
 StyleBox["cleverRunaway",
  FontWeight->"Bold"],
 " is only called if the robber is inside the triangle formed by the police \
officers. \n\n(iv) Using the parts (ii) and (iii) create ",
 StyleBox["Runaway [police1, police2, police3,robber,  length, numberSteps]. ",
  FontWeight->"Bold"],
 " As before the first four entries tell you the position of the robber and \
the police officers. ",
 StyleBox["length",
  FontSlant->"Italic"],
 " is the length of an individual step and ",
 StyleBox["numberSteps",
  FontSlant->"Italic"],
 " is the number of steps. Now depending on where the robber current is s/he \
needs to follow strategy (ii) or (iii). Not that in the case the robber is on \
the triangle boundary the strategy of part (ii) is chosen. Call the functions \
developed in (ii) and (iii) in this function. Do not copy the code."
}], "Text",
 CellChangeTimes->{{3.6031628349693756`*^9, 3.60316284731861*^9}, {
  3.6031629346343412`*^9, 3.603163034301229*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution (i)", "Subsection",
 CellChangeTimes->{{3.603163050235229*^9, 3.603163080732229*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "if", " ", "robber", " ", "is", " ", "inside", " ", "the", 
    " ", "triangle", " ", "formed", " ", "by", " ", "the", " ", "three", " ", 
    RowBox[{"policemen", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"checkinside", "[", 
    RowBox[{"police1_", ",", "police2_", ",", "police3_", ",", "robber_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sumOfAngles", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Sum", " ", "the", " ", "angles", " ", "formed", " ", "by", " ", "the", 
       " ", "robber", " ", "with", " ", "each", " ", "of", " ", "the", " ", 
       "three", " ", 
       RowBox[{"policemen", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sumOfAngles", "=", 
       RowBox[{
        RowBox[{"angle", "[", 
         RowBox[{"police1", ",", "robber", ",", "police2"}], "]"}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"angle", "[", 
         RowBox[{"police1", ",", "robber", ",", "police3"}], "]"}], 
        "\[IndentingNewLine]", "+", 
        RowBox[{"angle", "[", 
         RowBox[{"police2", ",", "robber", ",", "police3"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "If", " ", "the", " ", "angles", " ", "sum", " ", "to", " ", "2", 
         "\[Pi]"}], ",", " ", 
        RowBox[{
        "the", " ", "robber", " ", "is", " ", "inside", " ", "the", " ", 
         RowBox[{"triangle", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"sumOfAngles", "-", 
          RowBox[{"2", "\[Pi]"}]}], "]"}], "<", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.603163598411989*^9, 3.603163600974989*^9}, {
  3.603163767720989*^9, 3.6031638636739893`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Helper Function For Solution (i) \
\>", "Subsubsection",
 CellChangeTimes->{{3.6031713826777525`*^9, 3.603171395140753*^9}, {
  3.603176813187564*^9, 3.60317681709939*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "angle", " ", "between", " ", "the", " ", "two", 
    " ", "vectors", " ", "created", " ", "by", " ", "three", " ", 
    RowBox[{"points", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"angle", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{"VectorAngle", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"b", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"b", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Cases For Solution (i)", "Subsubsection",
 CellChangeTimes->{{3.603163444032229*^9, 3.6031634570022287`*^9}, {
  3.6031768020649014`*^9, 3.60317680320256*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "3"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603163626665229*^9, 3.6031637140942287`*^9}, 
   3.6031639543512287`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{"Black", ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p2", ",", "p3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p3"}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], "]"}], ",", "Red", ",", 
    RowBox[{"Point", "[", "r1", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.603163736953229*^9, 3.6031638750532293`*^9}, 
   3.603163961423229*^9}],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0], 
   LineBox[{{{-10, 10}, {-10, 0}}, {{-10, 0}, {0, 0}}, {{-10, 10}, {0, 0}}}], 
   {PointSize[Large], PointBox[{{-10, 10}, {-10, 0}, {0, 0}}], 
    {RGBColor[1, 0, 0], PointBox[{-5, 3}]}}}]], "Output",
 CellChangeTimes->{
  3.6031638757072287`*^9, {3.603163958150229*^9, 3.603163962555229*^9}}]
}, Open  ]],

Cell["\<\
Here, we can plainly see that the robber is inside of the triangle, so the \
function should return true.\
\>", "Text",
 CellChangeTimes->{{3.6031641671713667`*^9, 3.603164181855303*^9}, {
  3.603164225290988*^9, 3.603164233904711*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkinside", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.603163463323229*^9, 3.6031634989942293`*^9}, {
  3.603163565155229*^9, 3.603163612117229*^9}, {3.603163723195229*^9, 
  3.603163728786229*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.603163613337229*^9, 3.603163956300229*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p6", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603163906739229*^9, 3.603163974463229*^9}, {
  3.603164121514229*^9, 3.603164127493229*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{"Black", ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p4", ",", "p5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p4", ",", "p6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p5", ",", "p6"}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"p4", ",", "p5", ",", "p6"}], "}"}], "]"}], ",", "Red", ",", 
    RowBox[{"Point", "[", "r2", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031640171082287`*^9, 3.603164048915229*^9}}],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0], 
   LineBox[{{{2, 4}, {7, 8}}, {{2, 4}, {2, 10}}, {{7, 8}, {2, 10}}}], 
   {PointSize[Large], PointBox[{{2, 4}, {7, 8}, {2, 10}}], 
    {RGBColor[1, 0, 0], PointBox[{4, 5}]}}}]], "Output",
 CellChangeTimes->{3.603164049768229*^9, 3.603164132527439*^9}]
}, Open  ]],

Cell["\<\
Here, we can plainly see that the robber is outside of the triangle, so the \
function should return false.\
\>", "Text",
 CellChangeTimes->{{3.6031641671713667`*^9, 3.6031642124194145`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkinside", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p4", ",", "p5", ",", "p6"}], "}"}], ",", "r2"}], "]"}]], "Input",
 CellChangeTimes->{{3.603164079246229*^9, 3.6031640932512293`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.6031640939432287`*^9, 3.603164131050229*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p7", "=", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "4"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p8", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "9"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p9", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6031642931755624`*^9, 3.603164352909507*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{"Black", ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p7", ",", "p8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p7", ",", "p9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p8", ",", "p9"}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"p7", ",", "p8", ",", "p9"}], "}"}], "]"}], ",", "Red", ",", 
    RowBox[{"Point", "[", "r3", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031643685816402`*^9, 3.6031643929045043`*^9}}],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0], 
   LineBox[{{{9, -4}, {5, -9}}, {{9, -4}, {1, 1}}, {{5, -9}, {1, 1}}}], 
   {PointSize[Large], PointBox[{{9, -4}, {5, -9}, {1, 1}}], 
    {RGBColor[1, 0, 0], PointBox[{0, 0}]}}}]], "Output",
 CellChangeTimes->{3.603164396763276*^9}]
}, Open  ]],

Cell["\<\
Here, we can plainly see that the robber is outside of the triangle, so the \
function should return false.\
\>", "Text",
 CellChangeTimes->{{3.6031644039387107`*^9, 3.603164416504223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkinside", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p7", ",", "p8", ",", "p9"}], "}"}], ",", "r3"}], "]"}]], "Input",
 CellChangeTimes->{{3.603164422909504*^9, 3.603164441014175*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.6031644416582394`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution (ii)", "Subsection",
 CellChangeTimes->{{3.60316446607168*^9, 3.603164482576331*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Simulates", " ", "a", " ", "robber", " ", "running", " ", "from", " ", 
     "outside", " ", "of", " ", "the", " ", "triangle", " ", "formed", " ", 
     "by", " ", "three", " ", "police"}], ",", " ", 
    RowBox[{
    "perpendicular", " ", "to", " ", "the", " ", "nearest", " ", "side", " ", 
     "of", " ", "that", " ", 
     RowBox[{"triangle", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"easyRunaway", "[", 
    RowBox[{
    "police1_", ",", "police2_", ",", "police3_", ",", "robber_", ",", 
     "length_", ",", "numberSteps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"closePoliceList", " ", "=", " ", 
       RowBox[{"findTwoClosest", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"police1", ",", "police2", ",", "police3"}], "}"}], ",", 
         "robber"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Problem", " ", "reduces", " ", "to", " ", "the", " ", "2"}], 
       "-", 
       RowBox[{
       "police", " ", "case", " ", "once", " ", "the", " ", "two", " ", 
        "nearest", " ", "police", " ", "have", " ", "been", " ", 
        RowBox[{"found", ".", " ", "Complement"}], " ", "finds", " ", "the", 
        " ", "one", " ", "police", " ", "that", " ", "is", " ", "not", " ", 
        "one", " ", "of", " ", "the", " ", 
        RowBox[{"closest", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"robberRun", "[", 
      RowBox[{"robber", ",", 
       RowBox[{"closePoliceList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"closePoliceList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"police1", ",", "police2", ",", "police3"}], "}"}], ",", 
          "closePoliceList"}], "]"}], "]"}], ",", "length", ",", "1", ",", 
       "numberSteps"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.603164487308804*^9, 3.6031644879748707`*^9}, 
   3.6031705613327527`*^9, {3.603170742676753*^9, 3.603170770336753*^9}}],

Cell[CellGroupData[{

Cell["\<\
Helper Functions for Solution (ii)\
\>", "Subsubsection",
 CellChangeTimes->{{3.603175721707766*^9, 3.603175732200815*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "the", " ", "pair", " ", "of", " ", "policemen", " ", 
    "closest", " ", "to", " ", "the", " ", "robber"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"findTwoClosest", "[", 
     RowBox[{"policeList_", ",", "robber_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"permutations", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"distances", "=", 
         RowBox[{"{", "}"}]}], ",", "position"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Take", " ", "all", " ", "permutations", " ", "of", " ", "2", " ", 
        "of", " ", "the", " ", 
        RowBox[{"policemen", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"permutations", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{
          RowBox[{"Permutations", "[", 
           RowBox[{"policeList", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[Equal]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "&"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Find", " ", "the", " ", "distances", " ", "between", " ", "the", " ",
          "robber", " ", "and", " ", "the", " ", "police", " ", "for", " ", 
         "each", " ", 
         RowBox[{"permutation", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"distances", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"EuclideanDistance", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "robber"}], "]"}], "+", 
            RowBox[{"EuclideanDistance", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/", "2"}], ",", "robber"}], 
             "]"}]}], ")"}], "&"}], "/@", "permutations"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Find", " ", "and", " ", "return", " ", "the", " ", "minimum"}], "-", 
         RowBox[{"distance", " ", 
          RowBox[{"permutation", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"position", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"distances", ",", 
            RowBox[{"Min", "[", "distances", "]"}]}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"permutations", "[", 
         RowBox[{"[", "position", "]"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Simulates", " ", "the", " ", "robber", " ", "running", " ", 
      "perpendicular", " ", "to", " ", "the", " ", "line", " ", "formed", " ",
       "by", " ", "the", " ", "two", " ", "nearest", " ", 
      RowBox[{"policemen", ".", " ", "Taken"}], " ", "from", " ", "code", " ",
       "written", " ", "in"}], "-", 
     RowBox[{
     "class", " ", "when", " ", "the", " ", "problem", " ", "was", " ", 
      RowBox[{"introduced", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"robberRun", "[", 
     RowBox[{
     "robberco_", ",", "police1co_", ",", "police2co_", ",", "police3co_", 
      ",", "speed_", ",", "timestep_", ",", "stepnum_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pol1x", " ", "=", " ", 
         RowBox[{"police1co", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"pol1y", " ", "=", " ", 
         RowBox[{"police1co", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"pol2x", " ", "=", " ", 
         RowBox[{"police2co", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"pol2y", " ", "=", " ", 
         RowBox[{"police2co", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"pol3x", " ", "=", " ", 
         RowBox[{"police3co", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"pol3y", " ", "=", " ", 
         RowBox[{"police3co", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"currentRobx", " ", "=", " ", 
         RowBox[{"robberco", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"currentRoby", " ", "=", " ", 
         RowBox[{"robberco", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "i", ",", " ", 
        RowBox[{"L", " ", "=", " ", 
         RowBox[{"speed", " ", "*", " ", "timestep"}]}], ",", 
        RowBox[{"robberPt", " ", "=", " ", 
         RowBox[{"{", "robberco", "}"}]}], ",", 
        RowBox[{"police1Pt", "=", 
         RowBox[{"{", "police1co", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"police2Pt", "=", 
         RowBox[{"{", "police2co", "}"}]}], ",", 
        RowBox[{"police3Pt", " ", "=", " ", 
         RowBox[{"{", "police3co", "}"}]}], ",", "policeSlope", ",", " ", 
        "xchange", ",", " ", "ychange", ",", "dx", ",", "dy"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "The", " ", "slope", " ", "of", " ", "the", " ", "line", " ", "formed",
         " ", "by", " ", "the", " ", "police", " ", 
        RowBox[{"points", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"policeSlope", "=", 
        FractionBox[
         RowBox[{"pol2y", "-", "pol1y"}], 
         RowBox[{"pol2x", "-", "pol1x"}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Solve", " ", "for", " ", "the", " ", "xchange", " ", "and", " ", 
          "ychange"}], ",", " ", 
         RowBox[{
         "where", " ", "they", " ", "satisfy", " ", "the", " ", "Pythagorean",
           " ", "identity", " ", "in", " ", "summing", " ", "to", " ", "the", 
          " ", "step", " ", "length", " ", "and", " ", "are", " ", 
          "perpendicular", " ", "to", " ", "the", " ", "police", " ", 
          RowBox[{"line", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xchange", ",", "ychange"}], "}"}], " ", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dx", ",", "dy"}], "}"}], "/.", 
          RowBox[{
           RowBox[{"NSolve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                SuperscriptBox["L", "2"], " ", "==", " ", 
                RowBox[{
                 SuperscriptBox["dx", "2"], "+", 
                 SuperscriptBox["dy", "2"]}]}], ",", " ", 
               RowBox[{
                RowBox[{"dy", "/", "dx"}], " ", "==", " ", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "policeSlope"}]}]}], "}"}], ",", 
             " ", 
             RowBox[{"{", 
              RowBox[{"dx", ",", "dy"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Iterate", " ", "stepnum", " ", 
         RowBox[{"times", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", " ", "\[LessEqual]", " ", "stepnum"}], ",", " ", 
         RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "The", " ", "new", " ", "police", " ", "coordinates", " ", "are", 
           " ", "determined", " ", "by", " ", "multiplying", " ", "the", " ", 
           "steplength", " ", "by", " ", "cosine", " ", "and", " ", "sine", 
           " ", "so", " ", "that", " ", "they", " ", "move", " ", "in", " ", 
           "the", " ", "direction", " ", "of", " ", "the", " ", 
           RowBox[{"robber", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pol1x", " ", "=", " ", 
           RowBox[{"pol1x", "+", " ", 
            RowBox[{"L", " ", "*", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"currentRobx", " ", "-", " ", "pol1x"}], ")"}], " ", 
              "/", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRobx", " ", "-", " ", "pol1x"}], ")"}], 
                 "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRoby", " ", "-", " ", "pol1y"}], ")"}], 
                 "2"], " "}]]}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"pol1y", " ", "=", " ", 
           RowBox[{"pol1y", "+", " ", 
            RowBox[{"L", " ", "*", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"currentRoby", "-", " ", "pol1y"}], ")"}], " ", "/", 
              " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRobx", " ", "-", " ", "pol1x"}], ")"}], 
                 "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRoby", " ", "-", " ", "pol1y"}], ")"}], 
                 "2"], " "}]]}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"police1Pt", ",", " ", 
            RowBox[{"{", 
             RowBox[{"pol1x", ",", " ", "pol1y"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pol2x", "=", " ", 
           RowBox[{"pol2x", "+", " ", 
            RowBox[{"L", " ", "*", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"currentRobx", "-", " ", "pol2x"}], ")"}], " ", "/", 
              " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRobx", " ", "-", " ", "pol2x"}], ")"}], 
                 "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRoby", "-", " ", "pol2y"}], ")"}], "2"], 
                " "}]]}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"pol2y", " ", "=", " ", 
           RowBox[{"pol2y", "+", " ", 
            RowBox[{"L", " ", "*", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"currentRoby", " ", "-", " ", "pol2y"}], ")"}], " ", 
              "/", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRobx", "-", " ", "pol2x"}], ")"}], "2"], 
                " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRoby", "-", " ", "pol2y"}], ")"}], "2"], 
                " "}]]}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"police2Pt", ",", " ", 
            RowBox[{"{", 
             RowBox[{"pol2x", ",", " ", "pol2y"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pol3x", "=", " ", 
           RowBox[{"pol3x", "+", " ", 
            RowBox[{"L", " ", "*", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"currentRobx", "-", " ", "pol3x"}], ")"}], " ", "/", 
              " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRobx", " ", "-", " ", "pol3x"}], ")"}], 
                 "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRoby", "-", " ", "pol3y"}], ")"}], "2"], 
                " "}]]}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"pol3y", " ", "=", " ", 
           RowBox[{"pol3y", "+", " ", 
            RowBox[{"L", " ", "*", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"currentRoby", " ", "-", " ", "pol3y"}], ")"}], " ", 
              "/", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRobx", "-", " ", "pol3x"}], ")"}], "2"], 
                " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"currentRoby", "-", " ", "pol3y"}], ")"}], "2"], 
                " "}]]}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"police3Pt", ",", " ", 
            RowBox[{"{", 
             RowBox[{"pol3x", ",", " ", "pol3y"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Add", " ", "or", " ", "subtract", " ", "the", " ", "x"}],
             "-", " ", 
            RowBox[{
            "and", " ", "ychange", " ", "for", " ", "the", " ", "robber", " ",
              "based", " ", "on", " ", "the", " ", "position", " ", "of", " ",
              "the", " ", "two", " ", 
             RowBox[{"police", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"robberco", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", ">", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"robberco", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"police1co", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"police2co", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], ")"}], 
               " ", "*", " ", "policeSlope"}], " ", "+", " ", 
              RowBox[{"Min", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"police1co", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                 RowBox[{"police2co", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"currentRoby", " ", "=", " ", 
             RowBox[{"currentRoby", " ", "+", " ", "ychange"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"currentRoby", " ", "=", " ", 
             RowBox[{"currentRoby", " ", "-", "ychange"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"robberco", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"robberco", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"police1co", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"police2co", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ")"}], 
               " ", "/", " ", "policeSlope"}], "+", " ", 
              RowBox[{"Min", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"police1co", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"police2co", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"currentRobx", " ", "=", " ", 
             RowBox[{"currentRobx", " ", "+", " ", "xchange"}]}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"currentRobx", " ", "=", " ", 
             RowBox[{"currentRobx", " ", "-", " ", "xchange"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"robberPt", ",", " ", 
            RowBox[{"{", 
             RowBox[{"currentRobx", ",", " ", "currentRoby"}], "}"}]}], "]"}],
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "a", " ", "plot", " ", "of", " ", "all", " ", "of", 
         " ", "the", " ", "points", " ", "for", " ", "the", " ", "police", 
         " ", "and", " ", "the", " ", 
         RowBox[{"robber", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "police1Pt", ",", "police2Pt", ",", "police3Pt", ",", "robberPt", 
             ",", " ", 
             RowBox[{"{", 
              RowBox[{"police1co", ",", " ", "police2co", ",", "police3co"}], 
              "}"}], ",", " ", 
             RowBox[{"{", "robberco", "}"}]}], "}"}], ",", " ", 
           RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Blue", ",", " ", 
                RowBox[{"PointSize", "[", "Small", "]"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"Purple", " ", ",", 
                RowBox[{"PointSize", "[", "Small", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Yellow", ",", 
                RowBox[{"PointSize", "[", "Small", "]"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"Red", ",", " ", 
                RowBox[{"PointSize", "[", "Small", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Green", ",", " ", 
                RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"Orange", ",", 
                RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Red", ",", " ", 
                RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], "}"}]}], 
           ",", " ", 
           RowBox[{"Joined", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
             "True", ",", " ", "True", ",", "True", ",", "True", ",", " ", 
              "False", ",", "False", ",", " ", "False"}], "}"}]}]}], "]"}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.603175739836579*^9, {3.603175803726967*^9, 3.6031758049390883`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Cases For Solution (ii)", "Subsubsection",
 CellChangeTimes->{{3.603164500738147*^9, 3.6031645063327065`*^9}, {
  3.6031767887918844`*^9, 3.6031767913271236`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"easyRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "2"}], "}"}], ",", ".1", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.603157825072991*^9, 3.603158027456991*^9}, {
   3.603164023379989*^9, 3.603164217504989*^9}, {3.6031642519769893`*^9, 
   3.603164311828989*^9}, {3.603164343830989*^9, 3.603164433611989*^9}, {
   3.603164538582989*^9, 3.6031646435539894`*^9}, 3.6031707583457527`*^9, 
   3.603170790784753*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], 
     LineBox[{{-1., 1.}, {-0.9167949705662156, 
      1.0576648339819577`}, {-0.8368711614992629, 
      1.1200627015624278`}, {-0.760632267395364, 
      1.1871252980447884`}, {-0.6884869251559874, 
      1.2587203451259519`}, {-0.6208366344171503, 
      1.334649149804041}, {-0.5580613704337944, 
      1.414648071616414}, {-0.5005036530642467, 
      1.4983944090603436`}, {-0.44845232907719673`, 
      1.5855166521107726`}, {-0.40212773883704245`, 
      1.675608381696662}, {-0.3616701096237181, 1.7682444863371565`}}]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], 
     LineBox[{{1., 2.}, {0.9, 2.}, {0.801963120216656, 2.0249814534215584`}, {
      0.7088990940126396, 2.070827188388422}, {0.6222346361909088, 
      2.1318508933022433`}, {0.5422448286862747, 2.203315067168066}, {
      0.468557200121237, 2.2818639962658227`}, {0.40046695686832606`, 
      2.365229718093644}, {0.33712932916085725`, 2.4518946411981126`}, {
      0.2776841872538378, 2.540841921513728}, {0.22133359034647626`, 
      2.6313866286884444`}}]}, 
    {RGBColor[1, 1, 0], PointSize[Small], 
     LineBox[{{0., -1.}, {0.01643989873053573, -0.9012742802408908}, {
      0.030957802667915348`, -0.8022658222971758}, {
      0.04358913214237338, -0.7030149522058927}, {
      0.05437106613172663, -0.6035598579975272}, {
      0.06334230016777885, -0.503936569668975}, {
      0.07054281068686612, -0.40417895678693583`}, {
      0.07601362792600752, -0.30431874203295717`}, {
      0.07979661909986374, -0.20438552894288037`}, {
      0.08193428323475598, -0.1044068420796576}, {
      0.0824695586936917, -0.004408177903062777}}]}, 
    {RGBColor[1, 0, 0], PointSize[Small], 
     LineBox[{{0.5, 2.}, {0.4552786404500042, 2.0894427190999916`}, {
      0.4105572809000084, 2.178885438199983}, {0.36583592135001264`, 
      2.2683281572999747`}, {0.32111456180001685`, 2.3577708763999663`}, {
      0.27639320225002106`, 2.447213595499958}, {0.23167184270002528`, 
      2.5366563145999494`}, {0.1869504831500295, 2.626099033699941}, {
      0.1422291236000337, 2.7155417527999326`}, {0.09750776405003792, 
      2.804984471899924}, {0.05278640450004213, 2.8944271909999157`}}]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{-1., 1.}, {1., 2.}, {0., -1.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{0.5, 2.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Method->{},
  PlotRange->{{-1., 1.}, {-1., 2.8944271909999157`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.04, 0.04}, {0.07788854381999831, 
   0.07788854381999831}}]], "Output",
 CellChangeTimes->{3.603170795908753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"easyRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7"}], "}"}], ",", ".1", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.603170868403753*^9, 3.603170877511753*^9}, {
  3.603170917566753*^9, 3.603170976025753*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECDlCGw6TlUoKiIgIOu1YJyvw8weBg/djnlrWa
gIOc2q7ZyycxOhxv+m2bZybg8On/ad9fMUwOYdX/u5e5CDg8FW3Jvq/O7CBu
8qHzfoCAQ5PLgUUun5kdLjnKVItECzgUbyhSFN/P4rDnu4SGY7KAA/su10XO
3awOWx0vPk3MFHBY9z++als4m8Om/X9mF+cKOHCZGK+IVmF3uCnx8lRxvoDD
RBGbx3If2R0ufm+YkADkK8yZuub1Xg6HDrG6NRZA9cr7bBPWdnE6cKlva/6d
IeCQsOyZm384lwOzWanSyiQBB6/9Oiv2KHM7/Pe6besUJeBgs5H97oP33A4/
ys1MTvgLODwy905avpvH4ZV6GI+ts4CDrRTP699tvA5zjW8ULzYRcOg5ubfo
VCCfg86f4j3/lIHu17rn91+a32F1tveNIEEBB+ljbA7tT/kdAF94gvM=
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAAAAAAAAAAIEAAAAAAAAAkQHQCuJ6X
tx9Asg2V8l3bI0Cg8NE6jG0fQIdScfONtyNA2FfGVeQhH0AWkx7SlpQjQKH+
KEOn1B5A5sT4Nn9yI0CYubUm3YUeQCtOwplNUSNAcDKF8I41HkDwcwg4CDEj
QLjfWlfG4x1Al9t0C7URI0C25AXRjZAdQCQULMBZ8yJA2OfXiPA7HUA8nlur
+9UiQOPjPlT65RxAiLUbwp+5IkB5PZmlt44cQMMMypBKniJAUKJlfTU2HECs
ngIzAIQiQN8I+lmB3BtAu5FaTMRqIkBwK/YlqYEbQODm/gGaUiJAPbGtJbsl
G0ANRlX1gzsiQIONzOPFyBpAMMa4P4QlIkBaqHwd2GoaQLEoZ2+cECJAhnRW
rgAMGkDm16yFzfwhQJKMZnxOrBlA/0RX9hfqIUAAzpBk0EsZQLlGbqh72CFA
bPOP6g==
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQFqDjDW0adNn9beU3V4fHxn7MG2zfbvUy3OGu5V
dRDaUhl6vPawffNLDsme2aoOHObn0m31z9rfTOqJ3Vup6nBrZa/vs+zL9s9n
cCgeC1d16Dp1pnC/9Q37BWvzXywzVXV48VjcUp/9rn3v3TjzBGFVB8/KnhzZ
5w/sN5XJTvj0QcWhUe7UxWKPx/ZfWOYUx51TcfDVXdE0d/lTe8lNxYlLVqs4
zApodJrL8sJ+7vWn1490qDhosio8LI1/Zd954HbwgVQVhyJ/SyutHW/s+2Y+
C5jupOKQtPulyV6+9/aze+09veRVHE6Ezno4Y+MHeyfeE1tv/lZ2CP53qODo
rY/2+vZcfG43lB1SGKRPP2X6bC82w/JE/xZlB/7X7RW/Nb/YZ84wjtw+Qdkh
jDeXlSPgq737ugaTvTnKDjX/C5h4S7/Z81uFnlnooeygH+PCwjPzuz0AHsmV
hw==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEiDhBaxmFB2i6FzCXCDhvOLMo/rSvj4HC2xPGS
h7BDwkzX+9OiZRweGOsnWb8VchBIe+GX1Cnj0DDrZdOSiUIOB4y69+lul3FQ
YFyymNdMyKHgv67ezycyDgfS446U3RJ0UDhzYe4RIVmHhHMST+/XCTpcmFHM
O8FB1oHB9DKrp7KgQ0OqWG10nqzDgtm9apuOCzgYGO18ozZH1sGBycNdOkfA
4cG/6JhPJ2UdHmQwZbQICDhMOP3v9N7vsg6M8ysFb2fyOzjMWGjdqSrn4JTz
LmjtJj6HDykuq0OC5RyaLZOn1P/mdVhg+FxKoVHO4QjbjauBLrwOAf86u16v
k3NgveIjrtLL48BwWufXtjtyDm4LD0Z8u8rtsGH6+cwmLnmH9jyzWSfkuB0S
Uopu+lrIO5ywXn17VjqXg4ChqKdkmrwDJ6eCbO4GTocDf7fveDJZ3gEAT2iF
dQ==
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{4., 2.}, {8., 10.}, {11., 0.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{5., 7.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{3.2111456180001636`, 0},
  Method->{},
  PlotRange->{{3.2111456180001636`, 11.}, {0, 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.15577708763999673`, 0.15577708763999673`}, {0.2, 
   0.2}}]], "Output",
 CellChangeTimes->{3.6031709769187527`*^9}]
}, Open  ]],

Cell[TextData[{
 "We know that a right angle is at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SqrtBox["2"], "2"], ",", 
     FractionBox[
      SqrtBox["2"], "2"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6031746365842648`*^9, 3.6031747269803033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"easyRunaway", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        SqrtBox["2"], "2"], ",", 
       FractionBox[
        RowBox[{"-", 
         SqrtBox["2"]}], "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SqrtBox["2"]}], "2"], ",", 
       FractionBox[
        SqrtBox["2"], "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SqrtBox["2"]}], "2"], ",", 
       FractionBox[
        RowBox[{"-", 
         SqrtBox["2"]}], "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        SqrtBox["2"], "2"], ",", 
       FractionBox[
        SqrtBox["2"], "2"]}], "}"}], ",", ".1", ",", "17"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            SqrtBox["2"], "2"], ",", 
           FractionBox[
            RowBox[{"-", 
             SqrtBox["2"]}], "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"-", 
             SqrtBox["2"]}], "2"], ",", 
           FractionBox[
            SqrtBox["2"], "2"]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            SqrtBox["2"], "2"], ",", 
           FractionBox[
            SqrtBox["2"], "2"]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6031710273517528`*^9, 3.603171210994753*^9}, {
   3.603174210818692*^9, 3.6031742196915793`*^9}, 3.6031746273523417`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[Small], 
      LineBox[{{0.7071067811865475, -0.7071067811865475}, {
       0.7071067811865475, -0.6071067811865475}, {
       0.7122058825949444, -0.5072188148681916}, {
       0.7222105732132222, -0.40765005961589323`}, {
       0.7368984182713398, -0.3085810996326558}, {
       0.7560260981302258, -0.2101652509811307}, {
       0.7793370537980416, -0.11252896469800136`}, {
       0.8065683463408782, -0.01577307071963588}, {0.8374564994337291, 
       0.08002537700688675}, {0.8717422372645486, 0.17481087276594154`}, {
       0.9091741388794594, 0.2685470331705222}, {0.9495113020184086, 
       0.36121411899591505`}, {0.99252514883014, 0.45280661310400133`}, {
       1.0380005201173848`, 0.5433309296157295}, {1.085736201954151, 
       0.6328033020191459}, {1.1355450155502607`, 0.7212478763452768}, {
       1.1872535833464692`, 0.8086950194099477}, {1.2407018650657895`, 
       0.8951798406004662}}]}, 
     {RGBColor[0.5, 0, 0.5], PointSize[Small], 
      LineBox[{{-0.7071067811865475, 
       0.7071067811865475}, {-0.6071067811865475, 
       0.7071067811865475}, {-0.5072368699778812, 
       0.7126010136196279}, {-0.40773570200419573`, 
       0.7233581794176596}, {-0.30880771561076, 
       0.7391096499880614}, {-0.21062222765626573`, 
       0.7595613913483484}, {-0.11331429470262164`, 
       0.7844050956561054}, {-0.01698688944496511, 0.8133278404679094}, {
       0.07828606232430396, 0.8460199392249085}, {0.17245618432467757`, 
       0.882180926986725}, {0.26549700924585107`, 0.9215238172733999}, {
       0.35740042419289497`, 0.9637778722585285}, {0.4481733518802371, 
       1.0086901679612421`}, {0.5378347531574164, 1.0560262308572588`}, {
       0.6264129886910104, 1.1055699920995943`}, {0.7139435446303933, 
       1.1571232647199474`}, {0.80046710601087, 1.2105049069591607`}, {
       0.8860279495037802, 1.2655497962949842`}}]}, 
     {RGBColor[1, 1, 0], PointSize[Small], 
      LineBox[{{-0.7071067811865475, -0.7071067811865475}, \
{-0.6363961030678927, -0.634606837827106}, {-0.5656406791785545, \
-0.5621493047077067}, {-0.49484266012837014`, -0.48973213970097734`}, \
{-0.4240040918294263, -0.41735339494175583`}, {-0.35312692063066836`, \
-0.3450112126664242}, {-0.28221299819466183`, -0.27270382121981807`}, \
{-0.21126408613006203`, -0.20042953122445445`}, {-0.1402818603925865, \
-0.12818673190682828`}, {-0.06926791546656616, -0.05597388757555535}, {
       0.001776231661521785, 0.016210465753810605`}, {0.07284913772676901, 
       0.0883677235923972}, {0.14394942959662452`, 0.16049921607510115`}, {
       0.21507580085914046`, 0.2326062109260893}, {0.28622700857958583`, 
       0.30468991629755904`}, {0.3574018702168328, 0.37675148348649956`}, {
       0.4285992606913869, 0.4487920095340831}, {0.4998181095973694, 
       0.5208125397121994}}]}, 
     {RGBColor[1, 0, 0], PointSize[Small], 
      LineBox[{{0.7071067811865475, 0.7071067811865475}, {0.7778174593052022, 
       0.7778174593052022}, {0.8485281374238569, 0.8485281374238569}, {
       0.9192388155425116, 0.9192388155425116}, {0.9899494936611664, 
       0.9899494936611664}, {1.0606601717798212`, 1.0606601717798212`}, {
       1.131370849898476, 1.131370849898476}, {1.2020815280171309`, 
       1.2020815280171309`}, {1.2727922061357857`, 1.2727922061357857`}, {
       1.3435028842544405`, 1.3435028842544405`}, {1.4142135623730954`, 
       1.4142135623730954`}, {1.4849242404917502`, 1.4849242404917502`}, {
       1.555634918610405, 1.555634918610405}, {1.6263455967290599`, 
       1.6263455967290599`}, {1.6970562748477147`, 1.6970562748477147`}, {
       1.7677669529663695`, 1.7677669529663695`}, {1.8384776310850244`, 
       1.8384776310850244`}, {1.9091883092036792`, 1.9091883092036792`}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], 
      PointBox[{{
       0.7071067811865475, -0.7071067811865475}, {-0.7071067811865475, 
       0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}]}, 
     {RGBColor[1, 0.5, 0], PointSize[Large], 
      PointBox[{{0.7071067811865475, 0.7071067811865475}}]}}, {}}, 
   {GrayLevel[0], 
    LineBox[
     NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
        Rational[-1, 2]}}, {{
      0.7071067811865475, -0.7071067811865475}, {-0.7071067811865475, 
      0.7071067811865475}}]], 
    LineBox[NCache[{{0, 0}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
       0}, {0.7071067811865475, 0.7071067811865475}}]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Method->{},
  PlotRange->{{-0.7071067811865475, 
   1.9091883092036792`}, {-0.7071067811865475, 1.9091883092036792`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.05232590180780454, 0.05232590180780454}, {
   0.05232590180780454, 0.05232590180780454}}]], "Output",
 CellChangeTimes->{{3.6031711113807526`*^9, 3.6031711238927526`*^9}, 
   3.603171212178753*^9, 3.603174220445655*^9, 3.603174628300436*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution (iii)", "Subsection",
 CellChangeTimes->{{3.6031645162947025`*^9, 3.60316452087016*^9}, 
   3.603171237212753*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Simulates", " ", "a", " ", "robber", " ", "running", " ", "away", " ", 
     "from", " ", "police"}], ",", " ", 
    RowBox[{
    "starting", " ", "inside", " ", "the", " ", "triangle", " ", "that", " ", 
     "they", " ", 
     RowBox[{"determine", ".", " ", "Once"}], " ", "the", " ", "robber", " ", 
     "reaches", " ", "the", " ", "nearest", " ", "midpoint"}], ",", " ", 
    RowBox[{
    "he", " ", "runs", " ", "perpendicular", " ", "to", " ", "that", " ", 
     RowBox[{"side", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"cleverRunaway", "[", 
    RowBox[{
    "police1_", ",", "police2_", ",", "police3_", ",", "robber_", ",", 
     "length_", ",", "numberSteps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"police1Pt", " ", "=", " ", 
        RowBox[{"{", "police1", "}"}]}], ",", 
       RowBox[{"police2Pt", " ", "=", " ", 
        RowBox[{"{", "police2", "}"}]}], ",", 
       RowBox[{"police3Pt", " ", "=", " ", 
        RowBox[{"{", "police3", "}"}]}], ",", 
       RowBox[{"pol1x", " ", "=", " ", 
        RowBox[{"police1", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"pol1y", " ", "=", " ", 
        RowBox[{"police1", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"pol2x", " ", "=", " ", 
        RowBox[{"police2", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"pol2y", " ", "=", " ", 
        RowBox[{"police2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"pol3x", " ", "=", " ", 
        RowBox[{"police3", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"pol3y", " ", "=", " ", 
        RowBox[{"police3", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"robberPt", " ", "=", " ", 
        RowBox[{"{", "robber", "}"}]}], ",", 
       RowBox[{"robberCo", " ", "=", " ", "robber"}], ",", 
       RowBox[{"closePoliceList", " ", "=", " ", 
        RowBox[{"findNearestMidpoint", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"police1", ",", "police2", ",", "police3"}], "}"}], ",", 
          "robber"}], "]"}]}], ",", "i", ",", "xchange", ",", " ", "ychange", 
       ",", "dx", ",", " ", "dy"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Solve", " ", "for", " ", "the", " ", "xchange", " ", "and", " ", 
        "ychange"}], ",", " ", 
       RowBox[{
       "where", " ", "they", " ", "satisfy", " ", "the", " ", "Pythagorean", 
        " ", "identity", " ", "in", " ", "summing", " ", "to", " ", "the", 
        " ", "step", " ", "length", " ", "and", " ", "are", " ", 
        "perpendicular", " ", "to", " ", "the", " ", "police", " ", 
        RowBox[{"line", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xchange", ",", "ychange"}], "}"}], " ", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dx", ",", "dy"}], "}"}], "/.", 
         RowBox[{
          RowBox[{"NSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SuperscriptBox["length", "2"], " ", "==", " ", 
               RowBox[{
                SuperscriptBox["dx", "2"], "+", 
                SuperscriptBox["dy", "2"]}]}], ",", " ", 
              RowBox[{
               RowBox[{"dy", "/", "dx"}], " ", "==", " ", 
               RowBox[{
                RowBox[{"-", "1"}], "/", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"closePoliceList", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", 
                   RowBox[{"closePoliceList", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"closePoliceList", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"closePoliceList", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ")"}]}]}]}]}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"dx", ",", "dy"}], "}"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Iterate", " ", "numberSteps", " ", 
        RowBox[{"times", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", " ", "\[LessEqual]", " ", "numberSteps"}], ",", " ", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Determine", " ", "if", " ", "the", " ", "robber", " ", "is", " ", 
          "inside", " ", "the", " ", "triangle", " ", "but", " ", "not", " ", 
          "on", " ", "the", " ", 
          RowBox[{"line", "."}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"checkinside", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"pol1x", ",", "pol1y"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"pol2x", ",", "pol2y"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"pol3x", ",", "pol3y"}], "}"}], ",", "robberCo"}], 
             "]"}], "&&", 
            RowBox[{"!", 
             RowBox[{"liesOnLine", "[", 
              RowBox[{"closePoliceList", ",", "robberCo"}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"If", " ", "inside"}], ",", " ", 
             RowBox[{
             "take", " ", "a", " ", "step", " ", "toward", " ", "the", " ", 
              "nearest", " ", 
              RowBox[{"midpoint", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"robberCo", " ", "=", " ", 
            RowBox[{"returnRobberCoordInside", "[", 
             RowBox[{"robberCo", ",", "closePoliceList", ",", "length"}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Run", " ", "in", " ", "the", " ", "direction", " ", "that", " ",
               "increases", " ", "distance", " ", "from", " ", "the", " ", 
              "third", " ", "policeman", " ", "once", " ", "outside", " ", 
              "or", " ", "on", " ", "the", " ", "line", " ", "of", " ", "the",
               " ", "triangle"}], ".."}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"robberCo", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "ychange", " ", "-", 
                 " ", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"police1", ",", "police2", ",", "police3"}], 
                    "}"}], ",", "closePoliceList"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ">", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"robberCo", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"police1", ",", "police2", ",", "police3"}], 
                    "}"}], ",", "closePoliceList"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", " ", 
               RowBox[{
                RowBox[{"robberCo", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", " ", "ychange"}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", " ", 
               RowBox[{
                RowBox[{"robberCo", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", " ", "ychange"}]}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"robberCo", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "+", "xchange", " ", "-", 
                 " ", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"police1", ",", "police2", ",", "police3"}], 
                    "}"}], ",", "closePoliceList"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"robberCo", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"police1", ",", "police2", ",", "police3"}], 
                    "}"}], ",", "closePoliceList"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
               RowBox[{
                RowBox[{"robberCo", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", " ", "xchange"}]}], ",",
               " ", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
               RowBox[{
                RowBox[{"robberCo", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", " ", "xchange"}]}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"robberPt", ",", "robberCo"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "All", " ", "of", " ", "the", " ", "police", " ", "take", " ", "a", 
           " ", "step", " ", "toward", " ", "the", " ", 
           RowBox[{"robber", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"pol1x", " ", "=", " ", 
          RowBox[{"pol1x", "+", " ", 
           RowBox[{"length", " ", "*", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", " ", "pol1x"}], ")"}], 
             " ", "/", " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", "pol1x"}], 
                  ")"}], "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", "pol1y"}], 
                  ")"}], "2"]}], " ", ")"}]}]}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pol1y", " ", "=", " ", 
          RowBox[{"pol1y", "+", " ", 
           RowBox[{"length", " ", "*", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", " ", "pol1y"}], ")"}], 
             " ", "/", " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", "pol1x"}], 
                  ")"}], "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", "pol1y"}], 
                  ")"}], "2"]}], " ", ")"}]}]}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"police1Pt", ",", " ", 
           RowBox[{"{", 
            RowBox[{"pol1x", ",", " ", "pol1y"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pol2x", "=", " ", 
          RowBox[{"pol2x", "+", " ", 
           RowBox[{"length", "*", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", " ", "pol2x"}], ")"}], 
             " ", "/", " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", " ", "pol2x"}], 
                  ")"}], "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", " ", "pol2y"}], 
                  ")"}], "2"]}], " ", ")"}]}]}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pol2y", " ", "=", " ", 
          RowBox[{"pol2y", "+", " ", 
           RowBox[{"length", " ", "*", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", "pol2y"}], 
              ")"}], " ", "/", " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", " ", "pol2x"}], 
                  ")"}], "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", " ", "pol2y"}], 
                  ")"}], "2"]}], " ", ")"}]}]}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"police2Pt", ",", " ", 
           RowBox[{"{", 
            RowBox[{"pol2x", ",", " ", "pol2y"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pol3x", "=", " ", 
          RowBox[{"pol3x", "+", " ", 
           RowBox[{"length", " ", "*", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", " ", "pol3x"}], ")"}], 
             " ", "/", " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", "pol3x"}], 
                  ")"}], "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", " ", "pol3y"}], 
                  ")"}], "2"]}], " ", ")"}]}]}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pol3y", " ", "=", " ", 
          RowBox[{"pol3y", "+", " ", 
           RowBox[{"length", " ", "*", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"robberCo", "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", "pol3y"}], 
              ")"}], " ", "/", " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", " ", "pol3x"}], 
                  ")"}], "2"], " ", "+", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"robberCo", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", " ", "pol3y"}], 
                  ")"}], "2"]}], " ", ")"}]}]}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"police3Pt", ",", " ", 
           RowBox[{"{", 
            RowBox[{"pol3x", ",", " ", "pol3y"}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Return", " ", "a", " ", "plot", " ", "of", " ", "all", " ", "of", 
         " ", "the", " ", "police", " ", "and", " ", "robber"}], ",", " ", 
        RowBox[{"along", " ", "with", " ", "their", " ", "initial", " ", 
         RowBox[{"locations", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "police1Pt", ",", "police2Pt", ",", "police3Pt", ",", "robberPt", 
            ",", " ", 
            RowBox[{"{", 
             RowBox[{"police1", ",", " ", "police2", ",", "police3"}], "}"}], 
            ",", " ", 
            RowBox[{"{", "robber", "}"}]}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Blue", ",", " ", 
               RowBox[{"PointSize", "[", "Small", "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"Purple", " ", ",", 
               RowBox[{"PointSize", "[", "Small", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Yellow", ",", 
               RowBox[{"PointSize", "[", "Small", "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"Red", ",", " ", 
               RowBox[{"PointSize", "[", "Small", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", 
               RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"Orange", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", " ", 
               RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], "}"}]}], 
          ",", " ", 
          RowBox[{"Joined", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "True", ",", " ", "True", ",", "True", ",", "True", ",", " ", 
             "False", ",", "False", ",", " ", "False"}], "}"}]}]}], "]"}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Helper Functions For Solution (iii) \
\>", "Subsubsection",
 CellChangeTimes->{{3.6031645260286756`*^9, 3.603164527032776*^9}, 
   3.603171237212753*^9, {3.6031713091757526`*^9, 3.6031713250927525`*^9}, {
   3.603175759060501*^9, 3.603175764213016*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "the", " ", "new", " ", "coordinates", " ", "of", " ", "the",
     " ", "robber", " ", "after", " ", "one", " ", "step", " ", "toward", " ",
     "the", " ", "nearest", " ", 
    RowBox[{"midpoint", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"returnRobberCoordInside", "[", 
     RowBox[{"robber_", ",", "closePoliceList_", ",", "length_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"midpoint", "=", 
         RowBox[{
          RowBox[{"1", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"closePoliceList", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
            RowBox[{"closePoliceList", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ",", "angle"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Find", " ", "the", " ", "angle", " ", "to", " ", "the", " ", 
        "nearest", " ", 
        RowBox[{"midpoint", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"angle", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"midpoint", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"robber", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"midpoint", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"robber", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Use", " ", "sine", " ", "and", " ", "cosine", " ", "to", " ", "add", 
         " ", "the", " ", "y", " ", "and", " ", "x", " ", "components", " ", 
         "to", " ", "the", " ", "robber", " ", 
         RowBox[{"coordinate", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"length", "*", 
            RowBox[{"Cos", "[", "angle", "]"}]}], "+", 
           RowBox[{"robber", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"length", "*", 
            RowBox[{"Sin", "[", "angle", "]"}]}], "+", 
           RowBox[{"robber", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Finds", " ", "the", " ", "pair", " ", "of", " ", "policemen", " ", 
     "that", " ", "have", " ", "the", " ", "midpoint", " ", "nearest", " ", 
     "to", " ", "the", " ", 
     RowBox[{"robber", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findNearestMidpoint", "[", 
     RowBox[{"policeList_", ",", "robber_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"permutations", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"distances", "=", 
         RowBox[{"{", "}"}]}], ",", "position"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Take", " ", "all", " ", "permutations", " ", "of", " ", "2", " ", 
        "of", " ", "the", " ", 
        RowBox[{"policemen", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"permutations", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{
          RowBox[{"Permutations", "[", 
           RowBox[{"policeList", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[Equal]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "&"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Find", " ", "the", " ", "distances", " ", "between", " ", "the", " ",
          "robber", " ", "and", " ", "the", " ", 
         RowBox[{"midpoint", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"distances", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}], ",", 
            "robber"}], "]"}], "&"}], "/@", "permutations"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Find", " ", "and", " ", "return", " ", "the", " ", "minimum"}], "-", 
         RowBox[{"distance", " ", 
          RowBox[{"permutation", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"position", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"distances", ",", 
            RowBox[{"Min", "[", "distances", "]"}]}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"permutations", "[", 
         RowBox[{"[", "position", "]"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Determines", " ", "if", " ", "the", " ", "robber", " ", "is", " ", "on", 
     " ", "the", " ", "line", " ", "formed", " ", "by", " ", "the", " ", 
     "two", " ", 
     RowBox[{"police", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"liesOnLine", "[", 
     RowBox[{"police_", ",", "robber_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"equ", " ", "=", " ", 
        RowBox[{"LinearModelFit", "[", 
         RowBox[{"police", ",", "x", ",", "x"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Returns", " ", "whether", " ", "or", " ", "not", " ", "the", " ", 
        "robber", " ", "is", " ", "on", " ", "the", " ", "point", " ", 
        "determined", " ", "by", " ", "the", " ", "linear", " ", "fit", " ", 
        "of", " ", "the", " ", "two", " ", 
        RowBox[{"police", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"equ", "[", 
           RowBox[{"robber", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
          RowBox[{"robber", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<", 
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.603171331525753*^9, 3.603171350659753*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Cases For Solution (iii)", "Subsubsection",
 CellChangeTimes->{{3.603164533093382*^9, 3.6031645396130342`*^9}, 
   3.6031712372137527`*^9, {3.603176836843465*^9, 3.6031768382070556`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleverRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "11"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "80"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "50"}]}], "}"}], ",", "0.05", ",", "200"}], "]"}]], "Input",
 CellChangeTimes->{{3.603159111024993*^9, 3.603159187334993*^9}, {
  3.603159516890993*^9, 3.6031595212779927`*^9}, {3.6031606113119926`*^9, 
  3.603160627090993*^9}, {3.603161184855993*^9, 3.603161195926993*^9}, {
  3.603161567490991*^9, 3.6031616330609913`*^9}, {3.6031679185349874`*^9, 
  3.603167952002988*^9}, {3.6031679825989876`*^9, 3.6031679867029877`*^9}, {
  3.603168224356988*^9, 3.6031682511959877`*^9}, {3.603168415483988*^9, 
  3.603168430509988*^9}, {3.6031715002887526`*^9, 3.6031715318027525`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1: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
9Tmet/fQS6Wzky/Y/wBRYmq9
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1: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
yA/TXnvH2Y3BDPwP4aRs7A==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJwt1Hk01dv7B3DzkCEHhzKnqIwVKVNbqfP5mHINpShSEiHJUKFCNFARGpCp
4ZZKySWEPg8hQiEU6p7KPHNwcCTffdfvt9faa6/XX+9n7f3sZ9Vhf/ujPFxc
XHV4/3f+/zL7v8MCVNMTW82jllCK0MsSFocEcyO1nMt8S2gTzTWwd4YEjy9F
5+ov/UH1K8W0v06QEBNkab9c+A/yUC3r+zBMwt+07+oOcYtoUcMnq7yPhPcv
/Bduiy2i23pyznk/SRiw4mnqjP+NdE3qpB58I0F4MPmhkuRvVLvzTOOtLyRo
XFp79nDyAnK3WXv5SgsJVqvf2Pwts4A4e9rNwhpJ8AVr1aG7HJTkGsPxqyXh
+kEmW1ueg7SO6RccekfCC05AfUD6PKr27/ZzeEvCpzt8WYXK88j1TOJaRgkJ
E/p3guaz59BsxPafWwtIoLWstzBdM4cSrk6kar4kYZN/mWLk37NofWKmo9JT
EhxEbVlV62ZRZepucdojEoJyftYIPWMjlweL73mzSEhmBKVZa7PR9LPnkexU
Egq6BU4mvJxB1wtcjAdvkdAakbKzdeMMUi9fNtOVQMK0otbKFQXTiKouefEx
jgTp0rejLgbTaN9HL6+KSyTo77OrzCyeQpPtsqoFkSQ4znTf7jaaQrHMmq6/
w3F+YojP2nIWWj0QfCvlNM7XFTbzQSxUNrHG9topnN+QJv2yYhLtmf8sdMEP
53vrDLLMJ9EY98XKAC+cL1BRblAzgS4v2xTucQTnP3RIDCUnkIrUz81OriQc
i2poDL81jkrkE8Yt9uP3LJsM4UsdQ/ZrUI6JIwm9bBmVaxmjaFhr7LCuLQlr
Nv73kCMoenO6gqolCUd83E+lPR5Gitus26V3kZD96JL86udD6DVjIV7QjAQm
81nV07xBZGv71IJjRIKiXLPfpsIBNOC0n3d0MwkujmyZNyX9KPKQUDlzAwkp
N+Rh+9s+JOddFNKiScKXWjPvuspe9E+A54ZqdVw/r6ek3fseZB1KHypaRYKd
aVzp1/pu1BtV9eCpAgk3Tud5HGr6hc7HBR5MlyWh/lWb2EDrTySbrCqbIEmC
0AjntX/HD5R3r7kpSoyEq9ZmMFbKRBaPImKDhUjgqYiV/FP1Hf3K1d3pxUtC
6OY2D7GPXSjs9b+Lzn8IYOUoFyl86UDS1PUim3kCvJWOC2v9+IJy35sEmE0T
8CPxv0ZoQ4ymYQ29cQKcBJdyLVmfEfNrao/aEAGNYRZczgvN6MxPi4wVvQSY
TyTZe/M1IdrQnJPIDwJO1pVZTMo1oKesx7Q/nQTsz7cbW65di8wX9tZPtBGw
Pa0vUQdVoW+8AjHdTQSsiw7bYmMHKFi0cFt7PQHynSrFX2qKkTjdY662hoDe
Z5bc9OE89FhRKr+0goB9CwP4A95HZuqVPi/KCBCd7TGc3xqIOnQC1LKLCNAP
Y15ryEqlTm1RYSblE7BCTqFgWDCXEjH7dPdSLgG7jXsSit1eUw/J8/ZnnxCQ
6P2GCDN+S5naaYv6PiBg1IpcyhB5R7Xv/1btmkGA5JF/nCPmayj/w3EX7FII
MAxVeu3e/4ES9jEy3JlMgOvNqzTzto/U/cBBlkE8ATscQw0S3Zspk/C7z9fH
EtDG1O2J2veZaosmPBViCPDy6b0ZaNtGnbjOVl4eQcBvdiryYHyhhG4/6uAO
IyA+6q9RR9MO6n6GY9J0MAGrxAXSdul3UcaPeW36TxJQkFJKGmh+p9pe5gt0
+hBAqAWw1VWZ1Ilid2jwJMBvn1RL3LUflFCFRCjlToCB0tg6vis/qew6Si//
AAFcPbUXwi/+ooxbTow+dCKgLudB+/T5bqq1U/HxHXsCkvzPa/uF9lAnuhsO
xdoQcGDz/uje4F5KcCRM7hxJgPqCXtfBgD4qe1qj1d+cgHEQ39Tu208ZLXZc
P7yNgJJLg1d2ew1QrfxXiT2GBERZVzFrjgxSfuJbuUl9AqwlMw2Q2xAlKNv/
xkiXAPrXs9eLnIepLOXbQdoaBDDTHXt0945QRut26aioEfDkiK7xE7tR6vOG
6X5JFQJOrV+WqGIzRvkZPsjmlyfAeLxn4C45TgnssHeZo+O8TmamkOoElfVf
20gQ4GlqU1+VOUEZOuR9/C5CgFXWG3aE4iT12cXtSpMAARt416mapk1Svh7i
O95x43o8b9nMr2BRAn7lC4W/GTBfy3O28DaLygz2LXwyy4B/NU8+DJCeogzP
y/unsRhQeeP7J+3EKarl0od1N0YZ8HjScmFw+TTlG3/2V8QAA8rjJKxjvk1T
uVyuYrXYn9Xa76nkzFBjATu2Lh9kwCCVNloazKZ0u9WP7MVe2u++zWnHLHXS
UeRGOjZ9Wj2eJT5HvaoeL+7B1rwxwrzeNUexDFq7NYcYsH1d/ob1T+YpvSfF
4oHYTpWnI6uCOFTQynTDN9h+B0xb3LYvUIWxkR7cwwy4yOZZvSD2m2IvHI0n
sVMSagNvd/6mtvhZvonHfqlxo2rj40XqzL86ve3Y1VUO9MbAP1SJrZSE0ggD
ulxXenqZLVEcmDU6in023L8rUoALjDd9O/ocO9qi5eInXy4IfwAJU9jxMpu1
FD9zQbn0o1IjfD+p3Xdajxtyw5+Yq32R2I/yOOHFmdyAZv1oddh55w6qCQjw
QISXvYnEGANKLaHRwZcHKjoMjjlh18iuDslu4QEeK/nEDOzmnhil8a28YF62
VNaL/e3VQI1JJi9Ea/f0a40zoP+8lX8sPx9UZ9RKBmGzrF7IfvXhAwGJXNNS
7MUVNFBr4QMi8qYXzwQDhPoCvQK38sMVVnCSBbbUP+0SFRn8UHfE+W0CtlKE
YYk4vwAsa9s2+AV7vc099wM+AmDFWC2tPMkAfbkl4afNAnCtSBB5YqN+9/zZ
LYLQuG7EOxfbsqDKeVeGIIinNiVPY++JXMubxCcEtiKFlDHup0O7Y5/9OC4E
CeEpQ1HYPvKjDjrNQtA8eo7+ATtkwPZ32BZhkHQ7bEabYkBkYf7DunRhcGhi
+OzDvhZFt5HlWwbJ2zVvZ2LfsT0z43F8GbTlL6/ow76v0JWe37QMZNZMD2tP
MyB30JTBtUUEnG59lQnGLn6dNWaTLgJ3Bcq3l2G/u8h7J41XFDpOZ/vyzjDg
41+eaNBbFOQGY+5YYnco1vUbNImCi/PxypvYPUOaCdEGYnCvfvfoV+zxohtb
W+6JwXcTvRUqbAZwoid/KPOKg9ILWfNj2Pz2jlf9vMXBTfm33wtsCeWijaWf
xCEr4cfdGWz5kZWdQgbL4Sd39TsT/P/US8Kj9t5bDqqBOWMXsVe+86fbc0vA
kZ7rK+uxM9dnD57Rl4CHe07tlJxjgFpCS3nmMQnordnrvx/7GZs3sSZVAtS3
GqdmYW88uNlztFECjuUoV/djF73zNJLmpsETOb4JnXkGmGrcFTfWp8Fg3IBc
CPa7hLpf7sdooLHYsKsc22KW8/pKKg18Trw6ycdhwKeDWnEvG2nwnHkrzQp7
T9VBt3YuSRj9K7QmEbtLI15vUU8SdCpdJzuw3W+C4JpjkuCvZ66wagH36+xk
l2WqJOQ9XEt4Yfu5rs4LaJSESbroqZfYU1WO0Xe5pGDT5Yl7bOyzmpf2UXpS
EDjX+t4Uz6ulm0VafZ5SUOBdworGjpkb4BJLlYKZznTFBmwRN7k2vUYpMLCO
IqUWGXCz2irHmUsaTpd7Bjpjy2qdOxepJw3FOlYZ2djpiS/snnhKw3ymbt0A
9up5ptqnFGkwoklP6/5hQI4bjTPTIA1hUXNKp7F1a3Z8VOCiQ9nUN4u32IVa
QffN9eiw6FERxL/EAOOkRyHHPemwrf1RpjV2xXy75c0UOlwgYj8kYROHhJSL
G+gAxSdmOrEbawyn/l2iA7eGg4oqFwEO2j7v+fVkYEfaFitv7I6ke2lanjJw
UVQhJA/bjdPo75AiA1XnuLJnsXsPLZmHNsgA/3hP/TY8333eb1iRvSQDjEN1
7BjsSe3DI+83ycLl5txVjdink5Ng7Kgs1O5ItJbmIWCRU5VMT5EF4YKQ0y7Y
F93ZXiYNsmCp5nL/Pvb/AFm+fm4=
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{10., 10.}, {-3., -11.}, {0., -80.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{2., -50.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Method->{},
  PlotRange->{{-5.949449195897958, 10.}, {-80., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.31898898391795916`, 0.31898898391795916`}, {1.8, 
   1.8}}]], "Output",
 CellChangeTimes->{
  3.603159188555993*^9, 3.603159317798993*^9, 3.603159450242993*^9, 
   3.6031595230539927`*^9, 3.603160273433993*^9, {3.603160611960993*^9, 
   3.6031606275939927`*^9}, 3.6031607024299927`*^9, 3.603161100367993*^9, {
   3.6031611859839926`*^9, 3.6031611968239927`*^9}, 3.6031614661082163`*^9, {
   3.603161589500991*^9, 3.6031616342519913`*^9}, 3.603163656346989*^9, 
   3.603165605577989*^9, {3.603167927332988*^9, 3.6031679531389875`*^9}, 
   3.6031679877069874`*^9, {3.6031682150019875`*^9, 3.6031682522759876`*^9}, {
   3.6031683965599875`*^9, 3.6031684315299873`*^9}, 3.60316985286545*^9, 
   3.603170235379753*^9, {3.6031715085887527`*^9, 3.6031715324797525`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleverRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"17", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4"}], "}"}], ",", ".05", ",", "90"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031715519447527`*^9, 3.6031716826807528`*^9}, {
  3.6031717439777527`*^9, 3.6031717523997526`*^9}, {3.603172462066753*^9, 
  3.603172565811753*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1:eJwlk3lUjXkYx29RieTm90taJhU13e29L4WJ0hd1Q7fN1qQzpHJvYxhmLOMk
TYu15B5SKEpIyGSkxTJIDgm3ZMnNJUt70023bDNJ887xnPOc53z+edbv4xi5
Zv4KQx6PF875//GrTcTXSFE5seqsVx8LeskvtrmfYMU245TYVhZ2R09F934k
oCWLjpY1sJjy07oSwTuC6XW+n/T3WbhmH1+a0kOw2np5lriCxdWel6FUR3Dn
hlCluMDCrSV2f1UHwZMq+5e5J1nkOK8bdqKVoOXG+X2aQyxmWawvON1E0Hcu
uJifxuLBtPpozSuC4eoI2ZwEFvFduW5sIwGz3Dv093UsdEXbjM9rCR6lz9SV
KljUP+ysXdJA0DijhN8VxkI58DpR8pRgUqW22jGARWC5xFzwhODh0z6HULCI
/gJFwCOC3TFS+91uLF41eG/OqiPwXX6xusKFhbV+0Iv/gODBznOi99YsyiaY
5hbVEEQuFssFI1n4CzP3bFATHLvj6fYDj8VCYcbn6PsEx2Pv1jm2SbE54pQm
7h7Bt+no3KmWwumay+irdwkKnK9ef3tBCkeV3UFnjg8Fj4xcnCVFvoM8rKya
4MfLHa/+SpBCspLxWcMx3++D/3ilFGkX+2TBHH+uuVG8K0CKriVbg8I49n16
a0KPmxSlIYn+KRyL/BXnF9tIsXTQx7WJY90UvfIqT4ph2qaHUVw9fXJO6IQ2
Bi8nSL4z4/qbWaZSpaoZMIcLfZ5zHFlYa993gYHV1JPNj7h5ti6ZT8OzGLRo
HYb2cfOOzHwXfzOBQavtiz0etQSJNZtXi5UMrr9dsraA21dVfUZ3RgAD0YaG
dM+HBHWnNXyeOwObotDmT9y+cyZWvllpw8B6Zob8OXeP/FEXf63nMTCcTspb
uXsdUZjUzmqTQFNHzcc+I7CqCJ93Ti2BzK3YIug5wQ7em2bbEgkqtJlXUjk9
yAW3c3ZmSTDMaYNRDacXNtxt0/sECTJZ4w5LTk+NmgW/RCol4A2aRkS1ECw2
DUmpDZBA6e8XXdZGEBa74KanuwSt6alvzTsJat8k2Z2xkcCYX9i/qotA6Gyc
aWUgweQzCUkPugkqQoaw29rE8P5Ht8VDT+B0OrezVy1GjYe2raCPYFXO4K2I
EjE6/KZetv1AoGqQVdZkiRF78GP3/k8EBzwOvvRMFKN+0tgEwv2Xrt7SvlAp
xrwz2coDAwRpRq+3WAeKcdYqNdeB+0eE2gzucBfj79EfHM8ZUlQfeZ33wUaM
wrO97bOMKCx0ixQrDMR4oTzSrTWhkB/JkD9uE2GZm7UkdjiFdcC1hbNrRMiL
UuV8M5Iip6krvrhEhDlnpV63R3G8z+ueY7YIL6zZIetHU+zS3PPYmyjCphHq
ThdLitSk4ru8GBE2iud2N1pRqIpGxK8NFEHys87ksA2FTN2z4JW7CKcMTCct
/YbC4USsPNhWBGWIXuHsQOEXdENZYSDCuH6DPL0TRfrs5/lsuxDJ1YefVTpT
bAp+Y5xXIwS/SGB+yJVCn9eRYlEqxLPLY6asF1EoKk0mJWULEWGnkS9kuH4O
h3zuTRQimrTLPSZSeG/RdkTFCFHVfZsd704RZXnp38eBQsQY9fdaTKX4Y/MA
I5ssxIg/+XuMplH8xlzZXm4rhNfsrM8Dnlw+y6GGAkMhfE1Zj35virbkjqNZ
7QIQz7UzBmZRJHjERZnVCjBl8IvxUBnFYPT9ufGlAjwJ2542ai5FXH7Hgp5s
AYrYsvvj5BSMWVNiZJIAY+Fz3T2Iwsm+6tHjGAGGj+laFjifovnJ8bl+QQK4
mK05vWoRhUv+9qZLkwW4O3N/pup7ipiNcXliOwEcM12dysMpDhTtTc41FGDG
sS+ypqUU/wH3VGKL
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1:eJwtVHlUzQkY/b3l97NUWlBvXyNbKa1UunlRIUwok5RKi8iLepanoihtXrI0
IkR5yVaDaFAaWjhJieRNllBGJFTOFKbmzZn5zvnOPffce+75zv3jEwfLvUPp
BEGs1O6/+P/gPzDFAt8LlQfMCRj65+aP7pJixWPl0R4/Ak4mWWZjmqVo7Aic
rZ9KoFNeoBh9Q4oqwaBr/xUCOV43I4cLpJhp2jgj7xUBpbKtsztTCkX+PhU5
hoa0g8Y1zQopfNxm37GYRUNYmaqzNECKGRnuFsZhNMibwqV73KV4+TmHez2b
huHaWz8vt5TCRJBZzaqgYav16WAuWwpaxOtFlu9oyOjWM9HQpEhoTqwfMqJD
LGtYpHovwadsB9skZzqUQ2ntsx5J8LDRT14eTscp7pWTL25I0GAzz+1ENh36
vsqwbYUSZG6sDbG5QUdc2i2azl4J9p/3DVJ00HH9jf7cAwoJjFfJLgXqMRDJ
yiGMAiQIKjlw7rMtA7tSDBh75knwZpxmx4QABjziatm9FhI4GVc4fU9mwKw0
3mCpiQTWz/3vbrjAADEu+tfiYTHO2IS+iHvMwNPpc2q+/inGs3fvdCXfGdjt
+M3IvkmMuQldpX5iJjY4DgRGlYvRyknrlbgzMTX2k/xwvhghdm1Vm9czoTz6
ilmeqvVP8Wj4KZuJBDfey/poMdz+VqSUlDEhF8+seLRCDPfbaqMMDRN9rWL/
RojBT1R6vvzBRMgS1pbKSWKsfTJ8Xi0kEXWsui7fQIyt5t+D2lxJxLR5UpsH
RPDe72G2JYREQ3lIl3O7CKnb7RfG7CYhrFRNHKgTYVvk9dN3C0ms/ui8qbBE
BPYF5yR5NQnLHtHOOb+I0Hjm89HANyTW1CUwmhNEeJMjG7WPRmGh6dkS7zAR
nMRLpv4loLAo/JBDtZcI94NbctMdKSwLVy2daKvNV7rP2u5DIWsJ/8I6ngjJ
a78MlsspxMtqJIcYIozPLeVZ76GQF9Qe7d4iRGiSruPTPAqryHoHqwIh7s3P
ds0ppVAfz/d9Hy1ExqlrG/1uU7ALHN+tmC3EgqcX1xg2Uxhtwktt1RGC7bTW
oOglBULKtxurEaDAy6eR+kDBVy8sxVwtQJK36zpuP4VPr4dyp8YIYGrdMrXx
GwVJTLDFWAhgO3Jxl84wBfP+2OL3ugJ8SO6R3iBGYO/hvRN+0/ARwS8T1Wr1
ka7+8SlqPjgXCV3jHxRMXoX7rozh45jVLsnBrxRYuY8tXcFHww/Gq8ndFPKX
G4XP0eOjb6S94+/a+2w3UIj8g4eOkHsatyYK7F6bz9VFPJT3JQfmV1Aw7Ag6
HqjgoThsSllVEYXsbNYaDxkPplcnrzyoouB1YOd8lSEPjRVWVTqbKIwyeDvH
tZ2LKVGtR9jeFIrvB3A2lXAhX+3jdtlC238RETFjBxemac8MH46gcGeLleLg
Yi6SJm0q3vCcxLaeK8JzIi687ZwWZ5SQyHomK0vr5cArVm02JYGEmbr4rqyG
g+fr/o709iTxpS2f+HiYg2nmlnv0DUmMj+hpPxzFwf7EtmkbW5hI4qWr/GQc
VF0MnZuRw8QY/mCWG4cDz84HTYplTOgH+2RE9LLhZNd5dqE+E8uXaRit9WwU
dl12mF7HQGVgL+uEWsufOBCIY6CD9PB8kMTGMW6WeaEFAwWaXsfo1WwMBt0c
tesFHfydsv0qFzbsVHoRZCYdQr6g2lLExtvBAP3l9nQsHZs+0p/Ohh+qTPPa
aegKSlww9i0LH+qP5DFTaQh5tNLKt54F9bTOq9fMabhKbjWbeImFhxZ66c8f
EhgsN0yMO8ICPcj+RF6s9t+ePHp82W4WRjzyOck2JnBmYSK/SM6CZoDt0rN+
2KVf06e3zl/LW45Unz035KJTuXRaznwW/gHMDD7I
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1:eJw1kHk01AkAx2cw98yvGTO/X7JNmA43HdpKab4VvbQoulCbpcMqKUWrZrvV
lJQsjaTLhC3aSXY6WKFIJUdNsh2k0KEMqWSIrH379vve933e+7z3/edrFbLe
b5URjUZbOth/+V/Y+J+5CZIRKYFspJbumnZsLBtJmq2M4Vo2mA7dcRNXsBEi
2vw+hs9B9sI33c0pbJjozm1RreDgScfvther2diW3fnX0nwODk/TuqpZHAwp
8xNqBFxUbCo9fHsmB86t5cMif+LiWX2w2mYnBycthl3dd4mL9yYfa6uKOXAK
MhmopvFwJsHesYjORYSvZJaNDw9Ea7jZgAcXmbmd5utTebDbum90cjwXL6I+
bNnexENJEqdw+yMuXnk+uu9sy0ek4/EH1y15mKfVuS1dx4chw+O0dwQPPl3Z
lX9r+Pg+fW2AdREP3m+y7ij0fDyZME8PIR/O0jNWUlsBzoQ33o5fObibkNOS
GCxA/YxT53sK+PDq7b6dqxJgcY/m4EaxAIF2uON7RwDVW33q83UCUHGZtT5f
BLCJivSwqhBAyfWIjbUk0Em0R5rbENjcal+jm02gMNOpOEtJYITCcFMaRuC+
x5T2028J5JYp7HwGfVCSPqhh7hAc0oVY+KUT8KmVnnfRDIFN5fpt0qsEpqvd
v3PjCNFsbzc2+w6BsE1dfSVThdD0Dl1seETgVvki/pEIIcoJ30lEI4FruSEV
yelCUF+nCw3NBPyNYqMKaoUYd3OG9nYLAUtFnKeeJYKvfzCR/JJAXkFMqflU
EQ62vVfGPCXQq2goGxchwsrVxT8m1xBoqg/Il6WL8Gm3sZ5zgwAzN/t840MR
MueEDfRrCPTtkbkvY5pi3ctqaUoqgcC2tqeHJpvi4t3M9r6dBN49zAtYu8YU
7nObzi5ZRYAk5rvo00whdsnfWjP4z8rEWfMFVaaQdzvaPJMRMFMtLwvoNwXD
4Sb3tx4BCkdUPNM4iPGtQ1cw9J4AFUbm/u8CxdhCp6alpQhwTvF5QptSjFVJ
ewsWBQkw6+XGwJQ/xehetah1v0wAraRhrq5BjMD9LKttL/kwSzKcUTIl8F+j
XrbjBB8nhzsqshwlcH4SO7FxAR9XxIvzZQsk2DvpU08biw/tNw9R12YJPBfz
u7qv8XCFn2cwT5XAarSbwSuUB32rXagqX4LntkHOE8U8eKUlRq97LEGE1GZm
VyEX8VmapvNdEhz7RC+pXMnFXueWvf4iEik3rGu6uFxo7d3y99uTUKtHkpkX
OdAMiSj9wZ1ExJvoKs4CDlpSPs7RLiXBtBQa+3SxESVR330USeJAi1mTSsWG
ttrGqWwfCT/FPTPGJDZ0zaLQpOMkaiza5JfrWKjblSpd8geJLfN63UuiWUg/
FB4tKyahS6t/MFXCAruyvIF1n0S4i/Siax4Tlwq/dZi9IFH1oXVE1Twm3s4O
D1jdQeLyjNfOdD0DOZHq6oF+Ep3Td7CaDzAgNRvO/Myj0MtqHrltDAMzi/Ku
zR9GwSKLqXp80wSe5ZuyZGMo2JX6uvQvNwHjbcap6PEU7upOlnf2GmMySY9b
OJ1Ck7ubQ6HKGEWvft5815PCUXHhr8HjjRG1O/xsw0IK+gX0Ua+rjHC1cXJC
ahCFrbLwXu8wI9BjEowZaygUefwScMLECEuWK2XWURTY24Mca0/TETOzdSNz
O4XauCkmBlc60i4w284pKfh31plz62ggOQaaJJECKu6F8iNp2FQwMcfrOIUN
YfUZND4NTo37opacpXBrtIXmvveA/PFUj52TL1CwtB2fc2DPN3mDXU/SJy0F
UUPiaaf8frm63s8i/jqFI2M8M26098mVD5WzGOUUrF2Tj7qP6pOHJAx/GlxN
4axhg3l+wFf50U6ZIqOOwmWGdY5lQq+8cOSX3TXPKfwDwptfxQ==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJwlxQk4lHkAx/FxDwbvMfMfU3J22PRIT+2mst5fTwfpmnRgUyRtHjqkkl1t
kRabhKVotbqkNjakNCstBuMaSipCcpRIWblz1O4+fZ/n+3zMvPY771Ll8Xhb
//t/vyTEFyksVnF/WNXEQvHpqs2C6RQOqcpSEu+xOD3psMPHkcItNeG+nfEs
nCd64i7sodCl7v/t3P0sDMdj5I9iKZhrKgXjTixaPs4fUL9LwV3Lslkxk0Xq
aL3FoucUzvFPpv+qysJ3JHjT3kkKj7Rbf9zewsBm2OTny2Y0dHTtnGbnMRge
LL77dAWN5YIkyfBZBvkDuzu1fWkc0xvsKjrA4ES/rtj+DA2ZvlQWvZaB44dM
h4DbNPoNMiLcvmKg37cxKO0ZjTk032WGBoMnvSM3GsdofM94z/zQSuO398nP
9U0YXGILh/LzaXi+43SWLWPQKDQqjUyiMbOnY/GR3QyEJChh0yEa77oj/NKj
GKwTP9lpKqVxu8vqwstMBpGGNvPfWdEIevNQyT5hIJecVpVp0bDvPDjpMMpg
YkpXbVgHBfXXYuujRiy+MVp+eX0BhcqO+9uzwMJ/2iX/qckUYts9Yl55s7hp
PMG9CaSwpU2t0PAXFq9MXA1ynCkYtV7vW/MnC2OzOy3HrCm0t6w2C61l4WpO
3XLSoXDjxT8b7g6xmO7QMDZHaYB9zfEnuiVCJK2KPV8SZoAFTQtzptkLIVjj
aOu+xABjz5s6NngJEbKOVz/Qr4/ChuPC8HAhBqWyw1E39RFeb7Ei76YQPhv9
hRZe+ljzrOxwb40QzZstc/Ik+mCe+qWZDwghdW3d4Fyrh4Y6g/otYhFKvkvq
647UQ8rjHK2oJSLYbpPGhEIP3rUutgUeImR48K0lowLMfjTuMxAmgqlXoTIr
U4C+movnZ90QIcE7yM9xtwC51csqtypFUPNpPdqtIsCR6sS95+tECPBzPHPq
gi5sq3uo+kYR2vZlXbRaqIuPSu6OsF0EaYBhtrJWB3nKeBfnbhEKDofI9+7R
QbDyzVhMnwjWP3TV6WvpwE65JKV6RITfj0pfZ17WxmRVzFLdzyIIQmTDUjtt
/F3V8cpRkyA4zJTf/4yP41ULI8P1CN6GR0riD/CBqiirEiGB26m+2QsEfKhU
vaxRMSIoj3a1e5qmBXnl/ADOgmBhXOHawKVaCKuMEP00myAtwdJD3KyJ5ZVN
srx5BKKkWH9ZoCY0Kue6j9oSnEweDXWjNaGoCPv8NQgGUjzjx9I1EFFRf+Wg
A4HXlfLU5JUacKywWpm9jqD2mk2uXZs6tCuOd/duJsAfSWUvgtVRWV53es42
gswM3vNjRB1R5bNsfL0JjLN83ppkq2FNeXDddT+C6JxH44Wr1aBX/jDwdQDB
RK6tnlenKmrKLKZY/Ejgl3fJWC1UFTFlRx54hhI0PuDbpE5VhbSsyjMlkmBV
kf/SFbkqoMtM1JtjCGQlDc6dUhU8Vhy8LkkkmFUO74geHuIVZU4uKQTnqm4c
tgznYZNiam/CNQKNh1REhSkPIsX+uMcZBF2pH2yeBn7mnpUWL6DuECjSizaK
Mz5xiaXihrX3CVJvxwW6tU1yrqV+wVFyghN/7TifTCY5SWmBcUUFgWfhvPwX
qye4xhJWrllLYF+m8tIkdJxLLtm9a3kDgVFNrYpX7hjnXnKff+IlwdiTy9NT
ez5y00oMMgo6CRqaDjh0mn7kWop3rp98T5DbvtTXcssod7H4Xv/iIYKEbjra
N2qE8yzWPRc0QRDQ15aZUTjMmRV7LMpVE0M6kv24d2iIa5fnNA/oiGH9KXTI
xmqIuyrXCpnHiCHQcDY86DnIecu3WuyXiPFW13zJ3bMD3Ax5piLDVIxypn/b
SGU/11mk5vt2lhhpEnnIIl4/d73IRc9yrhj/AhsweZ4=
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{17., 5.}, {2., 10.}, {3., 3.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{5., 4.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 3.},
  Method->{},
  PlotRange->{{0, 17.}, {3., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.34, 0.34}, {0.14, 0.14}}]], "Output",
 CellChangeTimes->{{3.603172504296753*^9, 3.603172566646753*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleverRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"-", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", ".05", ",", "90"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031735895725737`*^9, 3.603173650318648*^9}, {
  3.6031741359232035`*^9, 3.6031741789865093`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1:eJwlVHk01XkUt/cer+e996M4aTG/3/cl0YbJelyRCmNLK8l0opQ2Iy1eQxja
1BMhQw0VShIj1bT8bik1WZIly5OliBqTJE/KMm9O95zP+fxxzz33ns/n3mu4
aZd3oIqSkpKvAv/z92DgO+ugHMtWJ+kzMKI3teHSGIUDzYH9lBkDFhfOmHz6
QqEg/dCRvW4MZNW75b8boLCsz9TraiADVTW2L5N7Kcxz2D2t4FcG1ozGtky0
UvjSrjp+RyoD8fa5ltbPKfyW1WfUVajol2i8bjVL4VP+cCbnKQM+rk3C4AIK
ly+/fKGunYFMJ0P66FkKre+6GtgPMyDNf1BSHUOh5aE92s58ApmhhY3eIRQu
0krL7mIIDNWNCuevpHBD+5CWng0B44WyYYklhQHtNVFtngRydKPrVhlQ2DaQ
N2txEAGH10f9asdF6IWb2wwjCFSMrv1Vs0OEYr+4redPEbC/k2qiiyIc/+v2
L6ILBCxtGnojMkXoPCtp36obBOoWXlFx3S/C3wLltQ7lBA6um6qT4SnC4otB
K4saCEjkw5giFuHaih/mR70h8PXawxW7vwrRLj7F81Q/gblOhXeDK4X4Yay/
oHyEwIHm+7WVGUIc8aVcpqqIIcXt94ae7UJ0D0oIl3DEwNRmGHOthXhM9ow3
yhMD5dC6KGKSEOPuzDx9SVsMP9WHaB+uF+DC0MBDUoEYtLVskn2yBHjqs4ly
iyI/XTxtG9kpwPQex0fZk8Xw5Emvsb6NAH+MUm/haYrBd3WNsRtHgNEb7oqt
1cVwU412vpSvjXXBt6xdJwjU6ISphi3TxvnrC9P8vxBY9nXSNp0uPo6XNnpJ
PxKYJ/QqSTjMxxDZgY6RHgJzbBOOdMzk4+bqaJPiNgKcwfLrHHYyPmnXvVJV
T0BnaVvUuP9krM+Oj/N/RmDJ9ZWDNyd4eEDaKQtjCWj2B8TPyeKhT9Or7hkl
BBwTRt47O/Kw+LqrRXAeAb4w9KDqWy38tt2owz+DQECP+znvo1pYZJVRwJUq
9sFzK9/IVAvNZqfahcYQ6J/urrT/hSae95lp8kc4gb22N5cuDtfE++bSBenB
BJJq6vx9p2kidd/QKsiPwN+CEzEtyMWupikxXA8Cfbf4OflBXJSLPhUecSBw
OePY7nIeF7tPaTb1mCn0yIm2p//koGlpXbqxmMCV7Ab9O+s4+LDU0NRHT+H/
fo/ceCUOqmdeDdyiScDdZbM4JncSCk5rPQ0aZaAk9sTPee6TcF/O+pM+HxjQ
rk67+GlIA2s6SosWdTBwtNWmeEOmBlpElQ6o1DKwxW3odreTBu5yH28pL2Mg
V+Oge3yfOvLDBVWRNxhIk+X72SerY0H0jol5uQx8fjKH1rJVx5b3BnENaYr6
lRLj3jdqeLGocFXYMQZc9F7Z1R9Xw1yHKmeeRHF/289srjJTQ+eTa/XP7WBg
3ti/shcyVey8a7XPeCMD/m9zhR0xqhjBa5QXeTJgWyE/J5+rimobnKdbLGHA
c8Wgo069CoZI7QNKFP9jZoPkzWKJCg5PvJy9gDAQuzQ6MoBRQZdNGjV5UxTz
JuZZJFQqY/A97pUZHAbMc5bZ3gtTxl1rzowljtBw7vKN9n4DZdyp/o6r+g8N
0yKbI5nHSjhY+kgjtJWGMtlYwvodSrgt34G0V9HQe6/tWKKuEhr4JkldWBq6
5zZyT0dMsJWPi3eWXKdh44s9psqV42zOcXmHQTYNfW5WFbsMxtmqj2fVYpNo
OH+/E16FjLF7Cs0H38XSYP1oYHT5vVE235mUuYfTIA16JimePMoOOfXHF2+h
YczurYu+/ze2+fVJb911NNyWrxiTXPvKKk8vW7jPhQbXgVnmr8ZH2Dhfj0VN
NjS0OhxOs/IYYW+kWGy0NKWhucJblnj+C2v0/N2D1Bk0pOSsKunuH2aTUyM3
ybVpSPVz6jSHYfY/LEufSQ==
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1:eJwlUAs01HkYneRZ6SVmmDHznxn9fjZalJ2VbfIJFVFZJhs9lrAI2RRhS6k8
Knn0UrayqKQ3JY/KJxJZmkkqm5RqetB41LYqSzt7+s75zj3f+e65954rDFj7
Y5AGi8XyU+//+HXM4SuaYVVB8FThEAXrJ4qHj16KsTAmKznkHwqxwd+kXmgW
YyqWf2gboFB9NN5z8yUxzqwxcg5VUSiny2NdcsVocbTPUfSGQoLT9h+0k8TY
4XXoOktJ4bRJfSeGiFG/aFuqZheFMLsJf2xYLMYwLkRMf0whShpUYyYRo8HD
tFkJ7RQiGp9vauGJ0SbXo0LVRuHtoUqD6NFizDh48cr2uxRqHltUT+4W4c+L
Tb843KFgenVn1Vm5CH1XOy4T/ElBMt7eyfmKCENkggxRI4U0t9MZ94+I0E06
KdS1nkJm3or2wO0iTI5QnNtbS6HD6bFPX5gIGZ0kOqqGwjLlDccYTxGy+Yt0
llxX/x/aubDsRGgxq2jPlioKh8LLEtP5IoxnaY1kl1MY9O7Q52uJ8HnU/f0p
lynY6MeOLekRYqpVyoGVJRT6523d63pXiOuHNwDnvFrvF4IvyoUoWzjQeum0
Ov+Um8XbjglxmmpGlm0RBXndwBqSLES5yq/8YCGFjaFx3OZwIdolRaV15qn7
NQiUx3oJUcDzdtY7QgGLB/OIvRA1fr9pzjlEIaW4Mr+dESI33y9m7H4KJ5Ux
3Zk6QmSPbAl/nknB3XP2bvdeBr+X/uqWt5vCurbVuePaGExf+t3iuakU3ETZ
0xRVDA6tz6to3EahPq1y4eF8BjM63RskiRQOdwgnhqQxqPyYU5EWT6HH1T/V
PopB47DCphsbKIxxDK2b5MOgSuYx+1mUun/v7a0qKYNFZdNdX6+hMJHvW9di
xuBcRY5VW7A6j+hd4aWxDAbV5Vie8qfwICRCy0EpwBabt78FLqcgvNh3j18q
wPRRmit0fChEunbIdbcKsGTOKL1sTwrjHBImDi8SYNe40qua7hTEswZODfEE
uKRsX+mqeRQsLVxKNHv4WKxoMi8ACtGsYCmngo8BicTnjj2FVgfrlZIUPnZd
M457YUuh80Q0WSXjo8m96oZn31Iorvp4IlvMx8+K+4m3zSns807ukw+Yoi2p
fpArojDP8NV4EzTFrgXxej48Cquf9k6O3GOK0fGnPP41pCCVbtFtXm6KCQd2
d+yaQEHrYtaQxMIUKz6xerX0KLwfM3Pw9Ccefo7fUhGmQUGZn61l2cBDhxgm
pnKIgO5ODesrB3hY+ibT98PfBAzPDm/2COJhdwH3CLeXQOMry8+9M3nYl1QQ
Pf0VAYleeFGuBg9P1hYYWDwlcLShJcNLwUU9f6uSKe0EdhQfv2yUx8WypP5t
3QoC19uS+MpILm78TK+duU3A8uGclutSLlrLz2T51ar9/YZvFYzjYu2jHtvB
KgKR9Tbj9z0ywV3hr9oTLxFg3yvIzyg2wTfDktIPZ9T8SeuTD8SZYPxH7fc/
HSdAFjGVRQvU/ERO06kjBHZ/SZHWs00wwK0m/PV+9b2zf0LfS2NUpfboGu4h
4J2kZy0uM8aoVkO5VTIBYWt/bsAOY2w383pnt5nAyCOJ51lvY3R54nbMOoaA
fuwz99Fmxhj4l502O5LA0v71uwLfc9A7QSV7G0Rgao9KV3GDg0fbmq9eWEFA
Q3IHF2RzcOBea0igjIBTOnOuyZ+Di9buSdHxIODrHt20zIaDTk+E8w47E+jQ
fzn5PYuDb5TzFbzZBELtzTcflLNxyZQlsoyZBJKSN2nPz2OjNo8ZGZhGIGxV
TeGoKDauI7aDziIC1vPDPG85sPHsjGNrUo0JsJh0zZwJbMyJG5t8daJaP/jp
5egnRvjsQWVUlw4B5Yrq5b7njbBMmiIbHJkKi8n0/oWJRvgfbEOMQw==
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1:eJwlU2tUjAkYnmaa+ubyWSmJQvm+by6JUKh1e7uoKOSSSgwVLdlVm9puM1ZR
qSwV7UnNrmi2UioqIZd5kUqzCCFyV5ZFMlLpZmeP95z3POc5z3Oe98/zWgWF
rdjEZrFYAbr9H7+NNXxDAv0/Gx3VvJdCSkS3YZEHgT0pfv7xbVJo9q1Wvswg
MGFOP5LXpBBo+cGqopXAq133fBJqpOB9rs2TbclDS+ZlREuBFGq9XLh3Q3g4
11brxc2UwoXNsd4Tynj497SW90Y7pLDwhN6kFi0Pr+QXTu0LlYKLwNnu7Ww+
Zsy0PXnKVwrb6PGa1XI+ymUjW91ddfeX5cUSyEcVKC+UTpPCQ8+myx/YApT4
f5U8sZDCdpeDVV9cBXipd1tCGyGFRHD3H5kswBmOAxcPd0vgKr3XaFy9AHsL
8vxEzyQQcnOMqk9fiA7zjGxDNRKIe5E5co+zEH8sWRO5qUYCC8mkLuUOIcau
9LCrz5dAISdmYMJpIcZ1lsZlpOny5gTz6t8KMVEdZdG0XQL0oi2X3C1InKx1
ao1bKwFWS91dPw8SO7sOxx53lUDo5MKj5WEkRvv5tIfaSCD6Uvk0vSwSneJZ
vDpjCQRzVu4nK0iM6M250NAvhoGHQVtz6klUGe+JTnkuBueaPdXhrSSKJq56
PbpRDI8aj4yOaCcxRFmRkFwuhjca78Hkf0lkz9z05t1BMfxCrO06puP3cuw3
r40Xg6/8kfCVzr9hacb6fwLFkOwbk7r6AYlXL/Jv/ekhhtxiRRDTSGJH/s9f
M23F4Ck56Zl6kkQBtk65YSqGIeMtNleySSzYx1fIhkXwwo3aYh5FImN9pt3z
lQhysgMdni4jMezhaZc/boiAv99lhkxEYpdRdYLvaREcWKR1eN0nxCsbSs4r
8kVw50F6g6ZBiGWZdgqjNBGcv+VYvOqAENnPot+PihTBu6zlPE2AEGnNie8S
ZCJoXBLbHmGl0xsMtf6LRHAs5nNxersAs6pDn+TaiyDWRT7O+y8Buvy2Lwks
RdBy39+3J1iAiadu0u5CEZg4lfZXWOr68eunwpI+BtZoMpaXtPHx+WIDDOlg
IGS5nXJENh/1X1TpR99moOzUDB/2Ej56kmlD99QMnGXvji/i8FHgpJyVWMYA
8eFdm8VZHj4rHfaMzGOACZ3mt+MnHra5p34qTmXgfGS5dYfuH0wJT32LGAZW
mp1jNt8hcNhWIL8WwkCU89JO8yQCzb1tdpX5MHBA1TXdeBaBd7sdw+pcGXC0
6b0ve2WIN2031PHtGVDtnDt1xO+G2ERwZikoXf66XCPbhYY4vayg0MyYgUst
20bd+GSApp2O4odsBsY/UWT3HDFAk/mTei5qaSgld36sXGaAqse1iroXNGzs
P54qHOJiuHX9ite3aagfTO8QlHBRyVLNkFyhIfmrd/2Z1Vy8WBOul1hFg1st
9/txHC4uCBrd+KmAhslM7fFZFfo4t2JFZfxBGrJ2fuw1DtDHTXnXhWZJNMiN
5eGnDfSxWk25NETRwH30WstUclARL3iSEkJD5ctTncHrOJjlsCvBz5cG58uB
4VEEB83GjXo724MGrYnCWlbFRpsy8y7akYaYxfcVVjI2livd5ROsaRhj9nTn
ZYKN9z8O7afMaaix8zJwrdLDXGHffDshDU2JTEHxOj1stn9V7jVEQVCDfbXW
UA97t0pNwzopyHnXE0RXspAzmF976CkF14NNSxasZWHFxPQuTTMF0uR4fzcD
Fp7jxYzlXqZgwGHALnLDVzWRsLTAtYqCbr78uUP1sPrcvEDDNBUFN+5u3f3Y
cFhdNfXgtZZsCjrMB49tDBhSe13PiKZTKDBuKi9uLh9UC4uI4pgYCo5P/Kyi
2IPq6x7c/uYtFLjzf8he7zOg3n7e1WRKAAVFh5VuycX96rG3jqj2elEgC66U
HRr4ov4PA0KLTg==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJwlkntUzAkUx2eqGTWppik90Jb5PSqrGkzTQ3F7SMmjRPKek91memfIsUQh
j+KQZWuaBnmcWCy1RLL87on1lmm8H2eFnqppKhRF+9uz95x7vn/e7+dz7rjE
zHk/m3A4nCXs/pf/Dw3/pz1OON/2SmVJQ8zkZUVSvR0mJDVcanagoTyp1i35
uB3mO9fuTxDTYCx1rDq41g4r7x/NvOdFAzxYE6KPtMPXubuipwbQUMTRN/DH
2KH55DXuVeE0NE72SZzSJUJpy1JTMoYGiWJ3byYjQnnp9DfFS2jI07RvOb5P
hLtneV+xUNCgexBh92KlCGuGHUpyVDS4cY8fs5KJsOnPYVX3RhqypFxpqLkI
hUltcxILaEDF8htrX9pikHPD+CcHaBCWXZl/+owtKu9f5keW0yCvd2p+s8kW
D+QefVd7moZK7tps+1hbxEm7rnldYvl9H/GiCFvsbF6tKa9j+ZWS4o2fhDhc
3RebfoGGnc/P/fX+rhBF21dbBFaw9yJ93keVC5GK70O+moaBmrMWldlC9KdX
r3vE9pF4ekscooUY/bnXp3wDDcrSP+Jz3IS4/KaqNS2d9WW3+OuNDhtcVdx7
KGAF26cvYca+YhvMT1LF82NZ3scLDywLscESWa/Vo1DW54X4t56d1niKr/r7
sJTt+9sC78/F1nj1aU9OGs36yJ6/oS7EGnUVq6QBTqzvBXG393Ra4fu1PR08
AcsjmzdqSYkVfo5YdUw/SAE6xCa6h1qhhWPP4sNdFEj6557r6xyJY1uzRGlv
KCh/NmeIKRmJPpeMd/wbKBDWzI7aHToSQ3dkbeZdpyBPPas4ocsSFyw0+usv
UGBcF/2eVFui0j3LeKiCAvmimZKeUEvc0N99IlVNgS4gauPVLgHuuZW5wr+Q
AhgdebdALcAjJd0OvBwKKr9GOMaHCfCCIrO+IZ0Ct1fTfxIbLPCWX/e2Qyso
KLoSXmVQW+DLEZnBqbEUcLRh32vDLLDrmeGjXxgFWTmh0TsM5sg5mXHGzJeC
xqUh6rhSc7RbZ1jZQFMQEwzNruHmSEdmjDnkxPK7TJvUaRiBAU4GfYqA5f8e
nFtTOgJntaUX+g2RUP5P0P388BG4oqYrxMxAgpCZ4hzbzUfVzvQvujck5B0O
THLR8HFbQlflwQYSjLkB59vD+aj2SFemXCdBLvfnXOzm4emBTle/ahJ04Dd7
i4aH126nPTM9QQKMk2nmTOdhg7pzj05Nsv/o2zraaIZNyrSIg4UkuL2bLG3V
mGG/f+e35BwSiuombT4/3QwFFmnVsgwSOMcm1ucaTdHlRUeaqZyErK2SMbPK
TFHyeyqpiyWhcaWP0inCFMN+6XilDSMhJty7uslogvFRqfuTfUlA0sukqswE
k507ZsrcSZDwJszdGGGCOe0pJqbOLH/zeG1UDxf3Xv5w+aGA5b/p2T5Ky8Wj
BSmrtEME5FV4yN5FcLF60QePZAMBxu3uW8/2cPC2Z0qjbyMBcgWtW6/l4Ksv
7SUmegJ0MyiXGTM4aLiTPPfhdQI2x0Q+ppuGGa6mna+tJiDRNiKDCRhm7FOS
rylPEBCmDzNP2PudcQ9sz/YtJYDcH3LU2PSNCRQke5nsIoA3f1pQQeA3ZvbL
tqb6HAJa7IOfjisaYuSnlNqyDAJuPQnMqm0eZFavb4tTygk4WewviJsyyGyf
qbT0nUdAwULZ8Y6ir0zp6LY6bjgBKU7SqfktX5gzHxTr630JiH4x8fnYoC8M
U9s6scydgAkaH1X1vgFGX6hoVzgTYLXEa+Sc1n6meXFrudSSAMOYHytagvqZ
gfGKBO43MTx87QG5v35mLAdbbOoNYqg8SL90bPvE/HAv6ZamUQz7lpNrKoM/
MRPLWjYp9GJQuYqto/Z/ZMJTk2TSG2KIa3Q9+batj1k4paWLc1EM0iMuoeun
9jH/AgwAjlk=
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{10., -5.}, {12., -10.}, {13., -3.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{11., -5.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{9.355475839952915, -10.},
  Method->{},
  PlotRange->{{9.355475839952915, 13.}, {-10., 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.07289048320094171, 0.07289048320094171}, {0.2, 
   0.2}}]], "Output",
 CellChangeTimes->{{3.6031741490265136`*^9, 3.6031741796885796`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limitations of Solution (iii)", "Subsubsection",
 CellChangeTimes->{{3.603171935382753*^9, 3.603171943258753*^9}, {
  3.603171998334753*^9, 3.6031720008807526`*^9}}],

Cell["\<\
There are a few instances when our program deviates from ideal behavior. We \
were not able to work out these bugs before the assignment was due. In the \
following examples, you can observe cases in which the movements of the \
robber act differently than expected.
\
\>", "Text",
 CellChangeTimes->{{3.6031719555437527`*^9, 3.6031721873517528`*^9}, {
   3.603172221060753*^9, 3.603172274060753*^9}, 3.603172318091753*^9, {
   3.603172573652753*^9, 3.603172622705753*^9}, {3.6031727142973704`*^9, 
   3.603172745297863*^9}, {3.6031727873878975`*^9, 3.6031727875759916`*^9}, {
   3.6031728237150517`*^9, 3.603172940859595*^9}}],

Cell["\<\
1.) Sometimes, the transition from the inside to the outside of the triangle \
can display odd behaviors.\
\>", "Text",
 CellChangeTimes->{3.6031729202142773`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleverRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", ".5"}], ",", "0"}], "}"}], ",", ".05", ",", "84"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6031715519447527`*^9, 3.6031716826807528`*^9}, {
  3.6031717439777527`*^9, 3.6031717523997526`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1:eJwlxQk41GkcwPEx5j8zxjXjKEmO2iZFpdG1rvkhu0yWNWpyPeyQTaGRp1w7
slFR2EiSIymtK49NpO3Q+4Z1RY4UySisCNOmjCvH7j59n+f7fAx8RXx/MolE
2v/f//s1Ov6qBphTwlz9Omg4Fnv2u3aqw9kVrd5T12nYVZi3S3JTHfydDH3v
HKPhdp+G4Kvh6vDzbpu2HKDhuGe9fek8dUidyd9foULD6v6lLxvWqIN0dp9U
9pqKm15dyt0+qQZsYkf/wSIqfmL/1F9SpwbCJPMa0nEqNpRM29deUYP6fsGp
ZisqluokOY8EqQFHcum7WjoVT4ucgnnWapBp4Sua6CCwEnvujFRTDYAoDfs+
i8A/RT8I7RhjQUL9t/0vhAT+eHKMPoNYcNQ8RSvTkMDaJ50NfNJZcOPFlhMX
P1DwOIt/jRHIgn2HbJm1FRSM8krD54EFPr+b1RtFUHC82f6qrStZsMJUwajV
nIInLybH3ZIywXm44nThkjxWjl1vKKpjQiopsvEBlsdeuaoscTYTrEVzmdRY
eXygUdT5PJQJ0e869p63kceyo46bInhMuBG/eWAPWR47G9LlA9cywTJnWnXH
EzL2y0wY95KpwhDytXWPIeNHq1MyzxWoQu+V0tw/LMj4z3xCSeimCvwxyfKO
OTksjo68NcpQhSicSR6rlMMu4wxX9mMVIAW8JTeJ5HBhm0SgH6oCzxOe6bVv
lMMmd60TJWwVaEHeVguDJPzrh+uO/n3KME42U+Jlk7BAQ5CALirDuuBCchWf
hHedOlI/5aAMM/q3D1sokPB2n8jtKmRlUGfr37sTvYzWO5aVaz5Ugi2Utams
kSXkImT2aZ5QgtnGoekkpyXUF2yip22iBJR7hKVO5SIKd/Ks2zKhCJZyDnFV
KxfRb+6hFGGxIlwuq6nhRy6guJvJq9EhRdikW9s/0vMFiU2Tvd02KIJXMv1+
0M4vaCnrMd9ylAEbGyYcelLn0fGahw0xJQxwZ3lVG4zPodPlNz9zjjLgVd+Z
dLCZQz80tKcGmjKgZtS7yzhjFvU6MCgwrwB1wt2b37yfQR0H3cIaaxRAlvOG
62I2g6rC7Qi9ZAXgWUv7oxOmkWOw6J2PuwIETuj6CbtkKDeMnFa8QQEK1RuV
59fIEKc15rPOLB0ORaWI7f2nkJCQJEqa6VBQ3mbyY8lnJKRkFLDy6JCU0WGs
Jf2EKo2ReDCcDrxJ3eJbmz+hhQGem5hPh6VLIUPaQZMoZ9VyqYoJHSBfly4u
+ohiKCbrWph0CHkk0o5v/gcNG57XHPxIA9TUav92zwdkdjfeU9BOgwIkKDN9
OIHCOed69SpoUFRtq3OQM47GQ4L47HQaBKyjxIpK3qN+05LXIWE0kF2e8k7U
HUUGZvwWK08aGA+2BhMX3qHjnNFtnbY04BZ7uIaRhhFvKaPRxYgGUSPVyW9C
h5Bz0PMjjSwa3GHn2j0eGEDKTd3mFgtU4Gt01ea4vEU2ujH6EcNUqI26oLR4
WoJ45uGfElqpsGAfnP00oBf5GuTr/FJJhVmpkrjQqRvFtvRmeWRRge3YPZuy
swvFP/Wc58RQIS6y+/JZ/Q5kf67NQ9WPCkWd36QxVrWg0Z5nonk7KmjYltqx
ZH+h6MmW2KUNVPCqL5s3KkHIOVpwYr0CFXrWiMpWhFagzNtptRHvCdBvSJxh
0q6iqZNLZ+WaCDDpfnmsIjuNK/zCjWwsJGBBrNWkTy/nGt3dOPPiDAHi++zh
RYNqbpv4iTzHjwBT3wNbBVl13MOHD+z9m0vA8rYA6aa8Zm6l+TX21GoCtGRW
Dg4u7VyWR8PVgBkK/AsYnXdI
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1:eJwlkXs0lHkch2fe952ru5VQblm6iOgiivP7Im3FGtdIOSnV2BIpYSJi1kpS
qWlJyiXa2KgUNtthZEeJyEbk0jDkljRjhjQjtj0953zO88fnz8d4f7jXQYxE
Ivl+2//+Dh2+Wx0KDo8+6HpCgzKpS39QuRrwK4vzpRwa6IvXbk85oAZXmH9f
dN1Ig4385fQYbTWo9Vxgdcuo8LRM97rtc1UoLiriZ5VTwafBwaaVowpUUmNj
/DEqjBJp9U7mqpAX/ZDNtaTCpHCoO7tXBTiJifycCQr0nb1eLkxXgbEI+y38
Egos2mDA0EMq8GZTfbsohAJtgTKGt1gZ0gq5klkzCnh2TFvx8pXBzSJNNDNE
wMKkwnLESxlGg6XvXhUQUPZb17++hDLoSwbNY4MI2Hc4cnasQgn6/QbWjusT
IK0RxZeyleCpIPKiZg8O5ke3uZToKgGDa7ZoLBMH/4Yui/EmJmwYsW/d74OD
ic6AaXQ8E3xsmxSR6ji0Rb613m3NhL1OHHxRMwb5uzLj8oYYsOmKRbhtCgZC
3dkQzywGhCYl9LY7YhCTdLUoxo0BllZZEqGCDG+euTsZkxkQ+OGzB6uCDNbJ
uc92VtJBxoxI1wkjw/GUYZZpKB222mUYWJuRIfCzsODaMjpQ6gp9L/SRYN2h
R951b2nQgMd6m/JI8GOcnqgkgwY5NdoL49tJ8DHbVHhwBw3UXRfkf3xdQBUp
p7RxggZV1XLf4oMLSPBc8IRXQ4XqFofVT5vmESs4utDyFBV0eyzkb9fMo+WJ
M5xhGyp4xLFyOjO+orLMSnq7jAIn5+388yVzqEqj65zGIwo8HvYRL2XNoYjh
bZQnkRTgMRWCNSUKFH+rtFxqQwG7K52qtZgCKRtUJfTKCVic+tHkvr8ciWqG
r9/kE+DMfjM1+ucXdK968TL2WQLiXp/J8ZibRQV1/r0hXgQ4TNh6vNo+i7rz
Lpn1GRCQ628a5cP7jMT0l1PEJA63Ne87tvTMoFVtSeKVfBzu3N3zYoPRDGov
rWrPvYrDy0Z+6/l90yjVQ1gtCMNhrPZnL1GuDLkbH02jueGwuTvX3K9HirY4
uzoLLXBwCXdsNNGSoj0os6dDC4eEGJ5W7o4phP2UHsIl45CK/7J3a4IErQ9P
bEuXYaDSmfFaUC5G7kbaO4omMbDqW1ZLav6ETDpjLpwWY3Ar+M7UqvWT6IGq
BblejsGuE+kUQd4EYly2DVVSxUGz0mFarvUBWW2SJdWvwiHfuy7TnTeGQu8E
mi31xKEu4vG5h+qjaLORqRotCodLUB6mnDqMmiaS4gRZOHCVoiwzdd6jI52F
ogPNOHyK/VRH3BpEKTf8LFhkAtj69xKphiLUyJ7O1nAgwFq2z3FOZwDNXPur
NyCfAO6IgjP+Tz8qLCvWqaVR4MUSj2OG1iJ0wiT5zIVv/4EKT72AxkGUbfR7
mFczAXZs6pm9/oOo971LwDNrCjzg+pkcujiEbEJcDwe2EHDy5o0sXHsY+Uyy
360JIyAwYEXL/N0RZBhGWRffToB9z+oR5rlRFLxk6vjiCAIa9tzuet0+hthu
C8HzPxCwHl8ey9j5AWHep7ccr8PBjCVo7Z6YQBMM18qZVBziO+5brU2eRP22
l939tn7rV1gmPK8qRvnrvtjbFuNQ4rdi5ZdTYoSeX25Kc8GhjOsyY2ckQcYt
VW2SEQxoq11XsgYkSJRsKL/LwwCijmB6pVOocdbOTzsIg1JferQ5R4o4lUHN
hRoYyBjGiYSTDHVG88PqozD4VaDoSC6XoZyPTKNpTQx2ur90EO2eRg6XbmQM
PiLDf1QIYSk=
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1:eJwtknswFAgcx9c7j9WurSQxiaY2jywiJY7GI3Ehj8TdZYnDeVdXSNe1FIo2
dOWxpYshqqEur+r3i0qikXSVpMhjFbt2l33ZXc7N3XfmO5/5/P39mtCTAg4p
EwiEoKX+y/+D/2EFDkTTVnV3LMJA6f77ar0ULK3x/eyVswiyT5UTZiwK7mAT
E3M9F2HvUNV4eAIFT334ncHSWISOSPW+eqcl72o9W/ZsAcZT/AsoOhQMr1CJ
KmEsQJjoYE/hoB7OjTp7X3ddgKdFKRrr6vTQiN4aO6BQgPMx0oX2dD20JXSe
CWhRgOz4H8VHvPWQyRlmbjisgD6/UxYOa/TQ3ifLMs5KAWMfC6LUvpExTb/F
z2FSDltTy70/tZDxZILy9PVKORSXUSWQS0ZmYHXt4wNyWF4+UVoTSsbiAJcn
1RQ5/LlZnn6JSkavG26CyB4Z3FyzevGMlISp6gt0zWwZbBMwbmd0kfCec+Pz
qp0yiB+7Q0u+QsKLDRXxHqJ5sFVk+0fFkvDcWJyb+PY8ZEZqiIIdSej11o3Y
ETMPCsaPZp6aJGzzyU25u24eHo38Io1pXI5fqPwVfQNSmLgiTHIMWI6Gawya
TIuksEfdaY+SQBdb81x2N/pIgZs4E/CIqYtKg0Mqp9Wl4Pw5Py2JpouG5A3p
ZSiBcp36VkofEbd7J9cRMiRAktzadzOZiBX1vXpNWyWgNlfDsCERkVj59712
nhiStBrq6u7oINf1tfnGejE4+dKdVu7VwVHTmkZ2jBisxbceJnK1Ucks0krD
TAxapqOdTee1saLkvv3ZYRH463KUeRba2HCaYZRQIQLD7Y/N9Hu00Jx8Tth0
QATdWyQzFvFaOJgTejlutQhemp+zoWlp4btDhXU5b4XwKb7liWmtJoZNl1cR
S4TgGig/o+qlifTR2T5CoBAu6WyO7p9YhtWuLwMjKEJovXzN70L2MszZkmdl
3T8HV7vzXXaYLcNJh4fOiUVzQGh3or1p10B3zrjH2sA5YA4wqWERGvhKwp7e
vnIOWkMSaK8W1fG3Q+4PX7ydBaA6Btuy1HFQtt6y5/IsBO8/WstwUse0mrXl
LmGzwBYEf/fkgxomU2eCNhjPwumwCFvBMTXcUSYrOjEiAA2FIUtXXw1HODVZ
XlUCMGEiy+AvVVTrq7bKiRXAXTtREGWfKj7YtvK2vZUAhljMCRlPBRddiqSh
s3zgjRw40l+ggh2DDkq8Zj5EWL3fVGqhgqfyjtZKsviQYWxE9XuhjHUcfnea
Ox/KjVlXhTHKSPtqAtpafNhVb1c0oqaMBb+9prT18OCWefM+/RtKKGYY1AgL
eWARk3TPwU0JPQM137n68yDO6mL5jWECsnaxrUtJPJA/2MiMOEnA53FneZaV
M0D0oXeqGBOwLSb3cML6GWCXVJ3XP74II14pB5uvckHYkFLRfX8B6v2yW1UM
uFBbFmJvLlQAnm971VnEgVJRWLO3rQLYtTbSk1ocYBgV5xmmyiErletucmIa
SDNBZVUNMqB//3ny2tQUfIxirOLz50EavMlxLmgKDpz6NVrddh7aQu80kx58
g2rsteMelsKb12KDaaNv4BBiE9/QJAHqtd0emRlfwfOHKdtQmRhUek2jmt5M
QuVA6jzXRQyCTNlQEXUSOlP74jOzRfDU1yN2WToboukjR7V7hNCW1kvUeTYB
hUY/+1Qv/cruXpDlJeIEVMlVfwoJn4NMWnI+y28c3DT5dGr1LNwhNwUZFY4B
TZzvu5G/tHOYhYV21ygsWDcGhu8UwM4Lw9SIhS8Q0vWO05/HB3bTS87qLV/g
PXms58oAD/4BRWbgaA==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJw10nk41HkcwPEZM7OuwbhZW7l6sO1SwkPo8+1RIWkWFamWSQmFVT2OkkYk
RTtPbtoKqZRE1hn6Ta6wzrkYHuM+Jgw5csXu7LPPfp/n83w+7+f171fnXLDr
BQkcDndCPP/u/94Q9v9FNGeTHPUGsBF33+6K8TQgaEZR4473YWmJZr+pV78E
+yvSnPHUHqz1NUfS9UoJyIWdO1Av5GC5xdkrzMgqmFtvT09zZWH1ilONVnQm
+PovtZQ+78QcRxNjHt1qgAZK2hEuvxXTV39483RNM6Sf9RV9ONSEzdjSDAzN
28Hy3vbE7pmPWGC6mnPTYhcYCmz59bnVWMi320lSfmzwz/LdNBb+icUG2Ojs
W+aCxIRN9pNTr7ANnM6etYxeONNr9jGgMB073Lbp0PxLP9DJni5krjt8lm17
ZvK9AG4vOCztHc2ArfO4tEsRQ1BjGh1pRH0JFmFSU04zwxDekC5ZXVIMuYfL
aHXnR8G+8oJbNK0Mlvb+rr8yPAbRdmXu6tVVUPJBYcPEZwLCKMEul5pqgdL0
Tr1jchIYOrEvSI1M0E9u1HUKFkK9T9WodFwdnEDOShZrn0HJuENRxagBribm
aey+MwO0p23rlcWN0KFoyBEqiSD3TbyP645PEL12l6WdOwdMkp+jRFgzbFyf
LTuWOQ/PulP6y6ta4NXpvHCNc1+g1ta6zljYCls695U9dy0AZdXy8uZ3bZAf
bYgjLC+Ally5BUOlHZJU7BxJ2CJ4nJw6/rNyB6Ts3PHDiXtL8NxrNgBP7ISK
n+wDp9yWQbVCxNOY6gTpdO/C8u1fwW1XFGevdxdsaZgnVAq/wh8HU16MN3WB
vPsD5mTpCjD4KaFxht1ACZ+Y3E9fBa+rrZ9C7nTD2YMXT1U5rYGgKWpzfaAb
6MaNcm7q63DFLmlPkCkLcuYl46RG16HUmrRIiWHBMRfnCt7bDfC7rjen28UC
NanetffXv4HGhYa7Ak02ZDrz1ksOb0IineUR4c0GGvticY3SFoQeoBTp57Hh
/QidyhNsgbdFzxe5cTZkm3nabb3+G7yTPfFeehx4UK+anGmNQ0TbT/f3e3Fg
+eTNgaocHJJKCHHryuCAlanRtUFJPMro0Yo07+KAxvIAXzoIj86YoNpEEhea
z4ueWHLwaKPox8cLllwQFjC8Lu2TQILpjOzoAC4U/OpXl5MtgUYfRYa6ZnGB
FOAS1v8dAQ3lXt4R2cyFtDsHLDQCCehJ8n5FFfG/tZo/88GdTUBK+8zcjbV5
8M5an5tpRUQrXK2iAUcebKutPSR4SkSrPTHMNVU+DCybBusFEdEaf7pbdaQf
HhvnZ/jZEJHk4FhNxGI/MEWNai25RCQ1fLQjFRMA3cAayYcQUWxI31xv4xAg
72J/NyAimrZ+YGrdEKw+JG9UPicibpSlVCA2BL2BhKztZBLi3pqh3Ng5Ahkv
wut9+sROz9a8lzAKHoOzM/n5RJQkzeGyIkeBsaLmvyVPQkky8YKhkTGg7k5M
shsQu6zNpMhhAhT88TXxBeImz899ezsJnTmh4+0R4pbLW5VRFQKjb1pe2UHc
8h54zRufgapMs/RQE7cCWcZgeBoUjvJoj8cIKInCVDK3n4XOWKeEkRJxK17T
sisUAaOWWWoQTUCO0ipJ+dLzQP1qLrhMJaAW6aC0opp5UDApkCzZJnaZ5qzy
4C/QeVF7z8q0BGqR0X1aq7sAjOxUT5v3EshRNvJZA3cBqHyZ2Oh4scvyXv4V
vwgKSvTCppNiJ+9+w7Jegs4jyzzZnWIn3y/mi5aAEROAc1nEI0e5sdKhnGWg
1gwapX3Eo38AotyQxA==
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{-3., 5.}, {3., 4.}, {-2., -5.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{-0.5, 0.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Method->{},
  PlotRange->{{-3., 3.}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.12, 0.12}, {0.2, 0.2}}]], "Output",
 CellChangeTimes->{{3.6031716297507524`*^9, 3.6031716835387526`*^9}, 
   3.603171753265753*^9}]
}, Open  ]],

Cell["\<\
2.) In our \[OpenCurlyDoubleQuote]NSolve\[CloseCurlyDoubleQuote] for finding \
the changes in x and y that corresponds to the step length, a \
\[OpenCurlyDoubleQuote]divide by zero\[CloseCurlyDoubleQuote] error occurs \
along with other problems.  \
\>", "Text",
 CellChangeTimes->{{3.6031729537100167`*^9, 3.6031729595499353`*^9}, {
  3.603173286044224*^9, 3.6031733036499844`*^9}, {3.6031734503766556`*^9, 
  3.603173456959314*^9}, {3.603173488864504*^9, 3.6031735696945863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleverRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", ".05", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031723874967527`*^9, 3.6031724083717527`*^9}, {
  3.6031724423667526`*^9, 3.6031724443587527`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.603172409334753*^9, 3.603172444975753*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "infc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The system \[NoBreak]\\!\\(\\(\\(0.0025000000000000005` \
\[Equal] \\(\\(dx$2348226\\^2 + dy$2348226\\^2\\)\\)\\)\\) && \
\\(\\(dy$2348226\\/dx$2348226 \[Equal] ComplexInfinity\\)\\)\\)\[NoBreak] \
contains an infinite object \[NoBreak]\\!\\(ComplexInfinity\\)\[NoBreak]. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \
\\\"NSolve::infc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.603172409334753*^9, 3.603172445035753*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(\\(0.0025000000000000005` \[Equal] \\(\
\\(dx$2348226\\^2 + dy$2348226\\^2\\)\\)\\)\\), \\(\\(dy$2348226\\/dx$2348226 \
\[Equal] ComplexInfinity\\)\\)}\\)\[NoBreak] is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.603172409334753*^9, 3.603172445058753*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Lists \[NoBreak]\\!\\({xchange$2348226, \
ychange$2348226}\\)\[NoBreak] and \
\[NoBreak]\\!\\(Abs[\\(\\(\\(\\({dx$2348226, dy$2348226}\\)\\)/.\
\[VeryThinSpace] \\(\\({\\(\\(0.0025000000000000005` \[Equal] \
\\(\\(dx$2348226\\^2 + dy$2348226\\^2\\)\\)\\)\\), \
\\(\\(dy$2348226\\/dx$2348226 \[Equal] ComplexInfinity\\)\\)}\\)\\)\\)\\)]\\)\
\[NoBreak] are not the same shape. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/shape\\\", \
ButtonNote -> \\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.603172409334753*^9, 3.6031724450827527`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQjQvMmgkCK+1R+TvhfBNjEDiMJn/SHtWUC3A+WLnx
ZTg/DQyuwflg7TNvwvlnwOAOnP8fDO6jqX+IZv5jOP8sWP8TOD8dbN8zOJ8R
TL6A82eDzXsJ55uCzXsN558Hm/cGzs8Em/cOzbwPcP45sPoP9v3Hgl9z2vrY
QMz/aN8A5sfYZID1f7K/e6Wu4Lhuqg3Evs/2lWD5HBtI3Hyx54oRMVZbVmgD
sf+L/U2w+lKbOWDzvtov9325NmNrhQ3EPd/sS8H6a2zMwOZ9t3e236ex+ki9
DTPYvB/2nGDzGm0ugM37YV8w4+TFb5nNNnPB5v20vw42v9UmC2zeL3s7QRP+
GR/bbMzB5v22Xwq2r8OGBWzeH3uernk+lpVdNhfB5v2xLwbb32MzD2zeX/tb
TJxdtxj6bLLB5v2zdwS7p9/GAmzef/sre3c+tj0yAepfBodJkHS3H8aHUAj5
hdB0OVDyAAa195Y=
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAAAAAAAAA8L8AAAAAAAAAAM8J4Hpe
3u6/D/YRvLlsoj8nb1y6pLztv9XACz+GbbI/xaeF3dCa7L8uhLBMjKW7P0mH
DsngeOu/e5B2mEBvwj/Mnm4d0lbqv/47Obc8DMc/6l7WKqI06b/PFYomxqnL
P3nPWeJNEui/alL2F/Uj0D9y3IHD0e/mvw7yFwtcc9I/qb4pxSnN5b9+TIO/
IMPUPwFmIzhRquS/FbblfE0T1z9meoKhQofjv8UV2VbuY9k/RvuGifdj4r8l
qxCfEbXbP/UHwzpoQOG/eo5lfcgG3j9zDflqixzgv0Ho+N6TLOA/6Yefh6vw
3b/Idg53JFbhPyFI4Hdyp9u/ZsP+9yWA4j8OG3lPSF3ZvycjQqKsquM/8aN8
sP8R178SOQS90tXkP0F6pwBdxdS/emUWQbsB5j9mh1e5D3fSv4eojS6WLuc/
mw5yqrtX0L+3F85e4HDoPwNMjyKG0My/6EKpbTvF6T+M2NeSm1DJv7iYv2yA
KOs/7vkZadwsxr8pntZw3JfsPz6zKYGvYMO/yIyZsN4Q7j/GuZ+sO+bAv7zm
cPV6ke8/VYDDk8htvb8EHZb3AYzwP0N5V9ptl7m/fJcBapBR8T+8F71ShTu2
v2bXoILgGPI/aXWSaq5Ms79g3XfLh+HyPxCyQx9cvrC/pMMb6jOr8z9e7bLU
Bgqtv5c7AaOldfQ/e2idwV0sqb+7w9uvrED1P4jrfHr/0KW/0FHtXiQM9j8l
8KDyReeivxEulOPw1/Y/DfLl2H5goL951eE7/aP3P9+3oLGBX5y/B5uOjzlw
+D9XS9IIfZOYv8Gpku+ZPPk/8YFxqTNJlb/SnH5hFQn6P1aqePVzb5K/G52E
JaXV+j8HP7IwUiuPv/MJE8k3ovs/QeI4TZ53ib8t1xQ9zm78P1j4mWS/w4O/
XuIC/Wk7/T+Lt7g8PB98v7Cy+YsNCP4/DvvNvxG2cL9lX2CLvdT+P4jgohec
K1W/fAiiJYKh/z8Wu/PRZ6RYPwuPy+/vNgBA3ra6j6w3Vb8TixsQUKH/P/Q7
vhMomlg/J7dcTdc2AEAMmVZSaUNVv8mrp0Ufof8/reyvag==
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAAAAAAAAA8D8AAAAAAAAAAM8J4Hpe
3u4/D/YRvLlsoj8nb1y6pLztP9XACz+GbbI/xaeF3dCa7D8uhLBMjKW7P0mH
DsngeOs/e5B2mEBvwj/Mnm4d0lbqP/47Obc8DMc/6l7WKqI06T/PFYomxqnL
P3nPWeJNEug/alL2F/Uj0D9y3IHD0e/mPw7yFwtcc9I/qb4pxSnN5T9+TIO/
IMPUPwFmIzhRquQ/FbblfE0T1z9meoKhQofjP8UV2VbuY9k/RvuGifdj4j8l
qxCfEbXbP/UHwzpoQOE/eo5lfcgG3j9zDflqixzgP0Ho+N6TLOA/6Yefh6vw
3T/Idg53JFbhPyFI4Hdyp9s/ZsP+9yWA4j8OG3lPSF3ZPycjQqKsquM/8aN8
sP8R1z8SOQS90tXkP0F6pwBdxdQ/emUWQbsB5j9mh1e5D3fSP4eojS6WLuc/
mw5yqrtX0D+3F85e4HDoPwNMjyKG0Mw/6EKpbTvF6T+M2NeSm1DJP7iYv2yA
KOs/7vkZadwsxj8pntZw3JfsPz6zKYGvYMM/yIyZsN4Q7j/GuZ+sO+bAP7zm
cPV6ke8/VYDDk8htvT8EHZb3AYzwP0R5V9ptl7k/fJcBapBR8T+9F71ShTu2
P2bXoILgGPI/anWSaq5Msz9g3XfLh+HyPxGyQx9cvrA/pMMb6jOr8z9g7bLU
BgqtP5c7AaOldfQ/fmidwV0sqT+7w9uvrED1P4zrfHr/0KU/0FHtXiQM9j8q
8KDyReeiPxEulOPw1/Y/E/Ll2H5goD951eE7/aP3P+63oLGBX5w/B5uOjzlw
+D9oS9IIfZOYP8Gpku+ZPPk/BIJxqTNJlT/SnH5hFQn6P2uqePVzb5I/G52E
JaXV+j81P7IwUiuPP/MJE8k3ovs/c+I4TZ53iT8t1xQ9zm78P474mWS/w4M/
XuIC/Wk7/T//t7g8PB98P7Cy+YsNCP4/ivvNvxG2cD9lX2CLvdT+P5biohec
K1U/fAiiJYKh/z/yuPPRZ6RYvwuPy+/vNgBA7ri6j6w3VT8TixsQUKH/P9I5
vhMomli/J7dcTdc2AEAam1ZSaUNVP8mrp0Ufof8/wrKZuA==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQjQo+2I/yqcM/ewYEPtgXHQt+zWnrYzNrJgh8hPJj
bNLTQOCT/bUrdQXHdVNtTIxB4DNUPseGEWzKF3v2GBFjtWWFNufA5n2xvwpW
X2ozG2zeV/vFvi/XZmytsMkAm/fNvhCsv8bGFGzed3t7+30aq4/U20Di+gfU
vEab82DzftjnzTh58Vtms80csHk/oea32mSCzftlbyNowj/jY5uNGdi831D7
OmyYweb9sefqmudjWdllcwFs3h+o/T02c8Hm/bW/wcTZdYuhzyYLbN4/qHv6
bczB5v23v7x352PbIxOg7mNwGOx8ACNq2tc=
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{0., 0.}, {-1., 0.}, {1., 0.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{0., 1.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  Method->{},
  PlotRange->{{-0.18152538228546303`, 0.1889152293712779}, {
    0, 2.0268248304363445`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.007408812233134819, 0.007408812233134819}, {
   0.040536496608726894`, 0.040536496608726894`}}]], "Output",
 CellChangeTimes->{3.6031724094837527`*^9, 3.603172445122753*^9}]
}, Open  ]],

Cell["\<\
3.) It would appear that if any two x or y coordinates are the same, a \
\[OpenCurlyDoubleQuote]divide by zero\[CloseCurlyDoubleQuote] error occurs.  \
\>", "Text",
 CellChangeTimes->{{3.6031727658791485`*^9, 3.6031727764894505`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleverRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"17", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", ".05", ",", "84"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.603172542225753*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1:eJwlkwlUjWkYx68WlTbqSbuK1nvvd+/HTVTSP3u4UU6mnClK2pdpscwYSoUS
kWgVotxCI5OyhxRTKkWWhGiOylSkJPvMN8d7znue8zvnfZ7nvM/7e838ozzW
yfF4PE9u/x9/rKn4EQmz5hbbSoZZfA1zitLjWNaWHxHYzWJvsra9K8fTii+X
5bazcBY+XbSfY4c1D0YbG1nMFg6mDnO8MPZPN951FnGbZD3hYwhPdXQqJRUs
2mK8pd85DnC/wASdYPGe8TkhkyOwKssv5+WyGPpD5XmwPCFDLnVN824WhaKq
ThcFgvyAsqlcAosv3peypikSwkMjv06PZfEiI/KNw1hCrK77x5BAFkZ84b1V
SoSeTJeJh71ZVMmkzH5lgmNavde9pSzSvov6XqgQtK+G1YwFC3EzM7pAldCl
WOTpKGFhcLh0Vq0aIT+oh36xZGGiryDz0uDqaxXJFetz5xcVmimMJ5RHuJg9
UWMR3NiTfWsCYZepaawmj0W4nsvIEW1uPna2I6ndYiiX6lvs0yGUzFaMG2kU
w8LppVa2LmHGgaVBfhVijFNXPXlOn3B8Ztb9plwxengaD3sNCTxlv6sOCWJU
dAckSiYRtO5MsikJFMNTlp53wJRQ72prOFEqhtlmjXFqUwj3fT5lJ0vEOGYc
fiXXguCsePH4sL4Y53i2BU7W3P3Xn52zlifG6NbR7FE+4aWQfr3fLcIudWnO
bYagqzx2ybwmEaZEtKSWsYQkjyNXKitEiH0y2atUQkh70tdqlSfCK6e+N5fs
CKEKfel5CSKUr3po32VP8Hi2d1Q9SITZ37LMTZwIOaIbmolSEQasu/OiQRje
593xQSKC5fyklPa5hNp4K99wAxFaXW3bVy4khIQP5HfxRDDuq9v0ejE3/1a/
HO8eBrJa1RUZboSHC8Q/tTYx+Jr0YoWbB6Eh832H6zkGG7Usg0xXElpvzuPf
zGMQX123SWkVIcZeNt9pGwOTgPI4eV/CqxvZUy8EMVA8+HwB+XM+1tu8m+bG
wFzqWWEaSGCGriSX2TLQXd9QbR1K6NAo77cyZOCi+TZCGElosvazOTaGQdis
qDpBDGFjPONo1CuEP4bqLTcQdu6KnpzVLET6DoME4984H76kdGpWCrHzxPZ+
za2EfdeaY1LzhTgZ3Kj9fRuhkVfwVC6R44bEzz3bCVOtpca/BwthpDCzuCmV
MK5zxvQRNyHGpG3QO7OH+w/jK80jpwvhrlfrtTuDkNhn2N9tKMSW04Wh6w4S
Sv+uSVstJ8RwZpqHQy4hquJf+ce9AuSHfSLVAsJaHyvP5XcF8LTwrXp0lHCd
SY//q1KAaDVrx6NFhMHLO5NwSACrhuuygBKCan+g34VEAVRC9/AsTnPvO7hF
nw0RINb3jevLM4RTiyedli0T4HOyc0puBWFic46+iZ0AbfzH16TnCSZHnfyz
jASYM0F15NslLt/h5x3q8gIMRVsKT1YTisLm7kh+zcda+bgQjxpCp7eL/5e7
fODbzLMf6rj+SccNYqr4qDaqUsquJ9ytrjrTe4iP9yVW0ZImzgfn22ark/gQ
bax7d6eFIDhoGv0ghI85b2v2rGkjZJ9SP7xkOR/PNJe5vntE+Nj8uOSGHR8t
MQest3YQck/dyZhhzIeX+0WxUifn+zKxd5k8HwEpnf67uzifBEv/nfyPDdoP
md9S7yZ81glNzmmxQcu1Qp+01wRT15Ze9fM2aLsXxigOEDyD6oRJBTbQD8+0
3zxI+A+TwxrB
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1:eJwtU30w1AkA3a/fTwip0O5a+9vfj0JdLkqoeAlXLUkiGbnaZNQl+rDKxxWh
YpFo+vJZTU4ajkhXXfk84ioXpdBWckdHIklWdG7u3sybN2/em3l/PYksZMMO
DovF8priv/o/8J8Yw36opNllMQuCW+N6g28ZWNW+KqaDWPgUK9/c3MJgSZbq
3skLLLxZv0OR+yuDkJ3PeCkPWSidlxuyNZ/B4W+myQzYbDi0dVfrpDFYNfT5
rJkVGxsWdjgVRTB41kh8VxXAhqxTcH1ZAIMg9y1v2k+z4e1s1VjhxuDJnuo7
+35jQzOj3JleyoAOZ0bjPrGRs33lqwiKQcM17gmtuRz4B2R4VqkzkCZft5nm
xQE3NMtn5AONuFDPc6FHORCeSs/X76Qx8/EFNccSDvSydD8b19GI1w+8Eq7k
wGPcmk0V0agRDfpO1+SiP/7hIbUzNOoDWhtU1lxEr4ma03GYhnZHsdsKGRc/
OA2nnw+iYdUV/OWBgosfPRdfcvagobCwPHvlBhdkSdtEhy0NobwtpfIlF64X
ZX5baBrW7Z8/zJ7GQ4JF4cH7GjTcrCPDMi14OKPlqk0NS5Bkmujv7s1DiM38
jq0dEnx7ezzeJIoHLqOfm1QjQfyK6VL9PB70nssluYUSWJySJc2pm+qrTEyz
0yVQtkjP0b08GAj8Y+MjJXh8V7jIXINAUeMTnvd2CSxbsoKN5xOwP0IqdKQS
9BXG3CakBO4dyJ8osZQgOruwqWongQUDAWtXCCTYEu4RJz1GwOXqi5AStgRe
5o2DGZcIjD0ZitB+SyGt8pNF6l0CbGVo4sZmCnt7zbeZPyOgnbPk8dEKCsLM
qFSvQQLjM2qyM7MpnK0LuDBJkjh5TL45J55CimkOPdOQxCx+ULJiN4UPvfaB
kRYkfi/TexfgScGpcnSh8UoS8okxHzM7Cu2XC4s/rifxRbSkp52iEMjbHtji
T8IxeX9/hBqFssGP45d3kZjUTZyu3ynG65OPaNcDJKbV2a4TFIghCEoKK4gk
8fVW+Go1uRjFTec7cYTEEQ/j1FeOYqjnX2kajyHh++YYVawjRo2Bv7B2Kn+n
N+NBVKcRLI/GrYyLIlGt2bZsY4ER+qR/pswLI/EjXd8PuRFCQsv2nZ/abyjq
Weq+ygg+3DPVjX4kZk9+v0YxwwhyoR35k5TEmvwaPqkUQd2WrGOWTvl0F1lT
oQiZdiati8QkTLOPK/oOiaA0qbzYwCURvLsyS75aBM29BrGvuwkQL8xF0QYi
uF7q++tgNQG7R/UjOj2GcKcy81IyCWxrzfBEhSGY4wc05u4nEHoqL0p83BDV
z56LXVwIaCgSrtzdbIhSs6CMMT0C7QPDDQsXGEL1x+mmdV08aE3a7DnyVQhL
3Vm1mwp5aExqiq1pEcK3p/W92V4e9ENHjdUKhGDWRqpeWPHQeXYkbPNhIUYK
Yw6nDnOxruxGcL23EIGjm0r9fp76x/JrpX4WQnxU6o3v2MWFqvu+nFEXorWr
N/GBZOovqjZf424BBE9z+m485eC47YRPYKUAq87dT3Y5wUHEVZOKgSwB7FIr
ffJsOXBbnsOuihIggVPu0N/Dhtq6Ia2XfgI47t6ilGawcSghh1hjL8C2rmBx
tz0bne9tDk5QAkgbZQNtPSyMqh7tH+MJcHdf2sjqVBbSrtZctPmbj1tVL4I2
LWGhvzw3uLyZj+TTyl9WlX11WD7UIt55k4+YTbkbE8cnHUpr+7Vc8/hwdtet
uIlJBzd3pzteSXwYZvDXsuMmHC45sYhoOR//AA8jLzs=
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1:eJwtknsw1AkAx9c+f2uxLLu/IY88kryFrpjsV41TIuVEXqe8miglXNJFdFzJ
YzlEGXKeiTjTcDjl0aFERXWKVCLc1smjOWHtubn7znznM9/5/vH956sdcMIt
mEqhUA6s+V/+L/wHAte+GXmc4E5BXGfOngAbArYJjwKcKiloMDLsH4gmsOor
pe1fpsBt8ftKj3oCXEO/lFQXGfT3O8nMzxCYtVtyni+UQfPCaZkaUza8eaoa
Z2dkoEcrfnQpnI2Kw1I7VSEVC5PSlPRaNp5aiwI60qiY0M1yaJtl4xdu47XQ
YSrahsIkutay+HypzpthQMPrL9o5d87IIt0bQUmRNAQOW/Vm35VF05up+yOt
NBxOCTS/yeTgzxPbx1aYdAgnH6kzXTkQ+oXbP99LR3XGcMmNPA5WRVb1B3Po
0AorT85/x0E818ks8iUdFz1VN7wwk0N8YdkrZU0GMhB6POycHI77NbEMDjEQ
osV54PZQDku9q6oF1xlQ2LUsn6kuD2sL/WKf1wyEusf6bwyXh0fwHqf96kzw
7PW1Be3y+MGlcCLEk4nTNtde+PIVsPDtl7Ak0VoOb1FdClVAY7KYldPNhIve
0GFxuwIufOjUObfCRM0xDtNEjYs7Usvv9MxYsLlnyGuO5CK1VEM3wp+FVz89
N0nt5+Krs5r9u9JYKHtf0ubCV8Rbe98O0a8sOAf0uczsVMR7R6ma6VsWfstv
MtkQqYik1dJ5BotAUOTpj1M/KwIh40WSTQQqNy+aWQ4q4lbO3eml3QT20cSV
yzQl3GBneoyHEChrHlLbZq0E/+CqiOLzBDTcqV5vQ5SQQI9Zt+4KAfZIlMt0
nhICj+YO21YRqC2rpjn0KoFn9M7yUxOBilFp46RECT4bbef0uwjI3B4Vd5rz
8Pmpe9yTfgLFOt1xvYE8yM1StMcH1/bEub0zuTzsdNXY4fGMgG94/X3tBzxM
RNVf1Vnr/cwcLdwkPOzWVfBy7CMwENxTHGGujLI6M+uuTgI9nuX3TwYqw4MW
H1XaQEBAWKQjVxkdDRrJumUEOmO3znX0KKPOs+aOYQaBuIdOM6NLygi4zHlZ
HkXgffoqLdZYBfEeQ3+kHCCQ2yKOiPFTwZsj4vbHFgR6vQxTW9NU4LR+2DWW
TcB4uJ9v3KqCmIQtPpkjLDTuZNaWi1XgffuBqsFNFqbKs/YqqvLhMGAl8Ipm
YfNK4j1nBz6Ut42PfW3LQsW41g77k3xElVhfXCdhYlrVeuxpPh/GM6v1rBYm
FBZNjWfb+Vjh7qixj2bi9zxuauIUH0ZfPEzpxky4txg0xcgLoDjvxktb++Ot
lE+MbnMBnjy5zFYXMVDg6pAd5CZA/8vmfbPbGTDxYYY5nxJgpS31vPM0HcX1
M2HnRAKwivPPh2XRkTk/YbhULcCglUX5pW10xAbJVvV0C5ClkU57PUpDrXOD
dPaNAGdGXaeKEmlIii/7kLAowPFpsWhFj4ZKc9bRZAUSIbu8KNpdVJjzp025
uiTkbt+QWIVQ4bu1yNFkC4m8xGRTXwYVBsGF1+ccSVwOjndsKJGBWevHqoiD
JMbrcvf428ugxEiO1XqExLGDTs9OjFIwYE7YTUaTYLt6BEliKdgUWfYj9QIJ
Fa1T1WokBfI2PQXrM0ikb0q4VxssFe5l/p3tdpUEx3KVSC5YFeo7pvZVlpJY
cDuKxwMS4ZyGzovNt0gUjXtrlhASodzHh9HSBhLUlc+HFO1WhPkOzy6q3yUx
NrtsvTFyWcj8q0vzShcJ0VRI9kLFkrA5cTD8bB+JfwCj3zMF
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJxF0HtQVFUAx/EFA5bltY977245NMuIiA0YC+iQaP4kCuwFGg4ERCvPpVEg
VEYFlKxmAqVWJRZQxhVohpGixSZBmmAxSGSRgEJRm1wLkN7LQ+S523aazj0z
d858/vn+zlyf1NxdGY4CgWC3/fv3/u8w+P+ODXlDGzosQ0LmUOs4x0Cf2a7M
bpDB0F+XawpkYKmWt9QWyCAMObCuJZIBbhzYPhwtg7r6+XuVSQy0guEh59Uy
tNk4XVE+A3PI06nhf0ohzpx8NbWUQVDWyencTik0/Veco/UMSmp+Pd5wSgpj
8ImOwFYGgzdekN1Ok0JRnVwgG2CgdGio99gkRZ4tcMPCGIO8UIfQCKEUvRm2
8Z+WGBizUroL7kig7B+s7ZayEJ/9Kq7pUwkOBdftvriehXpAMX7vqASDVfs9
tGBhcCg4yOyUwN8W2XMwnoVg4/dOO9ZIUJLBFSflsIjVBFUWPxRj1PQgdPv7
LPRny/0uXRMjKPjKH37nWFgGfrs8US3GB1VlDe5fsIBjdNTqvWKYrUnJ09dZ
aDd+civmWTHCMgKZUTMLs8ZR855YDK3Javr6kf09YZ2Wt3u8MKkafLfek4Pg
/GHJ3WwvoOpCeOlaDnqn0OBITy9UWfNncrZwwN6/dn12yROW9MimuNc4mIcb
93Pxnog2sWmb3+JQ8kxaxbElD+hVD55QvsNBqff+cvK8B+Z1bcNOVRyMzqMj
OyM9EGstLfu9mYN63+m59kl3NKYnRQz12Pd/eFnuW+4OgSlg8fKP9v3NLmHl
KnckqKwt52bs+xe6EuZG3GDQfZd9XCSH2aXo8JtH3CC06n00PnKU5Gyq6X3S
Der0/NuvhMmhHLG0q74Roa3vuVMhMXIYw5vu1mSJIFaxOx7PlENdl7G8yl0E
jW5CYCuSQ+Cq9N5ncIVxpbVt7Iwc+tw7W2/GuUKRXprXd1EO3KxI2bYgRF5f
or+hy76/JeZYY60QvUEB5o9H7fv1rnpJhBBK3Yqu8G/7vqjbeGTCBYdWBmL2
OCtgzDt6/5cyFwym6V2ivBVIFCkKi315z9a3MPIOZ+oPt77UbIjn7X9rLOrF
KSfqq6THO5n0eM+R3mPUWtLj/RTpraLuJj3eKaTHe570HKlPkx7vANJzoP6W
9HirSY/3IukJqCtIj3dS8/WPKn62baP/4/7y1Wss7y4maG4x2ko9G5W2fkPR
CvW6wsrkPZ8vUyeS3hJ1OenxNpLeIvUM6S1Q+5HePPXrpPeI+iTp8e4kvTnq
adJ7SL2W9GapE0hvhvoE6fHuIL1p6inSm6L2JT0L9T8XOyYD
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{17., 5.}, {2., 10.}, {2., 3.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{5., 5.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 3.},
  Method->{},
  PlotRange->{{0, 17.}, {3., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.34, 0.34}, {0.14, 0.14}}]], "Output",
 CellChangeTimes->{3.6031725423077526`*^9}]
}, Open  ]],

Cell["\<\
4.) It would appear as if the algorithm for finding the line perpendicular to \
the two nearest police officers tends to favor a counter-clockwise path. In \
this case, the robber doesn\[CloseCurlyQuote]t move towards the midpoint \
either.\
\>", "Text",
 CellChangeTimes->{{3.6031737291975346`*^9, 3.603173752402855*^9}, {
  3.603173799762591*^9, 3.6031738132229366`*^9}, {3.6031739617697897`*^9, 
  3.6031740725618677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleverRunaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", ".05", ",", "90"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031735895725737`*^9, 3.603173650318648*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1:eJwlkHk01nkYxV+RpBi/71eMJIp3/72M0iJTnqNSZKlIpJKlRZRiDJOojOwS
miwxhRZpsowsFXosJa1IYWyThFIvrRoOxpy559xz/7nn3M+5C9x8Nu+exuFw
nKf8X/4vffg/VbGtBzlRfRLokTExKRuleHXJHYnqYwm4SbvqzL9QPBG48EJm
kQQiK/qZa0MUXyiWHDZMk4Btq2pE7xuKfO++8prjEpAkaSR/fDXVZyvTHfdK
wKvpQVFzJ8WaMz3ssLUECpMsNkW3UOxVPh0VbSQBSz1RH2mk2OFw9ilfUwLW
rcmDBx5QlA22n3dfRgJtuv6daTUUL1bfiPMaYGG/XOCK1HKKXk4CM/KUhdc3
zML2FVOUV852LC9mAf8MNFXIo9jy+uywZzoLhdyGTwGXKYpLh4Sav7IguqvN
lv5O8Ua1MrfBk4UIF8+f756d4qcTSic3shC+LT23+RTFoj0tvcbLWLCfiKzr
Dad4zf7GVakWC2bzZB59CaFYa523PVuOhfuzW0tmBFB0TO8a3zoohqTrPeFz
fShmeeyMm90khlMuIyv091KcvGg+q6pMDMNy0kYzF4qSpQUB/ufFYD153tJx
K8XIh0VNwnAx5EoGsg/aUlz/yXNel7cYEt5mdZxcR7FSbdA+0U4MIsW8Txmm
FBOP2B41XyEG+9aB/pJlFCdW5SeO6oihRs2orMGAouKuhSl5M8SgPXbYfZBP
8X4xxrpJRaAnCR+Q16EY/znzkNpzEdTXbjHX/Z7i0uudqx/cFoHb+rogUKFo
Yx0jH5Ilgse51RE7FSg6a1eXGUaJIMXC0DOYQ1F5Q+q21z4iMBocn5/xjWDI
c/67FAcRzK9QzakYJuiaGXbAaqUI1De7y3YPEFzjc69rUlcE9hdaDWReEqzq
lIUiRREUT3qwem0Eb3raJez5IASOYHRkXSPB6IMPmzRahaBhEJPgXU/QnBcq
97hSCGYRs78lVBHsuxrHO35JCFvH/URlNwmGf5A1XhwrBFJaxu8uJHimedSk
z1cItobPpPK5BGcqRhqkOglh46qKEIMsghmCKmoFQlCQ833hmEZw9PLtgQme
ENxH338OTST4sT02r1BJCGfe6LddjyZYMGGx2+OzADwGFoe2hRKU8hSU1NsF
cGLbuHR6EEGedcel+ioBNElj5y/2I1hr2W5wNEcATzJef+fqRdD5L41r+vEC
aLgyqzreneCz5D/UX/oL4KckOaM7zlM8nBz/pO0CGBK3eAzZEXzlp3N37WoB
+ByLsdOxmvpnkUj+m1AARzpFk5vWELTd1bY8V0UAts/v7An7kaDWNLMd20f4
sMHIIarUiKA6J9BPuYsPNnJjuwdZgu168UFYywe96PIxbS7BLq1z/r7X+PB+
da7FFq2p/aB8V71EPkT3N9vEzCH4sLDb9EUgH5RcbRSrlQgeUzdViXThA7dR
GPTPdIJu/X83GZvzITEm6ILhBIPtpq0Rgywf0uY4/bL/K4MrdZcbZFA+BOu1
yV2UMvglgNbbjPJAeo6adfUxWKIQvIXzkgdxsQt+0OhmMCssormwjge7Fmk9
sW9hMOjYWnP3PB44fFqgmfCUwYeH63NVf+NB1Q4rtSd1DDI3udPuBfGgg3er
chYy+DbZ2yrAjQcbhNHUsoxB06UFUQILHmS7d9CoAga9M6fdajPgwdDXxsr7
OQx6PfLvjFbjgQk3js7MZJBzWvOzyTgXtDcaMpapDHbnTp9494oLFiM9JTEJ
DLZWrR3LeMAFldI62SdRDE66vB+0KeQCZ538iEoog81flRomk7lwKPBevP2R
qb2usisFIVyYs8TwcYovg2lbJn1dd3MhJfhQXud+BtVCPxoSKy6w+/IX6boz
mH0ou7d6ERfE2nOdPJ0ZNJ6jG+OnwYX87k6dAjsG/wURW4/1
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1:eJwtUws0lAkUnvkf0kMUNYPBzD+oyEiNTB65kUdP6cFW29MikXePxVFthk1e
obDkzZqykUNSbd3KtlvySkSypdKTSfIqYWfP7j3nnu9857v3nnPPd69gb8BG
T4LFYm1X5L/4f8B/oI/PI4JvGJiwQHIz0n78rRBvX6qvLtrKgpIEJvp1sxCH
M8afHJWyIHC/PnP9qhDnZy8UV5azINdpRWhkgRCPO2f22nWyQG84otMkTohf
Dm1ZvZBmg1zl5ZX7oUJsMLtbFihiw6eDjgFbdghxoMI4U82dDWXqLI8GByFW
xfQVzTjKBtHi376Yi4ToovT4hGcxG8yM5Blxc4VYkiIhePVsGGo0uPBwgsGX
PgNKZp/ZAIzlGeU3DO6q8k0s4hIgK3VDUSODloNHysJsCEgnL6U6VDPoEidO
urSHAI1Kl7B1OQxaRz/wXyMlIGywpd0xhsHoYP3dBiUEWBhWNYoCGDy0JarE
+j4BUyqWJdDuDCarjEYlfFDoB2oc65Yz+Fj8kzF3Bgnz8i+LjhkyKPbeXNdm
TILrzpFI/ZkM5pqqxP+5moSmseyQK0MCbOoaS36zjwS/Tqe11l0C1IjZ/2VJ
NAlK9jpry2sFyDoob5Plk2C4aahGo1SAx1betHa8QYIj7fvcJ0WAfiMaFkod
JCwQjqqUhwlwYFl8/esBEr43VD3zZo8AR7TTyZ7pFOT2iR+orRJgR0Rv+7iQ
gstirZkLFwnwnSe1WmRFwS81lTXLOAJ0ic/bEOJKwd+j7ostJ/jYZrHt1T0v
CgJ86p+Z9PBxc6loTBROwTldP9GcB3yc9JoXm5NAwYsq08T+Cj72mn+TcvMo
CAptOIwZfFy6t/bl2QoK7A437JUe4+MdojyDc4eCd20ZjbbefNyfcD8n7SEF
jjmn7frX8VF87W6/ejcFT3/Uc0gT8/FMWUvsSbli3ts/PM21+fjsWHjg0FcK
YnpFkjo2H699jJVtVqIhWR50vqJJD7nOxMpCNRq8v5CX8ZweTtiobunWpGGW
cnfHrf16intR/arM0LBM96B3tYUeVjtlbeUuoMHN49HVfEoPr41lFc4wpeGE
x01LabMuuoo9OC+X0HBLI/+73dm6aELVf023oOH4pvgkc19dNCzwLzK2pCEw
1shHSaKL0j23I9KtaHC2koU8onQx023n8FMFP8svXpPXrINWXNOMYUW9W8H0
NP9sHVSrvjzxQkJDy94P9HJfHRQbuTzKMafB4/SGjbMkOjhkF/DUyIwGad80
eE/pYPGiTx+PG9MQoB+cdb+Zh7mntk7m69PgHyRYXpnNw7oGHY04Hg1Bmy9Q
Ml8ePua8c7VSp+HGCof28xIe+o52jVxUVuxv7iu7RvOwfc6jPT3fKEjkhQd2
PdTGilVJU7s+UrB6jrPJ7FxtnN87FJOq8GNQWvR6+wFt/OGd6dlpCr8M9N/L
rltqY5VN08zltxT9lG/sUmVtnAx8JTcpoyC5S55b16qFAtm4W0cmBa3lmtMj
C7Tw916jONsYCrx4ze9dgrTQUvxqdFcQBTq5GZ72tlrIyF+ZWG6jwGZRX8E2
FS1kFw++qF9BwYGwU01pnZo4cTJrRGs+Bdz1tZxxmSbaZf4VIlChoL/wenHc
EU2c9N70c3c/CYdaLp53dtLEJPvwxO0tiv8JNdywZK4muk8FlaRKEtpkktvr
e7jYe7qk7GgqCQa7ahacq+Siq97H9cYhJPDN/Ev5UVx00k/tS9lAwq9Xbf06
N3HRsNftytWFJHh984luFHLxZJ26Ut4UEjbml86e/MxBt+IYd+duAvw+hDN+
tRz8dn3UraKGAOuxxcg9w8G49trHz5MIiN3hLFfy4mChemtrqxcB96KkxRIL
DhoUjoSmWBFATLPrKFPm4D5TPounSgA3uMDP/8lc9HZPfBvUzYYmixdWh0rn
4j9Mv379
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1:eJwtknk01QkUxx/ee7+Ft9QbawZJUyqlLK8Sv5shRbKVZqic0SjZl7RJGZR4
tAgtLymaUlKyTLTeFiVLGk1DEqUSD/VEkfDmzZm559zz/ed7vvee8/lO9g/3
DFBlsVi+yv1X/xsS/lc8vaB0QOZLgupFg66vZiRKpXEiywoSAk+5OCz0JTHb
7MCst99RcJ9IP3khmcT7na757CgKvF3DMueWksjfQ8fkNlCwgj/kVvKSRCOr
15a3zWgwFp95pU5QaCNvZ4Wn0dBK6QfrzKGw5AEr+FoPDUet50y5uIrC6T5G
bkUu6pDe5qc4vIPC46KfJF4X1cFrorEgM4fCWFdxagVPA3pT/1gZcIvCU9e7
kzrDNUASqjtc0kphiphZ+a5RAzonMMe0hinkCW0PVFjzYG+pZLNISGNF1F/7
10h5kDLbYEhgQqPqsF3xHRYfalP6PVwtaOzfoJptuoEPwpPz3h+zpzFrcMAt
q5YPrYHWsq8eNE57zD7KnSsAvWKDruhfaFz6hrMzPlsArmf4JqJIGhtt+7So
UQEo+o7O+xBPo8mpRdImcyGE9TP2iw/ReFyPLW1cL4TAHSVHNuXTqHLjXVPo
TiH8XhZyaTSJxvgdNmC7TAhsPktDP41GzSlmRju0lH76ZU2Y8l7EO6d9Dx8I
wFZNtFm+jUb52+i/N/gLwGV1ZXqCHY2P9N6kHR3lQ4jx84+N/jQu+Gz4xuYY
H0412J4In0yjYW5zdIgFH+5e3XW52oHGHxR+T5428ODPVaNa9RwaLRVe+7o3
8SBL4uBwYiqNbT11TnIOD3LqP7uxZEp+hlsC+nM1oMjnRvIgl8a3L/mFZTYa
4BLGZPfWU5jo8zTv3DN1+Oh+9nZtF4WWhUt97SLVYeacaaOZVyict27h9Onq
6mBw2SqPqqXQIO5ORd5ZGiRjDY7sLAq9bvOG9wINB7U/BWcXKfmfv9Anf0FB
ybngbKdtFKbzXkxpjKEg8WfevjUHKSxtzthoMYGC84MzeCG+FNYm5NiKCpX9
FXG1lkVT2DtbIItYQsJ8neuOcXbK/N52P/dXBBRM5Oxf7k1hl7d9cFEsARbL
ItYnTabwSfkhdromAeLVdct9Fyj7JV7TIivmwpaorVeS2RRyMm4+rHHmgtw8
71yoPoXvdFSfmXZywCqzqSn1PYnFDVbadDwHCsSpG3crSBw1yWOCJnHAya1q
64EaEn09He46l7NB/HVS6/4OEp/me5QVurPhW5Nmd1YRiTHbq9elydTg5rGM
FmkViVtXt1b17VGDnbGtbTkHSQxZWp/42FANtCf295wtIHGv9LmB+XVVsPzo
33w2msQk6b0O4SpVyB+Iu18sIdHuyIyUKLkKDOhfXVfsTWK8d4OLV6oKFCQ4
jleGkVinFdhdNlUFEoQx+tcWkLh/2vi5rNssmG4qUr3nQWK+s4f1kA8LtAsl
7ff0SXT3dHl9uVvBNIu7qDpL5f83vV9HGSmYDKnDoXoFgSq2AW6WK8eZ0+WZ
Zs+0SZRpFSwcSh1jWjqmzWrqIJBzMfVMxa1R5jluj2gbIZBXHZkY+/kbs2kk
qvRVFYHyQnHPItNvTKAksO79SwKfjPjfV/iNMNwYTzNZAYFOnZEz7xz+yoSW
5MzvRwILar5XS6oZZhysS3IHJAT+lmwT5Dg+xPQa+hWN5BPodj3LnrQaYuL0
5PyxMAKXuIouPAr8wnSlOk1lJxMIbe2Jabmfmdc7L8VxPQmMS6zucX06yJSf
sM/hBRFY/Zj1UEgPMtQksz6BFYFhM5g5jbYDTGXIiEjblcC28GT1rM2fmKFH
VWt1dQhUbBqL9i7oZ24Vz0wxMiewVdbjrtsuZziET4PxNy5607srWybKmThN
3TFTEYEnqmPNbA5/YGSOuYtntXFxV9DV8ZsjvczaFbMjLL5w8VcyoPLHwB5m
r69zmdUdLv4Dvj+PXQ==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJwlj3s0lAkYh6cx5rswFzMlZZXkRJ1yWxXt5ntJDooVs+VktGo1TeUyScMo
k4yYMoq2pCRJFxVWOLuzon1rS7owulnaVtJuVyoK5TJte/qd8zvPv88zbU18
6Fo2i8WK+Pz/+WXj4QuFuGCc1HDzLzEksvVHD/4qQNdSbqG1Xgx7Iy9+nBUn
QF1+1cS+/WIY3/yad3G6AKV5Xk1BCWJYzlns/H07H69NEo66hYjB/jZhMpDN
R5n/z80lTmJIhw2q4158JG72TCvkieH2hLrGNW95eFe2/vTUXhGciXaXflPC
Q/7XujbnZhF09x3qcl3Gw7573X03K0RgdCxyXMriYbrHM+77PSKwHPJxzq00
R5PT9m9OK0Qw7nownyM1x7YLtcuehYpgYmjrYAVpjoZCs5Pn54pAUPds5v5a
MywapVy5k0RgnXinr/4HMywfCbT4Z9QClq8PKXSizTB6zHjI/YYF3FtfJqkZ
ofGrT9V2Ow9aQOgGFt+jl8Z7rHXn7kdbQOuG8Gv1nTTq2NbuM9wsIHhjVZp3
K42+HEO98pMQbm0kFzReonHUVLP42i0hBMZEvQusobGWmN8y8bAQmmL05YYT
NMZQr5bL1wnBL1Yok+TTaG9W/EjvLoQrsfKpHVk0PjQPk1NsIfjEYXukikYH
G353zVEBYJzVvu4NNObbKt9JPAXgFa9Ysk5Ko6l9J2fwLh/q45s4PUE0Jjr4
WR6M48MChe1FBUPjk1mVDh4UH/SK5KQBFxpDnSw9O0p5MG9Tq0uKHY2XXNWB
KV48qN3k+NIoptFl7tMI6w5zcEtIK9WY0ljsERxbv9kcqhLapeQQhfxvf1FH
8s3BabOLZc5zClOZKbnGMjMo36w1WDygsMcns6R4kRnMSuzS5t+kMMLvdTV0
0lCW6OFj3UDhjYDlVx4n0zBjS+5IcSWFnkEX76eLaTix5Xmt/TEKy0JmPJte
SYGdEuLO5FE4UbLnwxV/Co4pCxycNBRmrhikZE9ImJL0tqs6kcKBlausCTUJ
R5L8D8+XURi9qnF2mRUJk5OPhdWvoPDuaievgBoCCpI/mHsHUOizNv+7l0EE
WKpCGq8uoPC83BiV/ZwL+1Vl2wNnU2gbI0uYreGCKIXlabChcG98i6bZhgu5
KeH9YQIKjQnzDsTpTYG/tepcO4vCWOXRU4IwU9BtJddG9pP4UMXVV/VygN4W
NaX7CYlLUuOuL9NyQLtN/6fsPol1aW0P+u04wE0V5r1qJHFmhlfPTw0mkJEq
D1ToSSzIOjXmHm4CbDWaDJwhkcjmC9r62ZCmtmpQFZKo3KO0Tcphg1GtUBp1
JP6b1+lq5ciGbdubnDVqEiUH/Bb9dnkcDG+3fUEoSPyjoFKyMnIcJKclH9et
JtHtiKVsZIgFg2mtERZhJJYUq5OO7GNB4g7HCfm+JApLn2oXzmFB/460lsnz
SDQuLXJv2PuJUaS3ZxU7fO4Li13x6YqReZ3u4m0/6XPPyoUp3sNjTIxGO1xG
f/ZfzSvSOI8xLzVdNXNGCVTK//79avQoI8/wiK3uJVASX9FNHB5hnmbkzpj/
iEA3ZappoGGYid75/NGFVgKFqUGOOs4w070TDsFlAl9rbJa0eH5kojILQq/W
EHhrd2+sMP4D05n51izwJIFn8xpyQ08MMdIs/6st+QRqC3Jq9ncMMg+yjqnD
tATKiiPb2viDTLj2w/x2FYG+p+Z8tPIdYNq0IX3SjQTaVYxZR6jeM5JdZWcf
Swlk1TZ7FVW+Y+7sYkXLggnsrCta/ehJPxOyO9zmFUNg/aXYjGmT+pmW3VVt
8a4EHm5aePrH4D5maTaZ+96OwGQD78ZJzVvmRnZUgGo8geXlFzoMm94w/jo9
22hKoLwuYqrkYS/TqBPWpw9x0b5pJLrdr4fxzZFvIV5wset+4Vnp+ZfM5Rx0
0j3g4n+YWIz5
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{15., -5.}, {2., -10.}, {3., -3.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{5., -4.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -10.},
  Method->{},
  PlotRange->{{0, 15.}, {-10., -2.844340713996135}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.3, 0.3}, {0.1431131857200773, 
   0.1431131857200773}}]], "Output",
 CellChangeTimes->{{3.603173610468663*^9, 3.6031736199416103`*^9}, 
   3.603173652790895*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution (iv)", "Subsection",
 CellChangeTimes->{{3.603164550369109*^9, 3.6031645553406067`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Simulate", " ", "a", " ", "generalized", " ", "robber", " ", "running", 
     " ", "from", " ", "three", " ", "policemen"}], ",", " ", 
    RowBox[{
    "including", " ", "if", " ", "the", " ", "robber", " ", "is", " ", 
     "inside", " ", "or", " ", "outside", " ", "of", " ", "the", " ", 
     RowBox[{"triangle", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Runaway", "[", 
    RowBox[{
    "police1_", ",", "police2_", ",", "police3_", ",", "robber_", ",", 
     "length_", ",", "numberSteps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "If", " ", "the", " ", "robber", " ", "is", " ", "inside", " ", "of", 
        " ", "the", " ", "triangle"}], ",", " ", 
       RowBox[{"invoke", " ", 
        RowBox[{"cleverRunaway", ".", " ", "Otherwise"}]}], ",", " ", 
       RowBox[{"invoke", " ", 
        RowBox[{"easyRunaway", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"checkinside", "[", 
        RowBox[{"police1", ",", "police2", ",", "police3", ",", "robber"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"cleverRunaway", "[", 
        RowBox[{
        "police1", ",", "police2", ",", "police3", ",", "robber", ",", 
         "length", ",", "numberSteps"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"easyRunaway", "[", 
        RowBox[{
        "police1", ",", "police2", ",", "police3", ",", "robber", ",", 
         "length", ",", "numberSteps"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6031645628993626`*^9, 3.603164563685441*^9}, 
   3.603175224072007*^9}],

Cell[CellGroupData[{

Cell["Test Cases For Solution (iv)", "Subsubsection",
 CellChangeTimes->{{3.6031645692609987`*^9, 3.6031645759386663`*^9}, {
  3.6031768492517414`*^9, 3.603176850608334*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Runaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", "0.1", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031618440499907`*^9, 3.603161923109991*^9}, {
  3.603161968217991*^9, 3.603162013595991*^9}, {3.6031636453629894`*^9, 
  3.6031636481739893`*^9}, {3.603165406865989*^9, 3.6031654239759893`*^9}, {
  3.6031654581869893`*^9, 3.603165512104989*^9}, {3.6031752205656567`*^9, 
  3.6031752533169317`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1: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
TAY+52PO4bvO9h4J/gRCiLCz
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1: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
9PZt/HAF+8gq+AuPu9/6
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1: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
8PSmBKfeXO31eSvEur1+YS+7JPg/Eh272A==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{0., 3.}, {-3., 0.}, {3., 1.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{1., 1.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  Method->{},
  PlotRange->{{-3., 6.4788087850837455`}, {0, 9.419538993292}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.18957617570167493`, 0.18957617570167493`}, {
   0.18839077986584002`, 0.18839077986584002`}}]], "Output",
 CellChangeTimes->{3.6031752547860785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Runaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", "0.1", ",", "100"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.603175266612261*^9, 3.6031753021858177`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1: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
+r0=
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1: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
d4XoP/0uF7s=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1:eJwt03lQlHUYB/DNnEIUWZa9z/d99+JaQCZTV5HHjMyUQtTARXBBMS8EtVLX
wVBTNAU3blZRdMajMXBVUMGox3NBQHfGNFtFUSg00yjlWlgqfr7vzDvff975
vc/x+dGpGXFpIzgcTtr/73C+fvj4Or3A3nw4o8nAx58idv9oOOcF5rLoh8WJ
fNycJsxKXD0KuEuffJy6i4+RpYcm79J6A5Lv+Dh4PcR99r43ZP5rCO3v4OMF
z7nzHQWjgWp2ll/hCdASPn09b9YYcJau87GCACctvjEeRvhANjlXgH1FC16l
1/pAeETtn7r9AjzX0HF6X+ZYaBtKXPhPowC/HMhY06j3BWvTUFN9rwDHhw6E
9T7wBSB1CNnzudC15P0T8+YK0dW489PvjnKhYlynlNoiRCP5nx/EDu365lmV
EG2D/oJfkvyA0zRctxDd5P9+YC+5uXyrtwhNYQdvjRTwwLxk7a8xE0VYR+rh
AXecYKZkqQilqUH5Ec08QNKnCC2kPn/IvG4KsF8UoauwJta8zR+oEk/Jpr9E
aCT1+oNzccXbMxRitDnAN8/Ih2xStxjd5h0vNMV8CPf89nvrBjGa3E0tF/7m
QxvpQ4x1BX6VcTECsBYHX/v8ZzFKDfF7nh4XAJC+JGi5tn9l9kghdIWtOTI6
XIKuRY8/EpmFUEH6lKCxXx9UdUEIsY1nvz68W4K2/PRR0SIRcIqH+5agO/jM
k3trRWBPHVw8qVOCpqt9jrU3RGAmc5BiXfLUY6OCxMAdnDbd+Z4UpX3bdlRs
FwOSuUjR8m1j2oRHYsgsymE+OyBFV5Bv9I0pEqDInKRovDJPk1YqAWdoyxtD
/VK0JdneHHwpgWwyNxm6ex4+zv9ECuENvEeF82VosmovBZ6QQhuZowzrAlce
wrdkYE1JwOBTMpRetmfHp8oAyFxlaFnYs+hFvQy63OUHL42Ro6t7ctR2iRwq
yJzlaNy7RSn/Qg6xhe2bFyyToy3A4TntlAMnZXjucnRfHNM6M0QBdkNgctdl
OZoS435oy1GAmexBjnWvSvatb1cA17E6MkelQGleq2VslBKQ7EWBFr3adMSm
hExztVy5SYEuXDZpSo8SKLInBRpNVeJbc1Tg7O8fqL6jQNvLl73LK1WQTfam
xCySFIQXRN2bFaFEA0kK2sgeldhKkgJryPa6x7lKzCVJAZC9KjGSJAVdV6+X
bXyqxOckKagge1ZhOUkaYhdxN3KjVRhDkgZOyPDeVegh+6fB3jc/4ViFCitJ
0mAmDlSYRJIGbv6+CVMHVehDkmZ9UFhPfDBwvihz9x/BFKYHPxLejmdYLxQq
iBcGlqX6D9QsoLDliq5n5RmG9UNhFvHDgDjs7IotORQaklfdHuGrZj1R2Eo8
qaFhIME1u4bC3N5T1WUr1KwvCiOJLzVsaBiYKW6n8Lm1tyD8mpr1RmE58aaG
gKIDte1cGmOCItc5aA3rj0YP8aeBuynTAk9OpbHy8ta45CwN65HGJOJRAztD
O0otq2j0SWoY131Xw/qksZ741MLEgR1eH9hoTO/x8dvzjpb1SqOCeNXCE0fg
Br8GGlv2zu1irFrWL41ZxK8WSgubO+9302gILLtZ+0zLemawlXjWwYcpGfHH
1QzmXnpQFTtDx/pmMJL41kGfgedYN4fB54mavM7DOtY7g+XEuw6Ou6vfjfqK
wZju5embh3SsfwY9xL8eEhzxR70rGazMOzlbYNKz94HBJHIf9OBV6BbccTHo
E9Ad/H2Nnr0fDNaT+6GH/wBdW+kU
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{-3., -3.}, {-5., -4.}, {-1., -2.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{-5., 3.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{-9.472135954999601, 0.},
  Method->{},
  PlotRange->{{-9.472135954999601, 0}, {-4., 11.944271909999197`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.18944271909999202`, 0.18944271909999202`}, {
   0.31888543819998394`, 0.31888543819998394`}}]], "Output",
 CellChangeTimes->{3.6031753059101906`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Runaway", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "4"}], "}"}], ",", "0.1", ",", "300"}], "]"}]], "Input",
 CellChangeTimes->{{3.603175323655965*^9, 3.6031753750221004`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0, 0, 1], PointSize[Small], LineBox[CompressedData["
1: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
RrzobwqPZLcJ3yjQQf8Dk1G2Sw==
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[Small], LineBox[CompressedData["
1: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

      "]]}, 
    {RGBColor[1, 1, 0], PointSize[Small], LineBox[CompressedData["
1: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
hPCdLu8bynwOHY45/pyLB4GZcYXc5rL/AfLmLjU=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[Small], LineBox[CompressedData["
1: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
n20=
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     PointBox[{{3., 0.}, {70., 34.}, {0., 23.}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[Large], PointBox[{{20., 4.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 70.}, {-22.752482232124876`, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{1.4000000000000001`, 1.4000000000000001`}, {
   1.1350496446424976`, 1.1350496446424976`}}]], "Output",
 CellChangeTimes->{{3.6031753576133604`*^9, 3.603175375560155*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limitations of Solution (iv)", "Subsubsection",
 CellChangeTimes->{{3.603175399845583*^9, 3.6031754129018884`*^9}}],

Cell["\<\
Since \[OpenCurlyDoubleQuote]Solution (iv)\[CloseCurlyDoubleQuote] draws on \
the same code as \[OpenCurlyDoubleQuote]Solution \
(iii)\[CloseCurlyDoubleQuote], the same limitations are present and can be \
demonstrated with the same examples.\
\>", "Text",
 CellChangeTimes->{{3.603175416627261*^9, 3.6031755871493115`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2. Sudoku Tester", "Section",
 CellChangeTimes->{{3.603164600830155*^9, 3.603164617700842*^9}}],

Cell[CellGroupData[{

Cell["Task", "Subsection",
 CellChangeTimes->{{3.603164632733345*^9, 3.6031646343205037`*^9}}],

Cell[TextData[{
 "(i) Write a function ",
 StyleBox["eachAtMostOnce",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["[lst]",
  FontWeight->"Bold"],
 " which is given a list 4 entries. The function ",
 StyleBox["returns",
  FontWeight->"Bold"],
 " True if the list contains exactly four elements and contains each of the \
numbers from 1 to 4 at most once; the function returns False otherwise.  Do \
NOT assume that the list only contains numbers.\n\n(ii) Write a function ",
 StyleBox["consistentPuzzle [entries]",
  FontWeight->"Bold"],
 " which is given a 4x4 set of Sudoku entries (using the format described \
above) and which ",
 StyleBox["returns",
  FontWeight->"Bold"],
 " True if the given 4x4 set of Sudoku entries is a valid Sudoku puzzle (that \
is each digit appears in each row, in each column, and in each block at most \
once); otherwise the function ",
 StyleBox["returns",
  FontWeight->"Bold"],
 " False. \n\n(iii) Write a function ",
 StyleBox["correctPuzzle [solution, entries ]",
  FontWeight->"Bold"],
 " which is given a 4x4 solution and a 4x4 set of Sudoku entries (both using \
the format described above). Assume the solution is a valid 4x4 set of Sudoku \
entries which contains no blanks. (That is a digit is specified for each \
square.) The function ",
 StyleBox["returns ",
  FontWeight->"Bold"],
 "two list. The first list contains the locations of the squares where the a \
square with a digit in the 4x4 set of entries is incorrect. The second list \
contains the locations of the squares which contain no digit. If a puzzle is \
completely and correctly solved, both lists are empty. \n\n(iv) Write a \
function ",
 StyleBox["fillPuzzleSlot [entries, row, col]",
  FontWeight->"Bold"],
 " which is given a 4x4 set of Sudoku entries and a row and a column. The \
function attempts to determine the set of possible digits which may be placed \
at the given square - as specified by the row and column. The function \
returns a pair {exists , valueLst}. Exists is True, if the given square in \
the entries is already a digit. Otherwise it is False. valueLst is the list \
of values possible at that location ",
 StyleBox["based solely",
  FontWeight->"Bold"],
 " on checking the row, col, and block the given square is in. That is \
fillPuzzleSlot returns the list of digits which are not in the same row or in \
the same column, or in the same block."
}], "Text",
 CellChangeTimes->{{3.603164665894661*^9, 3.6031646715182233`*^9}, {
   3.6031658298370433`*^9, 3.60316584090315*^9}, {3.603165872572316*^9, 
   3.603165906199679*^9}, {3.603165946384697*^9, 3.603165954203479*^9}, 
   3.603166105211578*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists For Testing", "Subsection",
 CellChangeTimes->{{3.603176398526441*^9, 3.6031764144650345`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sudokuFilled", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sudokuPartialWith10", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< \>\"", ",", "1", ",", "\"\< \>\"", ",", "4"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "\"\< \>\"", " ", ",", "1", ",", "\"\< \>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "\"\< \>\"", ",", "\"\< \>\"", ",", "1"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4", ",", "2", ",", "\"\< \>\""}], "}"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sudokuPartialWith12", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "1", ",", "\"\< \>\"", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2", " ", ",", "1", ",", "\"\< \>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "\"\< \>\"", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4", ",", "2", ",", "\"\< \>\""}], "}"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sudokuPartialWith7", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< \>\"", ",", "1", ",", "\"\< \>\"", ",", "\"\< \>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "\"\< \>\"", " ", ",", "1", ",", "\"\< \>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\< \>\"", ",", "2", ",", "\"\< \>\"", ",", "1"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "\"\< \>\"", ",", "2", ",", "\"\< \>\""}], "}"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"incorrectSudokuPartial", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Null", ",", "Null", ",", "2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "3", ",", "Null"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "Null", ",", "2", ",", "Null"}], "}"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"with7", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{"sudokuPartialWith7", ",", "\n", 
      RowBox[{"ItemSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], ",", 
      RowBox[{"Dividers", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "4", "]"}], ",", "True"}], "}"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "4", "]"}], ",", "True"}], "}"}], 
          "}"}]}], "}"}]}], ",", "\n", 
      RowBox[{"Background", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"with10", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{"sudokuPartialWith10", ",", "\n", 
      RowBox[{"ItemSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], ",", 
      RowBox[{"Dividers", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "4", "]"}], ",", "True"}], "}"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "4", "]"}], ",", "True"}], "}"}], 
          "}"}]}], "}"}]}], ",", "\n", 
      RowBox[{"Background", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"with12", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{"sudokuPartialWith12", ",", "\n", 
      RowBox[{"ItemSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], ",", 
      RowBox[{"Dividers", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "4", "]"}], ",", "True"}], "}"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "4", "]"}], ",", "True"}], "}"}], 
          "}"}]}], "}"}]}], ",", "\n", 
      RowBox[{"Background", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"filled", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{"sudokuFilled", ",", "\n", 
      RowBox[{"ItemSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], ",", 
      RowBox[{"Dividers", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "4", "]"}], ",", "True"}], "}"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "4", "]"}], ",", "True"}], "}"}], 
          "}"}]}], "}"}]}], ",", "\n", 
      RowBox[{"Background", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.603176565783165*^9, 3.60317656663525*^9}, {
  3.6031767069032755`*^9, 3.60317675355094*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution (i)", "Subsection",
 CellChangeTimes->{{3.6031758640549994`*^9, 3.6031758681964135`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Determines", " ", "if", " ", "a", " ", "list", " ", "contains", " ", 
     "four", " ", "elements"}], ",", " ", 
    RowBox[{
    "including", " ", "each", " ", "of", " ", "the", " ", "digits", " ", 
     "from", " ", "1", " ", "to", " ", "4", " ", "at", " ", "most", " ", 
     "once", " ", "a", " ", 
     RowBox[{"piece", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"eachAtMostOnce", "[", "lst_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numLst", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", " ", 
       "current", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Ensures", " ", "that", " ", "the", " ", "length", " ", "is", " ", 
       "4"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "lst", "]"}], "\[NotEqual]", " ", "4"}], ",", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Run", " ", "through", " ", "each", " ", "of", " ", "the", " ", 
        RowBox[{"elements", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", " ", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "lst", "]"}]}], ",", " ", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "If", " ", "the", " ", "element", " ", "is", " ", "a", " ", 
           "number", " ", "in", " ", "numLst"}], ",", " ", 
          RowBox[{"delete", " ", "it", " ", "from", " ", 
           RowBox[{"numLst", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"current", " ", "=", " ", 
          RowBox[{"lst", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Numbers", " ", "greater", " ", "than", " ", "4", " ", "or", " ", 
           "less", " ", "than", " ", "1", " ", "are", " ", "allowed", " ", 
           "and", " ", 
           RowBox[{"ignored", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerQ", "[", "current", "]"}], "&&", 
            RowBox[{"1", "\[LessEqual]", "current", "\[LessEqual]", "4"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "If", " ", "the", " ", "number", " ", "has", " ", "already", " ",
               "appeared"}], ",", " ", 
             RowBox[{
             "current", " ", "will", " ", "not", " ", "be", " ", "in", " ", 
              RowBox[{"numLst", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"numLst", ",", "current"}], "]"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"numLst", " ", "=", " ", 
               RowBox[{"Delete", "[", 
                RowBox[{"numLst", ",", " ", "current"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"numLst", " ", "=", " ", 
               RowBox[{"Insert", "[", 
                RowBox[{
                "numLst", ",", " ", "\"\<checked\>\"", ",", " ", "current"}], 
                "]"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Return", "[", "False", "]"}]}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", " ", "all", " ", "tests", " ", "are", " ", "passed"}], 
        ",", " ", 
        RowBox[{"return", " ", 
         RowBox[{"true", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "True", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6031758932309165`*^9, 3.6031759017367673`*^9}}],

Cell[CellGroupData[{

Cell["Test Cases For Solution (i)", "Subsubsection",
 CellChangeTimes->{{3.6031661615592127`*^9, 3.603166166868743*^9}, 
   3.6031759317617693`*^9, {3.603176864069295*^9, 3.6031768652079525`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eachAtMostOnce", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "someVar", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031661694680033`*^9, 3.603166170045061*^9}, 
   3.603166812677017*^9, 3.603167234165017*^9, 3.6031674987020173`*^9, 
   3.6031759317617693`*^9}],

Cell[BoxData["True"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.603167532903017*^9, 3.6031759317627697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eachAtMostOnce", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.603167653073017*^9, 3.603167686652017*^9}, 
   3.6031759317637696`*^9}],

Cell[BoxData["False"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.603167668284017*^9, 3.6031676873190174`*^9}, 
   3.6031759317647696`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eachAtMostOnce", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "1", ",", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6031676906070175`*^9, 3.6031677081330175`*^9}, 
   3.6031759317657695`*^9}],

Cell[BoxData["True"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6031677087980175`*^9, 3.60317593176677*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution (ii)", "Subsection",
 CellChangeTimes->{{3.603175966285221*^9, 3.6031759717547684`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Checks", " ", "that", " ", "a", " ", "given", "  ", "4", " ", "x", " ", 
     "4", " ", "matrix", " ", "is", " ", "legal", " ", "under", " ", "the", 
     " ", "rules", " ", "of", " ", "Sudoku", " ", "by", " ", "looking", " ", 
     "only", " ", "all", " ", "of", " ", "the", " ", "rows"}], ",", " ", 
    "column", ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"blocks", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"consistentPuzzle", "[", "entries_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"checkList", "=", 
        RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"For", " ", "all", " ", "four", " ", "blocks"}], ",", " ", 
       "columns", ",", " ", 
       RowBox[{"and", " ", 
        RowBox[{"rows", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", " ", "\[LessEqual]", " ", "4"}], ",", " ", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Check", " ", "that", " ", "1", " ", "through", " ", "4", " ", 
           "appear", " ", "each", " ", "at", " ", "most", " ", "one", " ", 
           "time", " ", "in", " ", "each", " ", "of", " ", "the", " ", 
           "rows"}], ",", " ", "columns", ",", " ", 
          RowBox[{"and", " ", 
           RowBox[{"blocks", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"checkList", ",", " ", 
           RowBox[{"eachAtMostOnce", "[", 
            RowBox[{
             RowBox[{"getBlock", "[", "entries", "]"}], ",", "i"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"checkList", ",", " ", 
           RowBox[{"eachAtMostOnce", "[", 
            RowBox[{
             RowBox[{"getColumn", "[", "entries", "]"}], ",", "i"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"checkList", ",", " ", 
           RowBox[{"eachAtMostOnce", "[", 
            RowBox[{
             RowBox[{"entries", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "i"}], "]"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "If", " ", "there", " ", "were", " ", "any", " ", "false", " ", 
         "returns"}], ",", " ", 
        RowBox[{
        "the", " ", "configuration", " ", "is", " ", "inconsistent", " ", 
         "with", " ", "the", " ", 
         RowBox[{"rules", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"checkList", ",", "False"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Helper Functions For Solution (ii)\
\>", "Subsubsection",
 CellChangeTimes->{{3.603176006488241*^9, 3.603176016595252*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Gets", " ", "a", " ", "column", " ", "of", " ", "a", " ", "4", " ", "x", 
    " ", "4", " ", 
    RowBox[{"matrix", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getColumn", "[", 
    RowBox[{"entries_", ",", "col_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colList", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Takes", " ", "the", " ", "col", " ", "element", " ", "in", " ", "each",
        " ", "of", " ", "the", " ", "rows", " ", "of", " ", "the", " ", 
       "matrix", " ", "and", " ", "appends", " ", "to", " ", "colList"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"j", " ", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "entries", "]"}]}], ",", " ", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"colList", ",", " ", 
          RowBox[{
           RowBox[{"entries", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "col", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "colList", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.602906774372148*^9, 3.602906891607148*^9}, {
  3.603166379910042*^9, 3.6031664325483055`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Gets", " ", "a", " ", "2", " ", "x", " ", "2", " ", "block", " ", "from", 
    " ", "a", " ", "4", " ", "x", " ", "4", " ", "Sudoku", " ", 
    RowBox[{"configuration", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getBlock", "[", 
    RowBox[{"entries_", ",", "blockNo_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"block", " ", "=", " ", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "There", " ", "is", " ", "a", " ", "simple", " ", "function", " ", 
        "to", " ", "generate", " ", "the", " ", "correct", " ", "elements", 
        " ", "in", " ", "the", " ", "first", " ", "and", " ", "second", " ", 
        "blocks"}], ",", " ", 
       RowBox[{
       "but", " ", "no", " ", "such", " ", "function", " ", "was", " ", 
        "found", " ", "for", " ", "3", " ", "or", " ", "4."}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"blockNo", " ", "\[Equal]", " ", "1"}], "||", 
         RowBox[{"blockNo", " ", "\[Equal]", " ", "2"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", " ", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", " ", "*", " ", "blockNo"}], " ", "-", " ", "1"}], 
             "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", " ", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", " ", "*", " ", "blockNo"}], " ", "]"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", " ", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", " ", "*", " ", "blockNo"}], " ", "-", " ", "1"}], 
             "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", " ", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", " ", "*", " ", "blockNo"}], " ", "]"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "block", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"blockNo", " ", "\[Equal]", " ", "3"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"block", ",", 
           RowBox[{
            RowBox[{"entries", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "block", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.602906932643148*^9, 3.602906945320148*^9}, {
  3.602907010210148*^9, 3.6029070139941483`*^9}, {3.6029070745471478`*^9, 
  3.602907079471148*^9}, {3.602907115698148*^9, 3.6029072176201477`*^9}, {
  3.602907251800148*^9, 3.6029075139621477`*^9}, {3.602907601287148*^9, 
  3.602907720132148*^9}, {3.602907772709148*^9, 3.602907792265148*^9}, {
  3.602907823093148*^9, 3.602907827195148*^9}, {3.603166438436894*^9, 
  3.6031665215001993`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Cases For Solution (ii)", "Subsubsection",
 CellChangeTimes->{{3.6031661834466305`*^9, 3.6031661896490097`*^9}, {
  3.60317687418126*^9, 3.60317687564782*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"sudokuPartialWith10", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603168194560017*^9, 3.603168199270017*^9}, {
  3.6031682443163614`*^9, 3.6031682636312237`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\" \"\>", "1", "\<\" \"\>", "4"},
    {"4", "\<\" \"\>", "1", "\<\" \"\>"},
    {"3", "\<\" \"\>", "\<\" \"\>", "1"},
    {"1", "4", "2", "\<\" \"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.603168205711017*^9, {3.6031682489352846`*^9, 3.6031682643723717`*^9}}]
}, Open  ]],

Cell["\<\
We can see that there are no overlaps or numbers in the rows or columns, so \
our function should return true. \
\>", "Text",
 CellChangeTimes->{{3.603168929206753*^9, 3.6031689898877525`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"consistentPuzzle", "[", "sudokuPartialWith10", "]"}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.603168352466987*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"incorrectSudokuPartial", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603168285174531*^9, 3.603168286007698*^9}, {
  3.603168419715434*^9, 3.6031684198344584`*^9}, {3.603168889811753*^9, 
  3.603168912537753*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "2", "3", "4"},
    {"", "", "2", "2"},
    {"2", "1", "3", ""},
    {"3", "", "2", ""}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.603168286473791*^9, {3.6031688919937525`*^9, 3.6031689131357527`*^9}}]
}, Open  ]],

Cell["\<\
We can see that there is an or numbers in the rows or columns, so our \
function should return true. \
\>", "Text",
 CellChangeTimes->{{3.6031690133027525`*^9, 3.603169023110753*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"consistentPuzzle", "[", "sudokuPartialWith12", "]"}]], "Input",
 CellChangeTimes->{{3.6031681723900175`*^9, 3.6031681829840174`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.603168183769017*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"sudokuPartialWith7", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6031683177500453`*^9, 3.6031683186322217`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\" \"\>", "1", "\<\" \"\>", "\<\" \"\>"},
    {"4", "\<\" \"\>", "1", "\<\" \"\>"},
    {"\<\" \"\>", "\<\"2\"\>", "\<\" \"\>", "1"},
    {"1", "\<\" \"\>", "2", "\<\" \"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.603168319009297*^9}]
}, Open  ]],

Cell["\<\
We can see that there are no overlaps or numbers in the rows or columns, so \
our function should return true. \
\>", "Text",
 CellChangeTimes->{3.603169002165753*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"consistentPuzzle", "[", "sudokuPartialWith7", "]"}]], "Input",
 CellChangeTimes->{{3.6031682967548466`*^9, 3.6031683082511454`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.603168310618619*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution (iii)", "Subsection",
 CellChangeTimes->{{3.603176169902581*^9, 3.6031761746380544`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Compares", " ", "a", " ", "solution", " ", "and", " ", "attempt", " ", 
    "4", " ", "x", " ", "4", " ", "configuration", " ", "to", " ", 
    "determine", " ", "where", " ", "they", " ", 
    RowBox[{"differ", ".", " ", "Returns"}], " ", "the", " ", "list", " ", 
    "of", " ", "cells", " ", "in", " ", "which", " ", "the", " ", "attempt", 
    " ", "is", " ", "incorrect", " ", "and", " ", "the", " ", "list", " ", 
    "of", " ", "cells", " ", "the", " ", "attempt", " ", "has", " ", 
    RowBox[{"blank", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"correctPuzzle", "[", 
    RowBox[{"solution_", ",", "entries_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"row", ",", "column", ",", 
       RowBox[{"wrongLst", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"emptyLst", " ", "=", " ", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Looking", " ", "at", " ", "every", " ", 
       RowBox[{"row", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"row", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"row", "\[LessEqual]", " ", "4"}], ",", " ", 
        RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Looking", " ", "at", " ", "every", " ", "column", " ", "in", " ", 
          "each", " ", 
          RowBox[{"row", "."}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"column", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"column", " ", "\[LessEqual]", " ", "4"}], ",", " ", 
          RowBox[{"column", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "Anywhere", " ", "the", " ", "two", " ", "are", " ", "different", 
             " ", "and", " ", "entries", " ", "is", " ", "not", " ", "empty", 
             " ", "at", " ", "that", " ", "cell"}], ",", " ", 
            RowBox[{"append", " ", "to", " ", 
             RowBox[{"wrongLst", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"entries", "[", 
                 RowBox[{"[", "row", "]"}], "]"}], "[", 
                RowBox[{"[", "column", "]"}], "]"}], " ", "\[NotEqual]", " ", 
               RowBox[{
                RowBox[{"solution", "[", 
                 RowBox[{"[", "row", "]"}], "]"}], "[", 
                RowBox[{"[", "column", "]"}], "]"}]}], " ", "&&", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"entries", "[", 
                 RowBox[{"[", "row", "]"}], "]"}], "[", 
                RowBox[{"[", "column", "]"}], "]"}], " ", "\[NotEqual]", " ", 
               "\"\< \>\""}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"wrongLst", ",", " ", 
               RowBox[{"{", 
                RowBox[{"row", ",", "column"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "If", " ", "entries", " ", "has", " ", "an", " ", "empty", " ", 
              "cell", " ", "there"}], ",", " ", 
             RowBox[{"append", " ", "to", " ", 
              RowBox[{"emptyLst", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"entries", "[", 
                RowBox[{"[", "row", "]"}], "]"}], "[", 
               RowBox[{"[", "column", "]"}], "]"}], " ", "==", " ", 
              "\"\< \>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"emptyLst", ",", " ", 
               RowBox[{"{", 
                RowBox[{"row", ",", "column"}], "}"}]}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Return", " ", "the", " ", "wrongLst", " ", "and", " ", 
        RowBox[{"emptyLst", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"wrongLst", ",", "emptyLst"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.602909331202148*^9, 3.602909349505148*^9}, {
   3.602909476913148*^9, 3.602909733643148*^9}, 3.6029098063031483`*^9, {
   3.6031668944809875`*^9, 3.6031670922399874`*^9}}],

Cell[CellGroupData[{

Cell["Test Cases For Solution (iii)", "Subsubsection",
 CellChangeTimes->{{3.6031762301606064`*^9, 3.603176237988389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"correctPuzzle", "[", 
  RowBox[{"sudokuFilled", ",", "sudokuPartialWith12"}], 
  "]"}], "\[IndentingNewLine]", "filled", "\[IndentingNewLine]", "with12"}], \
"Input",
 CellChangeTimes->{{3.602909739335148*^9, 3.602909750524148*^9}, {
  3.6031675746319876`*^9, 3.6031675836629877`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6029097514281483`*^9, {3.602909800843148*^9, 3.6029098097591476`*^9}, 
   3.6031656070349894`*^9, 3.603165664037989*^9, 3.6031675844279876`*^9, 
   3.6031702358057528`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"2", "1", "3", "4"},
    {"4", "3", "1", "2"},
    {"3", "2", "4", "1"},
    {"1", "4", "2", "3"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6029097514281483`*^9, {3.602909800843148*^9, 3.6029098097591476`*^9}, 
   3.6031656070349894`*^9, 3.603165664037989*^9, 3.6031675844279876`*^9, 
   3.603170235808753*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"3", "1", "\<\" \"\>", "4"},
    {"4", "2", "1", "\<\" \"\>"},
    {"2", "3", "\<\" \"\>", "1"},
    {"1", "4", "2", "\<\" \"\>"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6029097514281483`*^9, {3.602909800843148*^9, 3.6029098097591476`*^9}, 
   3.6031656070349894`*^9, 3.603165664037989*^9, 3.6031675844279876`*^9, 
   3.603170235810753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"correctPuzzle", "[", 
  RowBox[{"sudokuFilled", ",", "sudokuPartialWith7"}], 
  "]"}], "\[IndentingNewLine]", "filled", "\[IndentingNewLine]", "with7"}], \
"Input",
 CellChangeTimes->{{3.6031676324289875`*^9, 3.6031676558409877`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6031676467769876`*^9, 3.6031676570339875`*^9}, 
   3.603170235829753*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"2", "1", "3", "4"},
    {"4", "3", "1", "2"},
    {"3", "2", "4", "1"},
    {"1", "4", "2", "3"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6031676467769876`*^9, 3.6031676570339875`*^9}, 
   3.603170235831753*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\" \"\>", "1", "\<\" \"\>", "\<\" \"\>"},
    {"4", "\<\" \"\>", "1", "\<\" \"\>"},
    {"\<\" \"\>", "\<\"2\"\>", "\<\" \"\>", "1"},
    {"1", "\<\" \"\>", "2", "\<\" \"\>"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6031676467769876`*^9, 3.6031676570339875`*^9}, 
   3.6031702358337526`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"correctPuzzle", "[", 
  RowBox[{"sudokuFilled", ",", "sudokuPartialWith10"}], 
  "]"}], "\[IndentingNewLine]", "filled", "\[IndentingNewLine]", "with10"}], \
"Input",
 CellChangeTimes->{{3.6031675944059877`*^9, 3.6031676186829877`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6031676087689877`*^9, 3.6031676197149878`*^9}, 
   3.603170235857753*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"2", "1", "3", "4"},
    {"4", "3", "1", "2"},
    {"3", "2", "4", "1"},
    {"1", "4", "2", "3"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6031676087689877`*^9, 3.6031676197149878`*^9}, 
   3.6031702358597527`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\" \"\>", "1", "\<\" \"\>", "4"},
    {"4", "\<\" \"\>", "1", "\<\" \"\>"},
    {"3", "\<\" \"\>", "\<\" \"\>", "1"},
    {"1", "4", "2", "\<\" \"\>"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6031676087689877`*^9, 3.6031676197149878`*^9}, 
   3.603170235860753*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution (iv)", "Subsection",
 CellChangeTimes->{{3.6031762539499846`*^9, 3.6031762573183217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "and", " ", "returns", " ", "all", " ", "digits", " ", 
    "that", " ", "could", " ", "be", " ", "placed", " ", "in", " ", "a", " ", 
    "particular", " ", 
    RowBox[{"cell", ".", " ", "Determines"}], " ", "if", " ", "that", " ", 
    "cell", " ", "is", " ", "currently", " ", 
    RowBox[{"empty", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fillPuzzleSlot", "[", 
    RowBox[{"entries_", ",", "row_", ",", "col_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"block", " ", ",", "column", ",", 
       RowBox[{"blockPoss", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"colPoss", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"numList", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", 
       RowBox[{"rowPoss", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"blockNum", " ", "=", " ", "1"}], ",", "i", ",", 
       RowBox[{"manip", " ", "=", " ", "entries"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"exists", " ", "=", " ", 
        RowBox[{"NumberQ", "[", 
         RowBox[{
          RowBox[{"entries", "[", 
           RowBox[{"[", "row", "]"}], "]"}], "[", 
          RowBox[{"[", "col", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Ensures", " ", "that", " ", "the", " ", "current", " ", "digit", " ", 
       "is", " ", "not", " ", "returned", " ", "if", " ", "that", " ", 
       "digit", " ", "is", " ", "illegally", " ", 
       RowBox[{"placed", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"manip", "[", 
         RowBox[{"[", "row", "]"}], "]"}], "[", 
        RowBox[{"[", "col", "]"}], "]"}], " ", "=", " ", "\"\< \>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Determine", " ", "which", " ", "block", " ", "the", " ", "cell", " ", 
        "is", " ", 
        RowBox[{"in", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"row", " ", ">", " ", "2"}], ",", " ", 
        RowBox[{"blockNum", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"col", " ", ">", " ", "2"}], ",", " ", 
        RowBox[{"blockNum", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"col", " ", ">", " ", "2"}], " ", "&&", " ", 
         RowBox[{"row", " ", ">", " ", "2"}]}], ",", " ", 
        RowBox[{"blockNum", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "For", " ", "all", " ", "of", " ", "the", " ", "digits", " ", "from", 
         " ", "1", " ", "to", " ", "4"}], ",", " ", 
        RowBox[{
        "if", " ", "that", " ", "digit", " ", "is", " ", "not", " ", "in", 
         " ", "the", " ", "row"}], ",", " ", "block", ",", " ", 
        RowBox[{"or", " ", "column"}], ",", " ", 
        RowBox[{
        "it", " ", "is", " ", "possibly", " ", "legal", " ", "to", " ", 
         "place", " ", "it", " ", "in", " ", "that", " ", 
         RowBox[{"cell", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", " ", "\[LessEqual]", " ", "4"}], ",", " ", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"getBlock", "[", 
               RowBox[{"manip", ",", "blockNum"}], "]"}], ",", "i"}], "]"}]}],
            ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"blockPoss", ",", "i"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"getColumn", "[", 
               RowBox[{"manip", ",", "col"}], "]"}], ",", "i"}], "]"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"colPoss", ",", "i"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"manip", "[", 
               RowBox[{"[", "row", "]"}], "]"}], ",", "i"}], "]"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"rowPoss", ",", "i"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Return", " ", "whether", " ", "or", " ", "not", " ", "there", " ", 
        "is", " ", "already", " ", "a", " ", "digit", " ", "and", " ", "the", 
        " ", "intersection", " ", "of", " ", "all", " ", "possibly", " ", 
        "legal", " ", 
        RowBox[{"digits", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"exists", ",", 
         RowBox[{"Intersection", "[", 
          RowBox[{"blockPoss", ",", "colPoss", ",", "rowPoss"}], "]"}]}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.602909820691148*^9, 3.602909863174148*^9}, {
   3.6029099117381477`*^9, 3.602909933173148*^9}, {3.602909973965148*^9, 
   3.602910046585148*^9}, 3.602910084809148*^9, {3.602910147196148*^9, 
   3.602910604143148*^9}, {3.6029106799431477`*^9, 3.602910682717148*^9}, {
   3.602911008491148*^9, 3.6029110407121477`*^9}, {3.602911119788148*^9, 
   3.602911196332148*^9}, {3.602911233228148*^9, 3.602911284519148*^9}, {
   3.6031670988169875`*^9, 3.6031671161599874`*^9}, {3.6031671465049877`*^9, 
   3.6031672249479876`*^9}, {3.6031672633729877`*^9, 3.6031675406049876`*^9}}],

Cell[CellGroupData[{

Cell["Test Cases For Solution (iv)", "Subsubsection",
 CellChangeTimes->{{3.603176288384428*^9, 3.6031762980733967`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fillPuzzleSlot", "[", 
  RowBox[{"sudokuPartialWith10", ",", "1", ",", "4"}], 
  "]"}], "\[IndentingNewLine]", "with10"}], "Input",
 CellChangeTimes->{{3.603166859561988*^9, 3.603166879516988*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6031668803059874`*^9, 3.603170235889753*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\" \"\>", "1", "\<\" \"\>", "4"},
    {"4", "\<\" \"\>", "1", "\<\" \"\>"},
    {"3", "\<\" \"\>", "\<\" \"\>", "1"},
    {"1", "4", "2", "\<\" \"\>"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.6031668803059874`*^9, 3.6031702358927526`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fillPuzzleSlot", "[", 
  RowBox[{"sudokuPartialWith12", ",", "4", ",", "4"}], 
  "]"}], "\[IndentingNewLine]", "with12"}], "Input",
 CellChangeTimes->{{3.6031668207829876`*^9, 3.6031668417919874`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   RowBox[{"{", "3", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.603166843556988*^9, 3.6031702359137526`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"3", "1", "\<\" \"\>", "4"},
    {"4", "2", "1", "\<\" \"\>"},
    {"2", "3", "\<\" \"\>", "1"},
    {"1", "4", "2", "\<\" \"\>"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.603166843556988*^9, 3.603170235915753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fillPuzzleSlot", "[", 
  RowBox[{"sudokuPartialWith7", ",", "3", ",", "2"}], 
  "]"}], "\[IndentingNewLine]", "with7"}], "Input",
 CellChangeTimes->{{3.6029106129351482`*^9, 3.602910629515148*^9}, {
  3.6029108772371483`*^9, 3.6029108773151484`*^9}, {3.6029109292261477`*^9, 
  3.6029109384611483`*^9}, {3.6029110590871477`*^9, 3.602911060589148*^9}, {
  3.602911207584148*^9, 3.602911217637148*^9}, {3.6031667937899876`*^9, 
  3.603166797240988*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.602910630883148*^9, 3.602910685767148*^9, 3.6029108779291477`*^9, {
   3.602910931905148*^9, 3.6029109399471483`*^9}, {3.6029110459221478`*^9, 
   3.6029110611861477`*^9}, {3.602911205239148*^9, 3.6029112181901484`*^9}, 
   3.602911292390148*^9, 3.6031656074809895`*^9, 3.6031656579369893`*^9, 
   3.6031667980669875`*^9, 3.603170235933753*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\" \"\>", "1", "\<\" \"\>", "\<\" \"\>"},
    {"4", "\<\" \"\>", "1", "\<\" \"\>"},
    {"\<\" \"\>", "\<\"2\"\>", "\<\" \"\>", "1"},
    {"1", "\<\" \"\>", "2", "\<\" \"\>"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxDividers->{"Columns" -> {{
        Thickness[4], True}}, "Rows" -> {{
        Thickness[4], True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.602910630883148*^9, 3.602910685767148*^9, 3.6029108779291477`*^9, {
   3.602910931905148*^9, 3.6029109399471483`*^9}, {3.6029110459221478`*^9, 
   3.6029110611861477`*^9}, {3.602911205239148*^9, 3.6029112181901484`*^9}, 
   3.602911292390148*^9, 3.6031656074809895`*^9, 3.6031656579369893`*^9, 
   3.6031667980669875`*^9, 3.603170235935753*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{667, 730},
WindowMargins->{{180, Automatic}, {Automatic, 57}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
ShowSelection->True,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 225, 5, 139, "Title"],
Cell[CellGroupData[{
Cell[829, 31, 183, 4, 86, "Section"],
Cell[CellGroupData[{
Cell[1037, 39, 92, 1, 49, "Subsection"],
Cell[1132, 42, 2610, 59, 505, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3779, 106, 100, 1, 49, "Subsection"],
Cell[3882, 109, 2006, 49, 259, "Input"],
Cell[CellGroupData[{
Cell[5913, 162, 182, 4, 39, "Subsubsection"],
Cell[6098, 168, 1301, 38, 132, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7436, 211, 170, 2, 39, "Subsubsection"],
Cell[7609, 215, 618, 21, 92, "Input"],
Cell[CellGroupData[{
Cell[8252, 240, 698, 19, 52, "Input"],
Cell[8953, 261, 339, 7, 374, "Output"]
}, Open  ]],
Cell[9307, 271, 246, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[9578, 280, 315, 7, 31, "Input"],
Cell[9896, 289, 95, 1, 31, "Output"]
}, Open  ]],
Cell[10006, 293, 589, 18, 92, "Input"],
Cell[CellGroupData[{
Cell[10620, 315, 672, 18, 52, "Input"],
Cell[11295, 335, 297, 6, 443, "Output"]
}, Open  ]],
Cell[11607, 344, 201, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[11833, 352, 218, 5, 31, "Input"],
Cell[12054, 359, 98, 1, 31, "Output"]
}, Open  ]],
Cell[12167, 363, 583, 19, 92, "Input"],
Cell[CellGroupData[{
Cell[12775, 386, 674, 18, 52, "Input"],
Cell[13452, 406, 278, 6, 413, "Output"]
}, Open  ]],
Cell[13745, 415, 199, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[13969, 423, 216, 5, 31, "Input"],
Cell[14188, 430, 76, 1, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14325, 438, 100, 1, 49, "Subsection"],
Cell[14428, 441, 2238, 51, 332, "Input"],
Cell[CellGroupData[{
Cell[16691, 496, 133, 3, 39, "Subsubsection"],
Cell[16827, 501, 19457, 455, 2273, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36321, 961, 174, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[36520, 967, 685, 17, 31, "Input"],
Cell[37208, 986, 2772, 52, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40017, 1043, 442, 12, 31, "Input"],
Cell[40462, 1057, 2875, 57, 247, "Output"]
}, Open  ]],
Cell[43352, 1117, 346, 12, 43, "Text"],
Cell[CellGroupData[{
Cell[43723, 1133, 1896, 66, 180, "Input"],
Cell[45622, 1201, 5044, 86, 238, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50727, 1294, 129, 2, 49, "Subsection"],
Cell[50859, 1298, 20129, 474, 2004, "Input"],
Cell[CellGroupData[{
Cell[71013, 1776, 263, 5, 39, "Subsubsection"],
Cell[71279, 1783, 7346, 187, 779, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78662, 1975, 198, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[78885, 1981, 935, 21, 52, "Input"],
Cell[79823, 2004, 18204, 306, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98064, 2315, 502, 13, 31, "Input"],
Cell[98569, 2330, 8582, 149, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107188, 2484, 538, 16, 52, "Input"],
Cell[107729, 2502, 8798, 153, 241, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116576, 2661, 171, 2, 39, "Subsubsection"],
Cell[116750, 2665, 637, 11, 106, "Text"],
Cell[117390, 2678, 173, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[117588, 2686, 539, 17, 31, "Input"],
Cell[118130, 2705, 8295, 146, 238, "Output"]
}, Open  ]],
Cell[126440, 2854, 492, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[126957, 2866, 472, 13, 31, "Input"],
Cell[127432, 2881, 467, 10, 40, "Message"],
Cell[127902, 2893, 657, 12, 78, "Message"],
Cell[128562, 2907, 701, 12, 78, "Message"],
Cell[129266, 2921, 769, 15, 85, "Message"],
Cell[130038, 2938, 4127, 76, 249, "Output"]
}, Open  ]],
Cell[134180, 3017, 244, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[134449, 3025, 330, 10, 31, "Input"],
Cell[134782, 3037, 445, 10, 40, "Message"],
Cell[135230, 3049, 7584, 133, 247, "Output"]
}, Open  ]],
Cell[142829, 3185, 436, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[143290, 3197, 482, 15, 31, "Input"],
Cell[143775, 3214, 8782, 154, 241, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152618, 3375, 103, 1, 49, "Subsection"],
Cell[152724, 3378, 1840, 43, 272, "Input"],
Cell[CellGroupData[{
Cell[154589, 3425, 174, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[154788, 3431, 666, 16, 31, "Input"],
Cell[155457, 3449, 9554, 165, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165048, 3619, 541, 19, 31, "Input"],
Cell[165592, 3640, 9354, 162, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174983, 3807, 395, 11, 31, "Input"],
Cell[175381, 3820, 25790, 432, 230, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201220, 4258, 121, 1, 39, "Subsubsection"],
Cell[201344, 4261, 334, 6, 49, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201739, 4274, 109, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[201873, 4279, 94, 1, 49, "Subsection"],
Cell[201970, 4282, 2650, 55, 524, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204657, 4342, 107, 1, 49, "Subsection"],
Cell[204767, 4345, 6194, 178, 692, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210998, 4528, 104, 1, 49, "Subsection"],
Cell[211105, 4531, 4300, 100, 532, "Input"],
Cell[CellGroupData[{
Cell[215430, 4635, 196, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[215651, 4641, 308, 6, 31, "Input"],
Cell[215962, 4649, 147, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216146, 4657, 223, 5, 31, "Input"],
Cell[216372, 4664, 178, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216587, 4673, 227, 5, 31, "Input"],
Cell[216817, 4680, 146, 3, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217024, 4690, 103, 1, 49, "Subsection"],
Cell[217130, 4693, 3092, 74, 332, "Input"],
Cell[CellGroupData[{
Cell[220247, 4771, 133, 3, 39, "Subsubsection"],
Cell[220383, 4776, 1599, 39, 192, "Input"],
Cell[221985, 4817, 5709, 140, 492, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227731, 4962, 170, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[227926, 4968, 253, 5, 31, "Input"],
Cell[228182, 4975, 473, 12, 84, "Output"]
}, Open  ]],
Cell[228670, 4990, 203, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[228898, 4998, 87, 1, 31, "Input"],
Cell[228988, 5001, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229098, 5007, 303, 6, 31, "Input"],
Cell[229404, 5015, 412, 12, 84, "Output"]
}, Open  ]],
Cell[229831, 5030, 193, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[230049, 5038, 157, 2, 31, "Input"],
Cell[230209, 5042, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230319, 5048, 203, 4, 31, "Input"],
Cell[230525, 5054, 444, 11, 84, "Output"]
}, Open  ]],
Cell[230984, 5068, 177, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[231186, 5076, 156, 2, 31, "Input"],
Cell[231345, 5080, 73, 1, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231479, 5088, 104, 1, 49, "Subsection"],
Cell[231586, 5091, 4780, 105, 492, "Input"],
Cell[CellGroupData[{
Cell[236391, 5200, 122, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[236538, 5205, 310, 6, 72, "Input"],
Cell[236851, 5213, 832, 26, 31, "Output"],
Cell[237686, 5241, 627, 17, 136, "Output"],
Cell[238316, 5260, 659, 17, 136, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239012, 5282, 259, 5, 72, "Input"],
Cell[239274, 5289, 840, 27, 52, "Output"],
Cell[240117, 5318, 528, 15, 136, "Output"],
Cell[240648, 5335, 610, 15, 136, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241295, 5355, 261, 5, 72, "Input"],
Cell[241559, 5362, 658, 21, 31, "Output"],
Cell[242220, 5385, 530, 15, 136, "Output"],
Cell[242753, 5402, 584, 15, 136, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243398, 5424, 105, 1, 49, "Subsection"],
Cell[243506, 5427, 6036, 138, 552, "Input"],
Cell[CellGroupData[{
Cell[249567, 5569, 121, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[249713, 5574, 222, 4, 52, "Input"],
Cell[249938, 5580, 201, 5, 31, "Output"],
Cell[250142, 5587, 556, 14, 136, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250735, 5606, 226, 4, 52, "Input"],
Cell[250964, 5612, 167, 4, 31, "Output"],
Cell[251134, 5618, 528, 14, 136, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251699, 5637, 476, 8, 52, "Input"],
Cell[252178, 5647, 505, 10, 31, "Output"],
Cell[252686, 5659, 881, 19, 136, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
